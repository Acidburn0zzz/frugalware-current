diff -urN archive-2.0/Archive/formats.py archive-2.0_lzma/Archive/formats.py
--- archive-2.0/Archive/formats.py	2005-09-02 17:56:49.787788834 +0200
+++ archive-2.0_lzma/Archive/formats.py	2005-09-02 17:57:14.805148743 +0200
@@ -145,6 +145,8 @@
 deb = Extract('deb', "ar x '%s'")
 zip = Extract('zip', "unzip -q '%s'")
 jar = Extract('jar', "unzip -q '%s'")
+# tar.lzma extraction
+tlza = Extract('tar.lza', "lzma -d < '%s' | tar xf -")
 
 make_tgz = Archive('tgz', "tar cf - '%s' | gzip", 'application/x-compressed-tar')
 Archive('tar.gz',  "tar cf - '%s' | gzip", 'application/x-compressed-tar')
@@ -152,16 +154,22 @@
 Archive('zip',	   "zip -qr - '%s'", 'application/zip'),
 Archive('jar',	   "zip -qr - '%s'", 'application/x-jar')
 Archive('tar',	   "tar cf - '%s'", 'application/x-tar')
+# tar.lzma creation '-x -b64 -s25' is very good compression
+Archive('tar.lza', "tar cf - '%s' | lzma -x -b64 -s25", 'application/x-lzma-compressed-tar')
 
 # Note: these go afterwards so that .tar.gz matches before .gz
 make_gz = Compress('gz', "gzip -c -", 'application/x-gzip')
 Compress('bz2', "bzip2 -c -", 'application/x-bzip')
 Compress('uue', "uuencode /dev/stdout", 'application/x-uuencoded')
+# '-x -b64 -s25' is very good compression
+Compress('lza', "lzma -x -b64 -s25", 'application/x-lzma')
 
 gz = Decompress('gz',   "gunzip -c -")
 bz2 = Decompress('bz2',  "bunzip2 -ck -")
 uue = Decompress('uue',  "uudecode -o /dev/stdout")
 z   = Decompress('Z',   "uncompress -c -")
+# lzma decompression
+lzma = Decompress('lzma',  "lzma -d")
 
 
 # Can bzip2 read bzip files?
@@ -281,6 +289,14 @@
 			if self.path.endswith('.tar.Z'):
 			    return tarz
 			return z
+		# Lzma archive checking. I don't know much in python, so feel free to send
+		# me better way to check (by reading first bytes of archive maybe) at:
+		# tuxbubling@tiscali.fr
+		if self.path.endswith('.tlzma') or self.path.endswith('.tar.lzma') or \
+			self.path.endswith('.tlza') or self.path.endswith('.tar.lza'):
+			 return tlza
+		if self.path.endswith('.lzma') or self.path.endswith('.lza'):
+			 return lzma
 
 		return make_gz
 
