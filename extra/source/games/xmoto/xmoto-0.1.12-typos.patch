diff -Naur xmoto-0.1.12.orig/src/MotoGameL.cpp xmoto-0.1.12/src/MotoGameL.cpp
--- xmoto-0.1.12.orig/src/MotoGameL.cpp	2006-04-19 21:33:47.000000000 +0200
+++ xmoto-0.1.12/src/MotoGameL.cpp	2006-04-19 21:58:17.000000000 +0200
@@ -58,15 +58,15 @@
 
   int L_Game_PlaceInGameArrow(lua_State *pL) {
     m_pMotoGame->getArrowPointer().nArrowPointerMode = 1;
-    m_pMotoGame->getArrowPointer().ArrowPointerPos = Vector2f(luaL_check_number(pL,1),luaL_check_number(pL,2));
-    m_pMotoGame->getArrowPointer().fArrowPointerAngle = luaL_check_number(pL,3);
+    m_pMotoGame->getArrowPointer().ArrowPointerPos = Vector2f(lua_tonumber(pL,1),lua_tonumber(pL,2));
+    m_pMotoGame->getArrowPointer().fArrowPointerAngle = lua_tonumber(pL,3);
     return 0;
   }
 
   int L_Game_PlaceScreenArrow(lua_State *pL) {
     m_pMotoGame->getArrowPointer().nArrowPointerMode = 2;
-    m_pMotoGame->getArrowPointer().ArrowPointerPos = Vector2f(luaL_check_number(pL,1),luaL_check_number(pL,2));
-    m_pMotoGame->getArrowPointer().fArrowPointerAngle = luaL_check_number(pL,3);
+    m_pMotoGame->getArrowPointer().ArrowPointerPos = Vector2f(lua_tonumber(pL,1),lua_tonumber(pL,2));
+    m_pMotoGame->getArrowPointer().fArrowPointerAngle = lua_tonumber(pL,3);
     return 0;
   }
 
@@ -109,8 +109,8 @@
     for(int i=0;i<m_pMotoGame->getBlocks().size();i++) {
       ConvexBlock *pBlock = m_pMotoGame->getBlocks()[i];
       if(pBlock->pSrcBlock->ID == luaL_checkstring(pL,1)) {
-        pBlock->pSrcBlock->fPosX += luaL_check_number(pL,2);
-        pBlock->pSrcBlock->fPosY += luaL_check_number(pL,3);
+        pBlock->pSrcBlock->fPosX += lua_tonumber(pL,2);
+        pBlock->pSrcBlock->fPosY += lua_tonumber(pL,3);
         break;
       }
     }
@@ -138,8 +138,8 @@
     for(int i=0;i<m_pMotoGame->getBlocks().size();i++) {
       ConvexBlock *pBlock = m_pMotoGame->getBlocks()[i];
       if(pBlock->pSrcBlock->ID == luaL_checkstring(pL,1)) {
-        pBlock->pSrcBlock->fPosX = luaL_check_number(pL,2);
-        pBlock->pSrcBlock->fPosY = luaL_check_number(pL,3);
+        pBlock->pSrcBlock->fPosX = lua_tonumber(pL,2);
+        pBlock->pSrcBlock->fPosY = lua_tonumber(pL,3);
         break;
       }
     }
@@ -148,7 +148,7 @@
 
   int L_Game_SetGravity(lua_State *pL) {
     /* Set gravity */
-    m_pMotoGame->setGravity(luaL_check_number(pL,1),luaL_check_number(pL,2));    
+    m_pMotoGame->setGravity(lua_tonumber(pL,1),lua_tonumber(pL,2));    
     return 0;
   }  
 
@@ -162,9 +162,9 @@
   int L_Game_SetPlayerPosition(lua_State *pL) {
     /* Set player position */  
     bool bRight = false;
-    if(luaL_check_number(pL,3) > 0.0f) bRight = true;
+    if(lua_tonumber(pL,3) > 0.0f) bRight = true;
     
-    m_pMotoGame->setPlayerPosition(luaL_check_number(pL,1),luaL_check_number(pL,2),bRight);    
+    m_pMotoGame->setPlayerPosition(lua_tonumber(pL,1),lua_tonumber(pL,2),bRight);    
     return 0;
   }  
   
