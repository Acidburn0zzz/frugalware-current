diff -Naur xen-2.0.orig/xen/arch/x86/x86_32/entry.S xen-2.0/xen/arch/x86/x86_32/entry.S
--- xen-2.0.orig/xen/arch/x86/x86_32/entry.S	2005-05-22 12:56:32.000000000 +0200
+++ xen-2.0/xen/arch/x86/x86_32/entry.S	2005-07-19 12:53:19.000000000 +0200
@@ -72,10 +72,10 @@
         jnz  failsafe_callback
         testl $X86_EFLAGS_VM,XREGS_eflags(%esp)
         jnz  restore_all_vm86
-FLT1:   movl XREGS_ds(%esp),%ds
-FLT2:   movl XREGS_es(%esp),%es
-FLT3:   movl XREGS_fs(%esp),%fs
-FLT4:   movl XREGS_gs(%esp),%gs
+FLT1:   mov XREGS_ds(%esp),%ds
+FLT2:   mov XREGS_es(%esp),%es
+FLT3:   mov XREGS_fs(%esp),%fs
+FLT4:   mov XREGS_gs(%esp),%gs
 restore_all_vm86:
         popl %ebx
         popl %ecx
@@ -232,7 +232,7 @@
         addl %ecx,%eax
         addl $init_tss + 12,%eax
         movl (%eax),%esi /* tss->esp1 */
-FLT7:   movl 4(%eax),%gs /* tss->ss1  */
+FLT7:   mov 4(%eax),%gs /* tss->ss1  */
         testl $X86_EFLAGS_VM,XREGS_eflags+4(%esp)
         jz   nvm86_1
 	subl $16,%esi       /* push ES/DS/FS/GS (VM86 stack frame) */
@@ -248,11 +248,11 @@
         movl XREGS_esp+4(%esp),%eax
 FLT12:  movl %eax,%gs:(%esi) 
         movl XREGS_ss+4(%esp),%eax
-FLT13:  movl %eax,%gs:4(%esi) 
+FLT13:  mov %eax,%gs:4(%esi) 
         jmp 1f
 ring1:  /* obtain ss/esp from oldss/oldesp -- a ring-1 activation exists */
         movl XREGS_esp+4(%esp),%esi
-FLT14:  movl XREGS_ss+4(%esp),%gs 
+FLT14:  mov XREGS_ss+4(%esp),%gs 
 1:      /* Construct a stack frame: EFLAGS, CS/EIP */
         subl $12,%esi
         movl XREGS_eip+4(%esp),%eax
@@ -302,7 +302,7 @@
 nvm86_3:/* Rewrite our stack frame and return to ring 1. */
         /* IA32 Ref. Vol. 3: TF, VM, RF and NT flags are cleared on trap. */
         andl $0xfffcbeff,XREGS_eflags+4(%esp)
-        movl %gs,XREGS_ss+4(%esp)
+        mov %gs,XREGS_ss+4(%esp)
         movl %esi,XREGS_esp+4(%esp)
         movzwl TRAPBOUNCE_cs(%edx),%eax
         movl %eax,XREGS_cs+4(%esp)
@@ -592,7 +592,7 @@
 
         # GS:ESI == Ring-1 stack activation
         movl XREGS_esp(%esp),%esi
-VFLT1:  movl XREGS_ss(%esp),%gs
+VFLT1:  mov XREGS_ss(%esp),%gs
 
         # ES:EDI == Ring-0 stack activation
         leal XREGS_eip(%esp),%edi
diff -Naur xen-2.0.orig/xen/include/asm-x86/x86_32/asm_defns.h xen-2.0/xen/include/asm-x86/x86_32/asm_defns.h
--- xen-2.0.orig/xen/include/asm-x86/x86_32/asm_defns.h	2005-05-22 12:56:27.000000000 +0200
+++ xen-2.0/xen/include/asm-x86/x86_32/asm_defns.h	2005-07-19 12:53:02.000000000 +0200
@@ -19,10 +19,10 @@
         "jmp 3f;" \
         "2:testb $3,"STR(XREGS_cs)"(%esp);" \
         "jz 1f;" \
-        "movl %ds,"STR(XREGS_ds)"(%esp);" \
-        "movl %es,"STR(XREGS_es)"(%esp);" \
-        "movl %fs,"STR(XREGS_fs)"(%esp);" \
-        "movl %gs,"STR(XREGS_gs)"(%esp);" \
+        "mov %ds,"STR(XREGS_ds)"(%esp);" \
+        "mov %es,"STR(XREGS_es)"(%esp);" \
+        "mov %fs,"STR(XREGS_fs)"(%esp);" \
+        "mov %gs,"STR(XREGS_gs)"(%esp);" \
         "3:"
 
 #define SAVE_ALL_NOSEGREGS(_reg) \
@@ -31,8 +31,8 @@
 
 #define SET_XEN_SEGMENTS(_reg) \
         "movl $("STR(__HYPERVISOR_DS)"),%e"STR(_reg)"x;" \
-        "movl %e"STR(_reg)"x,%ds;" \
-        "movl %e"STR(_reg)"x,%es;"
+        "mov %e"STR(_reg)"x,%ds;" \
+        "mov %e"STR(_reg)"x,%es;"
 
 #define SAVE_ALL(_reg) \
         __SAVE_ALL_PRE \
@@ -56,10 +56,10 @@
         jmp 3f; \
         2:testb $3,XREGS_cs(%esp); \
         jz 1f; \
-        movl %ds,XREGS_ds(%esp); \
-        movl %es,XREGS_es(%esp); \
-        movl %fs,XREGS_fs(%esp); \
-        movl %gs,XREGS_gs(%esp); \
+        mov %ds,XREGS_ds(%esp); \
+        mov %es,XREGS_es(%esp); \
+        mov %fs,XREGS_fs(%esp); \
+        mov %gs,XREGS_gs(%esp); \
         3:
 
 #define SAVE_ALL_NOSEGREGS(_reg) \
@@ -68,8 +68,8 @@
 
 #define SET_XEN_SEGMENTS(_reg) \
         movl $(__HYPERVISOR_DS),%e ## _reg ## x; \
-        movl %e ## _reg ## x,%ds; \
-        movl %e ## _reg ## x,%es;
+        mov %e ## _reg ## x,%ds; \
+        mov %e ## _reg ## x,%es;
 
 #define SAVE_ALL(_reg) \
         __SAVE_ALL_PRE \
