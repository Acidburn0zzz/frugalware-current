diff -Naur yudit-2.7.8/stoolkit/SBMap.h yudit-2.7.8-p/stoolkit/SBMap.h
--- yudit-2.7.8/stoolkit/SBMap.h	2005-03-21 04:39:55.000000000 +0100
+++ yudit-2.7.8-p/stoolkit/SBMap.h	2006-04-16 22:31:39.000000000 +0200
@@ -167,7 +167,7 @@
 
   void buildStateMachine ();
   int  serialize (SString* fd, SFileFormat format, int last=0);
-  int SBMapItem::getSerializeSize ();
+  int getSerializeSize ();
 
 
   // Get rid of the state machine.
@@ -314,8 +314,8 @@
     return (unsigned int) maps[mapIndex]->outWordSize;
   }
 
-  bool SBMap::makeUnicodeMap ();
-  bool SBMap::makeStraightMap ();
+  bool makeUnicodeMap ();
+  bool makeStraightMap ();
 
   // Return max index
   int getSize (int index=-1);
diff -Naur yudit-2.7.8/stoolkit/SIO.h yudit-2.7.8-p/stoolkit/SIO.h
--- yudit-2.7.8/stoolkit/SIO.h	2005-03-21 04:39:55.000000000 +0100
+++ yudit-2.7.8-p/stoolkit/SIO.h	2006-04-16 22:31:39.000000000 +0200
@@ -147,7 +147,7 @@
   const SInputStream& getInputStream();
   const SOutputStream& getOutputStream();
 private:
-  void SSocket::openSocket(SOutputStream* o);
+  void openSocket(SOutputStream* o);
   unsigned int address[6]; // Four is used now.
   SString host;
   int port;
diff -Naur yudit-2.7.8/stoolkit/STextData.h yudit-2.7.8-p/stoolkit/STextData.h
--- yudit-2.7.8/stoolkit/STextData.h	2005-03-21 04:39:56.000000000 +0100
+++ yudit-2.7.8-p/stoolkit/STextData.h	2006-04-16 22:31:43.000000000 +0200
@@ -132,8 +132,8 @@
 
   void setLineBreaks (unsigned int line, const SV_UCS4& breaks);
 
-  bool STextData::getInitialLR() const;
-  void STextData::setInitialLR(bool lr);
+  bool getInitialLR() const;
+  void setInitialLR(bool lr);
 
 private:
   SS_Embedding         embedding;
diff -Naur yudit-2.7.8/swidget/SDialog.h yudit-2.7.8-p/swidget/SDialog.h
--- yudit-2.7.8/swidget/SDialog.h	2005-03-21 04:39:56.000000000 +0100
+++ yudit-2.7.8-p/swidget/SDialog.h	2006-04-16 22:29:49.000000000 +0200
@@ -39,7 +39,7 @@
 protected:
   virtual void keyPressed (SWindow * w, SKey key, const SString& s,
           bool ctrl, bool shift, bool meta);
-  virtual void SDialog::buttonPressed (void* source, const SAccelerator* acc);
+  virtual void buttonPressed (void* source, const SAccelerator* acc);
   virtual bool close (SPanel* comp);
   SType    type;
   SPanel*  dialogPanel;
diff -Naur yudit-2.7.8/swindow/SFontTTF.h yudit-2.7.8-p/swindow/SFontTTF.h
--- yudit-2.7.8/swindow/SFontTTF.h	2005-03-21 04:39:57.000000000 +0100
+++ yudit-2.7.8-p/swindow/SFontTTF.h	2006-04-16 22:29:20.000000000 +0200
@@ -121,7 +121,7 @@
     const SS_GlyphIndex* chars, unsigned int liglen, SS_GlyphIndex* out,
     unsigned int substtype = 4);
 
-  bool SFontTTF::hasOTFLigatures();
+  bool hasOTFLigatures();
 
   void getOTFMarkToBase (SS_GlyphIndex baseGlyph, 
        SS_GlyphIndex markGlyph, int* ix, int* iy);
diff -Naur yudit-2.7.8/swindow/SImage.h yudit-2.7.8-p/swindow/SImage.h
--- yudit-2.7.8/swindow/SImage.h	2005-03-21 04:39:57.000000000 +0100
+++ yudit-2.7.8-p/swindow/SImage.h	2006-04-16 22:31:46.000000000 +0200
@@ -42,7 +42,7 @@
        int origox, int origoy, 
        unsigned int width, unsigned int height);
   virtual ~SImage();
-  const SUniqueID& SImage::getID() const;
+  const SUniqueID& getID() const;
   void compress();
   /* After fill, return the shade of white  */
   unsigned int getShades () const;
@@ -53,7 +53,7 @@
   void setOrigoX (int x);
   void setOrigoY (int y);
   SS_WORD32 getShade (int x, int y) const;
-  virtual SObject* SImage::clone () const;
+  virtual SObject* clone () const;
 
   /* USed by cache device to indicate the offset */
   int  px;
diff -Naur yudit-2.7.8/swindow/sx11/SX11Window.h yudit-2.7.8-p/swindow/sx11/SX11Window.h
--- yudit-2.7.8/swindow/sx11/SX11Window.h	2005-03-22 05:59:20.000000000 +0100
+++ yudit-2.7.8-p/swindow/sx11/SX11Window.h	2006-04-16 22:31:50.000000000 +0200
@@ -138,9 +138,9 @@
 
 private:
   SBinHashtable <SAcceleratorListener*> accelerators;
-  void SX11Window::createShadedPixmap (const SImage& im, Pixmap* p, Pixmap* m);
-  void SX11Window::createColoredPixmap (const SImage& im, Pixmap* p, Pixmap* m);
-  void SX11Window::createMaskedPixmap (const SImage& im, Pixmap* p, Pixmap* m);
+  void createShadedPixmap (const SImage& im, Pixmap* p, Pixmap* m);
+  void createColoredPixmap (const SImage& im, Pixmap* p, Pixmap* m);
+  void createMaskedPixmap (const SImage& im, Pixmap* p, Pixmap* m);
 
   SString         name;
   SXInputMethod inputMethod;
