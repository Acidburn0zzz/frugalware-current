== Install and configure

=== Choosing installation flavor

Depending on your needs, there are different installers with
 different characteristics. You can choose which fits you the best.

==== Installing from CDs

Which CDs do you need? If you install a server without X, only the first.
 If you need a graphical system, then you'll need the other CDs as well. (You can install
 language packs later from FTP servers if you need them.)

==== Installing from DVD

If you don't have any Internet connection but you want language packs and
 other optional packages, you'll need the DVD.

Pros: a full offline installation is possible.

Cons: Large amount of data must be downloaded, presumably
some unnecessary packages too.

==== Netinstall

This is a small ISO image, currently under 32Mb, which is able to boot up,
configure the network and install the system with the selected packages,
which are downloaded on-the-fly as required.

Pros: Small image size, no wasted bandwidth with downloading outdated
or unnecessary packages.

Cons: No offline installation possible, high bandwidth or hours of patience
required for a full installation.

=== Fwbootstrap (self-contained chroot)

This is a tarball which has to be downloaded and unpacked. Mostly useful for
developers who can compile packages in this build environment on a
non-Frugalware host system. The archives can be found under
http://ftp.frugalware.org/pub/other/chroot/[http://ftp.frugalware.org/pub/other/chroot]

Usage example:

1) Download the tarball

`wget http://ftp.frugalware.org/pub/other/chroot/fwchroot-<date>-<arch>.tar.bz2`

2) Unpack it

`tar xvjf fwchroot-<date>-<arch>.tar.bz2`

3) Enter the chroot. The parameter is the root of the chroot.

`cd fwchroot-<date>-<arch> @* +
./fwbootstrap ./`

4) Use it (build a package or two)

5) Exit from the shell and fwbootstrap will unmount the necessary dirs for you.

You can get a list of installed packages in the chroot with issuing the
'pacman -Q' command.

==== A complete bootstrap

So you want a complete Frugalware installed into /mnt/foo. First of all,
you must have a running Frugalware where you are able to do

`pacman -Sy core base -r /mnt/foo`

which installs the core and base pkgs into it. But beware:

--------------------------------------------
$ pacman -Qo /etc/sysconfig/keymap
No package owns /etc/sysconfig/keymap
$ pacman -Qo /etc/profile.d/lang.sh
No package owns /etc/profile.d/lang.sh
$ pacman -Qo /etc/fstab
No package owns /etc/fstab
--------------------------------------------

so you have to copy or forge them by hand.

=== Obtaining a source media


A Frugalware installation media can be obtained from several sources. You can
 download it freely via HTTP, FTP or rsync. You can also grab it via bittorrent,
see http://linuxtracker.org/torrents-details.php?id=2864[Linuxtracker] for example.

Here are some examples:

Via FTP:

`wget ftp://ftp3.frugalware.org/mirrors/frugalware/pub/frugalware/frugalware-version-iso/frugalware-version-arch-media.iso`

Via HTTP:

`wget http://www5.frugalware.org/linux/frugalware/pub/frugalware/frugalware-version-iso/frugalware-version-arch-media.iso`

Via rsync:

`rsync -avP rsync://ftp4.frugalware.org/ftp/pub/linux/distributions/frugalware/frugalware-0.6-iso/frugalware-0.6-i686-dvd.iso ./`

More info and the full list of mirrors can be found at our
http://frugalware.org/download.php[download page].

==== I have a skeleton system installed from CD/DVD, and I want to use the packages on the media afterwards

There are two methods.

First is the easiest, but needs quite a lot of space
(and caution not to use pacman -Scc ;) ): mount the media and install all
the .fpm's found in frugalware-i686 (or frugalware-x86_64) dir
to '/var/cache/pacman/pkg'.

Second is a bit more challenging, but more usable. Add a new line
to '/etc/pacman.conf' before the other Include lines:

`Include = /etc/pacman.d/cd`

Create a new file /etc/pacman.d/cd file with the following contents:

`Server = file:///media/dvd/frugalware-i686`

On x86_64, use this one:

`Server = file:///media/dvd/frugalware-x86_64`

The media should be mounted on /media/dvd, or change the Server lines
appropriately. The section and the filename must be the same.

=== The installation process

//FIXME - do a net and a CD install with the new installer (document new features)

After downloading and burning the CDs/DVD, insert the first CD/DVD to your
CD/DVD drive, and reboot your computer. In the grub menu, you can disable
the framebuffer, if a framebuffer with resolution 800x600 is not suitable
for your graphics card or monitor. After that, grub loads the kernel and
the initrd image.

At the first dialog, you should select your language. If your language is not
 on the list, you should choose English.

After selecting your keyboard map in the next window, setup searches for
installation media automatically.

The next step is partitioning. Frugalware setup displays a list of your hard
disks, you should choose one of them to partition it with a program. You can
select the partitioning program in the next dialog, currently fdisk and cfdisk
are included. You should create at least one partition with type 'Linux', and
it is recommended to create a swap partition (with type 'Linux swap'). When
you have finished partitioning, press Continue.

The following list displays your swap partitions, here you can choose which
swap partitions are allowed to be used by Frugalware. Then setup formats
your swap partitions.

In the next window, you should select your root partition first, then you can
choose if you wish to format it or keep the existing filesystem on it. After
selecting the root partition, you can setup other Linux partitions, optionally
format them, and set their mount points. Using a separate partition is
supported for /boot, but not yet for /usr.

After having your Linux partitions mounted, you should do the same with
your DOS/Windows ones. Setup will display a list of them, if any exists.
You should simply choose a mount point for them here.

The next step is to select package categories. Usually a full installation
is the best choice. If you will not use KDE or GNOME, you may probably
want to disable them. In most cases, it is not a good idea to disable
other categories. The next window will show the packages which are
included in the selected categories. Feel free to use the letter keys
to find a specific package. Simply hitting Enter will usually be enough here.

After installing the base section, setup will install grub onto your hard
disk. There are three options here: installing to the MBR, the root partition
or a floppy. Installing to the MBR is the good choice if you want
Frugalware to manage your computer's booting. The root is a good idea if you
want to install grub into your root partition. In this case, grub will not
modify your existing boot manager. Floppy is a good idea for example if you
don't have any boot manager installed, but you want to leave
your MBR unmodified.

After installing grub, setup will continue to install other sections
(apps, lib, multimedia, network, devel) from the first CD. When it is
done, you will be prompted to insert Frugalware install disc 2. If you
have only one disc, feel free to abort installing packages, you can
install anything else from the net later.

If you use a DVD, you can install optional or language-specific packages
after installing the selected packages. The mechanism is the same: select
categories, packages and install them.


=== Basic configuration


After the installation of the packages, Frugalware setup will configure
your kernel modules. This means that an information dialog appears,
but nothing more.

After module configuration, you should change the root password. This
is very important as there is no default password. If you skip this step,
anybody will be able to login as root. After this step, you can create a
regular (also known as non-root) user. It's highly recommended to create
one, and log in as a regular user. If a command should be run as root,
you should use su or sudo under console, and gksu or its KDE equivalent
under X.

After this, setup will configure your network settings. Setup simply
runs the netconfig utility, which is described in the Networking section.

If network installation is done, we should configure the system's time.
This means two actions. First, you should decide if the hardware (BIOS)
clock is set to Coordinated Universal Time (UTC). If yes, select yes here.
If the hardware clock is set to the current local time (this is how most
PCs are set up), say no here. If you are not sure what is this,
you should answer no here.

The next step is to configure your mouse. The configuration will take
effect on the console mouse services (gpm) and on the X server.
The setting is done by xconfig later.

If you have installed an X server (by default xorg), the setup will
run xconfig. For more information on xconfig, see the section
Graphical interface (X11).


=== Package management basics


Frugalware comes with pacman-g2 package manager. Pacman-G2 is a fork of
the not-yet-released cvs version of the complete rewrite of pacman by
Aurelien Foret (the old monolithic pacman is written by Judd Vinet).
See http://ftp.frugalware.org/pub/other/pacman-g2/pacman-g2/README[README]
for details.
If you want to do anything with packages, you'll always have to use the
pacman command. Here are some basic actions with pacman:

Actions usually used with remote installation from an FTP server:

`pacman -Sy`

Updates the package database. Before searching for packages or installing
them from an FTP server, you will have to use this command.

`pacman -Su`

Upgrades all packages that are currently installed but a newer version of
the package is available on the FTP server.

`pacman -Sup`

Prints the URL of all packages that pacman should download. This way you
can download the packages anywhere and then just copy them to
/var/cache/pacman/pkg. This is very useful if you have limited bandwidth
at your computer, but you can access high bandwidth elsewhere.

`pacman -S sendmail`

Installs sendmail with all of its dependencies from the FTP server.
If it conflicts with any package, you will be asked if pacman is
allowed to remove them.

`pacman -Ss perl`

Searches in the package database (on the FTP server). This example
will probably display the perl package and all perl modules.
Regular expression based search is also supported.

Of course, you can treat packages as normal files, and you can
manually add/remove/etc them. Here are some examples:

`pacman -U zsh-4.2.1-1.fpm`

Adds (or if it's already installed, upgrades) the zsh package,
which is located in the current directory.

`pacman -R qt`

Removes the qt package.

`pacman -Qs perl`

Shows every installed packages whose name contains the string perl.

Generally, if you want to turn off checking for conflicting files,
you should use the -f parameter, and if you want to turn off all
dependency checking, you should use the -d switch.

`pacman -h`

This displays all the switches we discussed above, and a lot more.
Once again, these are only the basics.
You can also use pacman -Sh or similar to get help on a particular task.

=== Networking

//FIXME after the current reworking of netconfig is done.

==== Initializing the network card

In most cases, configuring your network card will be done automatically
through the linux-hotplug scripts. This means that during every system boot
these scripts will search for network cards, and will load the necessary
modules needed to work properly. If you want, you can load your network
card's module manually by editing the /etc/rc.d/rc.modules file and put
the module in the blacklist by editing /etc/hotplug/blacklist.
Configuring any interface on your card will be the task of the
netconfig utility. Initializing your card ends here.

==== The netconfig utility

Configuring your network settings is done by the netconfig utility.

First, we have to give a name to your computer. The name must consist of at
least two parts, separated by a dot (.).

In the next dialog, you should choose how your machine connects to the network.
If you have an internal network card and an assigned IP address, gateway, and
DNS, use static to enter these values. If your IP address is assigned by a
DHCP server (commonly used by cable modem services, not equal to dsl
services), select dhcp. Finally, if you do not have a network card,
select the lo choice. The lo is also the correct choice if you are
using a PCMCIA network card.

If you chose static, you must give your IP address, the netmask of your
local network, your gateway address (you may leave it blank) and the IP
address of your primary name server (you can add more nameservers later
by editing the '/etc/resolv.conf' file) and then the configuration is finished.

If you chose dhcp, you can optionally give your dhcp hostname, however,
netconfig will not ask more questions about your network, since all
other data will be provided by the DHCP server.

If you chose lo, you don't have to answer any questions.

Finally, netconfig will write all your network configuration files. If you
want to edit your settings by hand, the interface information is stored in
the '/etc/sysconfig/interfaces' file.


==== Setting up a DSL connection

Configuring your DSL (or ADSL) connection should be done after configuring
your network card. The configuration utility will also ask you if you want
to configure your DSL connection.

First, you must give your username, something like 'someone@provider.net'.
Then you'll have to specify the network interface (usually eth0) through
which the ADSL connecting script will try to communicate with your ADSL
modem. Then enter your password twice.

If you are happy with the given configuration, press ENTER to accept
the entered settings.

From now you can use the adsl service to manage your ADSL connection:

`su -c \'service adsl start\'`

will connect,

`su -c \'service adsl stop\'`

will disconnect. +
If you want Frugalware connect at startup automatically,
add the ADSL service to the list of automatically startedservices:

`su -c \'service adsl add\'`

==== Basic firewall configuration

Frugalware comes with a firewall configuration working out of the box.
This allows all outgoing connections, and incoming packets for established
connections. It does not allow normal incoming packages for any ports.
The firewall configuration is at '/etc/sysconfig/firewall'.

Let's see an example: you would like to allow others to ssh into your
computer. Edit /etc/sysconfig/firewall, remove the hashmark (#) from
the beginning of the line under the # ssh description, and restart
the firewall:

`su -c \'service firewall restart\'`

The same applies for Apache or any other services.

If you would like to have any advanced firewall settings, configure
your firewall as root with iptables then save your config as root
with:

`iptables-save > /etc/sysconfig/firewall`

WARNING: It will overwrite your existing configuration! It is strongly
recommended to make a backup of '/etc/sysconfig/firewall' before saving
your settings.

=== Graphical interface (X11)

==== Configuring your graphics card

If you install X, setup will run xconfig, our X configuration utility
automatically. First, xconfig will detect your configuration and will
create a basic configuration file. Then it will ask you to specify the
screen resolution and colour depth. Finally, it will create the real
configuration file, with the following extras:


* Automatically configures the mouse wheel, if found
* Sets keyboard layout according to the selected language
* Enables DPMS
* Enables users to use the DRI extension

After generating the config file, setup will start the X server.
You must click the OK button to confirm to xconfig that the configuration
was successful.

==== 3D acceleration, binary drivers

If there is built-in 3d acceleration support for your card in X, xconfig
will add the necessary entries to '/etc/X11/xorg.conf' and X will load
the module(s).

If you have an ATI or NVIDIA card, you probably need the manufacturer's
binary drivers. Obtaining the NVIDIA binary driver is fairly simple:

`su -c \'pacman -Sy nvidia\'`

If you have an ATI card, installation will not be more complicated
than a simple

`su -c \'pacman -Sy fglrx\'`

==== Allow root login in KDM/GDM

By default, no root login is permitted on the GUI, the recommended way of
running graphical programs as root is to use gksu or kdesu.

To enable it anyway, the following lines should be edited:

For KDM ('/usr/share/config/kdm/kdmrc')

'AllowRootLogin=false'

modify to

'AllowRootLogin=true'

For GDM ('/etc/gdm/gdm.conf')

'AllowRoot=false'

modify to

'AllowRoot=true'

=== Sound

==== Configuring the sound card

Frugalware uses the Advanced Linux Sound Architecture (ALSA) subsystem for
sound cards. For older applications, the Open Sound System (OSS) compatibility
modules are loaded, but Frugalware does not contain native OSS support.

Finding and loading the necessary module for your sound card is fairly simple.
The process is mostly the same as setting up your network card.
During every boot, the hotplug scripts will detect your sound card, but,
of course, you can take the automatically loaded module to blacklist,
and load it manually by editing '/etc/sysconfig/modules'.

==== Volume configuration with alsamixer

By default, your sound card is muted. You can use alsamixer to unmute your
card. Use the < and > keys to unmute a channel, up and down keys to set the
volume and left or right keys to switch to another channel. You can quit
alsamixer by hitting the Esc key.

If you want Frugalware to store your settings automatically on shutdown and
restore on boot, then the first time you should store your settings manually:

`su -c \'alsactl store\'`

From now, during shutdown, Frugalware saves your settings, but you can store
or load them any time with the

`su -c \'service alsa save\'`

and the

`su -c \'service alsa load\'`

command.

=== Printing

Frugalware uses the Common Unix Printing System (CUPS) for handling
printers and to manage printing.

==== Configuring the printer

1.) Open your favorite Internet browser and go to http://localhost:631[localhost:631].
This is the Web interface of CUPS.

2.) Select Administration from the top menu. If a username is required,
type root, and give your root password.

3.) You can do almost everything here in connection with printing.
In our example, we will add a new local printer.

4.) Click Add Printer, type in a name and optionally fill the
Location and Description lines, then click on continue.

5.) Select Device, in most cases it is Parallel Port #1 for older models
and one of the USB ports for newer ones. I you have got a USB printer cups
will write the printer name next to the proper port.

6.) On the next page, select your vendor and your printer type (the driver/filter).

To set up a remote Windows share with password, give a string
like this for location (the share name is the
printer's assigned name on the remote system):
'smb://user:passwd@Netbios_Name_or_ip_address/Share_name'

Notice that, when you view the printer configuration, the
credentials will not be shown but will be used.


==== My printer is not listed


If your vendor or printer type isn't listed in the wizard, you have to
check http://linuxprinting.org[linuxprinting.org] wether if is supported
under linux or not. Usually it's enough to install the proper printer driver
(hpijs for HP printers, splix for Samsung, gutenprint for Cannon, etc).
After installing do not forget to restart cups: `su -c \'service cups restart\'`

If it's not on http://linuxprinting.org[linuxprinting.org] then try
to google after. If listed but said to be "paperweight", then there
is nothing to do. If it is supported and said to be working on the
site, then please file a bug report with your printer details.
While we fix the bug, you can install
the driver (the ppd) by yourself.

On the left side, select Printer Listings. Then select your device's
vendor and proper type. On the results page, select download PPD.
After download, there will be a file named someting_that_ends_with.ppd.

Save the PPD file in the directory /usr/share/cups/model/. The PPD file
doesn't have to be executable, but it should be world-readable and
should have the file extension ".ppd".

If you do not want to search ppd, try to install foomatic-filters-ppds
package. It has a bunch of ppd files for various printers.

Then restart the CUPS service: `su -c \'service cups restart\'`. The driver
installation is now completed, now you can add your printer via the web
interface. A good howto can be found at
http://linuxprinting.org/cups-doc.html[linuxprinting.org/cups-doc.html].


==== Multiple pages on a single sheet

This is also known as n-up printing. If an application doesn't support it
natively, print the document to a file as PostScript and use psnup:

`psnup -2 print.ps > print2page.ps`

The first option specifies the number of pages stacked on one physical sheet,
the second is the filename of the original one-sided document, and the last
is the n-up (two-sided) document. You can then print it with

`cupsdoprint -P nameofprinter foo.ps`

or open it in your favourite PS viewer.

==== Troubleshooting

If something goes wrong, check out CUPS log at '/var/log/cups'. There is a
verbose error log and an access log, too. Also, on linuxprinting.org there
is a section for all supported (or known to be unsupported) printers.

=== The hotplug subsystem

==== udev

The /dev directory under Frugalware is a ramdisk. Every device node is
created automatically during the system boot by the hotplug subsystem,
more specifically, by udev. It means, there won't be unnecessary device
nodes in /dev, but it also means, if you create a device node manually,
it will exist only until the next shutdown/reboot.

If you want to force Frugalware to create a device node "manually"
during each boot, you must edit the '/etc/sysconfig/udev' configuration file.

The udev needs sysfs, so it will only work with the 2.6.x kernel series.
Do not try to run udev on Frugalware with kernel series 2.4.x.

==== Pen/Thumbdrives


Pendrives (also known as thumbdrives) are well-supported through the hotplug
scripts and udev. If you insert a pendrive into the USB slot, udev will
create a device node for it in /dev. Most pendrives contain only one
partition and their filesystem is vfat. In most cases, the pendrive will
behave like a SCSI disc. It means, you can find the pendrive
under /dev/sda and its first partition under /dev/sda1.
Adding the following line to /etc/fstab:

`/dev/sda1 /media/pendrive auto defaults,noauto,user 0 0`

will allow users mount their pendrive if the device node
exists (if the device is inserted into the slot).

If you use KDE, Gnome of XFCE4 they will handle automatic mounting of
such devices. You should not edit /etc/fstab as automounting will not
work for you.
For blackbox, fluxbox, englightenment, e17  and other smaller window
manager users there is ivman for automounting, but do not expect as
fine work as in KDE, Gnome, XFCE4.
See also the automounting part of the documentation.


==== Digital cameras


Tyipcally, there are two types of digital cameras. Some of them support
both access methods, others use only one of them. First, most of the
cameras can be treated as a pendrive (USB Mass Storage device), you can
mount them and copy the pictures from them easily.

Other cameras support the Picture Transfer Protocol (PTP). You can
grab the pictures from them (and do lots of other actions) with gphoto2,
if your model is supported. (If it's not available on your system, a
simple `su -c \'pacman -S gphoto2\'` will install it onto your system.)

==== Automounting: D-BUS, HAL and Ivman

D-BUS is a simple IPC (inter-process communication) library based on messages.
HAL is a hardware abstraction layer which uses D-BUS. Ivman is based on HAL
and uses pmount ("policy mount"), which is a wrapper around the standard
mount program which permits normal users to mount removable devices
without an existing '/etc/fstab' entry.

Ivman is a daemon to automount CD-ROMs and DVDs when inserted in a drive,
or play audio CDs or video DVDs automatically. It is 100% userspace,
so it is a safe replacement for submount.

If you want to change the default settings, all config files are
located in /etc/ivman. They are plain XML files, just read them,
everything is quite self-explanatory.

=== The init scripts, bootup

==== About the kernel

The Linux kernel is in the kernel package. We're trying to use as few patches
as possible to stay close to the vanilla kernel. We also use
http://alioth.debian.org/projects/splashy[splashy] instead of well known bootsplash.
The kernel contains compiled-in support for most IDE controllers, but all
low-level SCSI drivers are compiled as a module. If Frugalware's kernel
doesn't contain built-in support for your controller, you can compile your
own kernel. Don't worry, it's fairly simple.

1) After setup is finished, choose the option that you want to do
something special.

2) Change your root directory to /mnt/target:

`chroot /mnt/target`

3) The source of your kernel (with additional patches applied) can be found
at /usr/src/linux. So go to the /usr/src/linux directory and enter the
configuration menu by typing make menuconfig. Inside it, select the driver
you don't want to compile as a module anymore, and exit from the menu with
saving changes.

4) Compile your kernel with the make command. This may take several minutes.

5) Copy your new kernel to /boot by typing the

`cp /usr/src/linux/arch/yourarch/boot/bzImage /boot/vmlinuz`

command.
On x86, yourarch is i386.

==== Init scripts

In Frugalware, init scripts are always called rc.something and
they are located in /etc/rc.d. You can manage these scripts
with the service command:

* `service adsl stop` - it will stop your ADSL connection
* `service httpd start` - it will start your webserver
* `service clamd add` - the clamd service will be started during every boot
* `service sshd del` - the sshd service will not be started
automatically anymore
* `service acpid list` - gives you a short list of the runlevels where the
specified service is started automatically

==== System boot, runlevels

If you don't pass any extra 'init=/path/to/init' parameters to it, the kernel
will start /sbin/init as the final step of the kernel boot sequence.
According to the content of /etc/inittab, init will run:

1) each S* script at /etc/rc.d/rcS.d

2) each S* script at /etc/rc.d/rcn.d, where n is the default runlevel.
This is set to 4 by default. Here is the list of available runlevels:

--------------------------------------------------------------------------
0 = halt
1 = single user mode
2 = unused (but configured the same as runlevel 3)
3 = multiuser mode (text mode)
4 = multiuser mode, X11 with KDM/GDM/XDM (default Frugalware runlevel)
5 = unused (but configured the same as runlevel 3)
6 = reboot
--------------------------------------------------------------------------

If X11 is configured, /etc/rc.d/rc.4 will start one of the desktop managers,
as configured in '/etc/sysconfig/desktop'.

==== GRUB gfxmenu

Frugalware comes with a nice graphical grub menu
(thanks to SuSE's gfxmenu developers). If you don't like it, you can disable
it by commenting out the gfxmenu initialization line in /boot/grub/menu.lst.
So for example:

Before: `gfxmenu (hd0,5)/boot/grub/message` +
After: `#gfxmenu (hd0,5)/boot/grub/message`

==== Splashy

Frugalware uses splashy to display nice splash screen and a progress bar
instead of text messages during the boot procedure. Splashy is completely
user-space, so there is no need for patching the kernel.
If you dislike it or want to switch it off for whatever reason add
nosplashy for your kernel parameters in '/boot/grub/menu.lst'. For example:

`kernel (hd0,2)/vmlinuz root=/dev/hda5 ro quiet vga=791 nosplashy`

=== Apt - pacman cross reference

For those who are familiar with the apt package management tool,
here is a quick cross-reference.

`--------------------------------------------------------------------`------------------------`-----------------
Action                                                               Apt command              Pacman command
----------------------------------------------------------------------------------------------------------------
Refresh the package database:                                        apt-get update           pacman -Sy
Update currently installed packages to the newest available version: apt-get upgrade          pacman -Su
Install a new package:                                               apt-get install foo      pacman -S foo
Remove a package:                                                    apt-get remove foo       pacman -Rc foo
Search in the full package database:                                 apt-cache search foo     pacman -Ss foo
Install a package from a file:                                       dpkg -i foo.deb          pacman -A foo.fpm
Clean the package cache:                                             apt-get clean            pacman -Sc
----------------------------------------------------------------------------------------------------------------

