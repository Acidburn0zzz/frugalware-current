=== The hotplug subsystem

==== udev

The /dev directory under Frugalware is a ramdisk. Every device node is
created automatically during the system boot by the hotplug subsystem,
more specifically, by udev. It means, there won't be unnecessary device
nodes in /dev, but it also means, if you create a device node manually,
it will exist only until the next shutdown/reboot.

If you want to force Frugalware to create a device node "manually"
during each boot, you must edit the '/etc/sysconfig/udev' configuration file.

The udev needs sysfs, so it will only work with the 2.6.x kernel series.
Do not try to run udev on Frugalware with kernel series 2.4.x.

==== Pen/Thumbdrives


Pendrives (also known as thumbdrives) are well-supported through the hotplug
scripts and udev. If you insert a pendrive into the USB slot, udev will
create a device node for it in /dev. Most pendrives contain only one
partition and their filesystem is vfat. In most cases, the pendrive will
behave like a SCSI disc. It means, you can find the pendrive
under /dev/sda and its first partition under /dev/sda1.
Adding the following line to /etc/fstab:

`/dev/sda1 /media/pendrive auto defaults,noauto,user 0 0`

will allow users mount their pendrive if the device node
exists (if the device is inserted into the slot).

If you use KDE, Gnome of XFCE4 they will handle automatic mounting of
such devices. You should not edit /etc/fstab as automounting will not
work for you.
For blackbox, fluxbox, englightenment, e17  and other smaller window
manager users there is ivman for automounting, but do not expect as
fine work as in KDE, Gnome, XFCE4.
See also the automounting part of the documentation.


==== Digital cameras


Tyipcally, there are two types of digital cameras. Some of them support
both access methods, others use only one of them. First, most of the
cameras can be treated as a pendrive (USB Mass Storage device), you can
mount them and copy the pictures from them easily.

Other cameras support the Picture Transfer Protocol (PTP). You can
grab the pictures from them (and do lots of other actions) with gphoto2,
if your model is supported. (If it's not available on your system, a
simple `su -c \'pacman -S gphoto2\'` will install it onto your system.)

==== Automounting: D-BUS, HAL and Ivman

D-BUS is a simple IPC (inter-process communication) library based on messages.
HAL is a hardware abstraction layer which uses D-BUS. Ivman is based on HAL
and uses pmount ("policy mount"), which is a wrapper around the standard
mount program which permits normal users to mount removable devices
without an existing '/etc/fstab' entry.

Ivman is a daemon to automount CD-ROMs and DVDs when inserted in a drive,
or play audio CDs or video DVDs automatically. It is 100% userspace,
so it is a safe replacement for submount.

If you want to change the default settings, all config files are
located in /etc/ivman. They are plain XML files, just read them,
everything is quite self-explanatory.

=== The init scripts, bootup

==== About the kernel

The Linux kernel is in the kernel package. We're trying to use as few patches
as possible to stay close to the vanilla kernel. We also use
http://alioth.debian.org/projects/splashy[splashy] instead of well known bootsplash.
The kernel contains compiled-in support for most IDE controllers, but all
low-level SCSI drivers are compiled as a module. If Frugalware's kernel
doesn't contain built-in support for your controller, you can compile your
own kernel. Don't worry, it's fairly simple.

1) After setup is finished, choose the option that you want to do
something special.

2) Change your root directory to /mnt/target:

`chroot /mnt/target`

3) The source of your kernel (with additional patches applied) can be found
at /usr/src/linux. So go to the /usr/src/linux directory and enter the
configuration menu by typing make menuconfig. Inside it, select the driver
you don't want to compile as a module anymore, and exit from the menu with
saving changes.

4) Compile your kernel with the make command. This may take several minutes.

5) Copy your new kernel to /boot by typing the

`cp /usr/src/linux/arch/yourarch/boot/bzImage /boot/vmlinuz`

command.
On x86, yourarch is i386.

==== Init scripts

In Frugalware, init scripts are always called rc.something and
they are located in /etc/rc.d. You can manage these scripts
with the service command:

* `service adsl stop` - it will stop your ADSL connection
* `service httpd start` - it will start your webserver
* `service clamd add` - the clamd service will be started during every boot
* `service sshd del` - the sshd service will not be started
automatically anymore
* `service acpid list` - gives you a short list of the runlevels where the
specified service is started automatically

==== System boot, runlevels

If you don't pass any extra 'init=/path/to/init' parameters to it, the kernel
will start /sbin/init as the final step of the kernel boot sequence.
According to the content of /etc/inittab, init will run:

1) each S* script at /etc/rc.d/rcS.d

2) each S* script at /etc/rc.d/rcn.d, where n is the default runlevel.
This is set to 4 by default. Here is the list of available runlevels:

--------------------------------------------------------------------------
0 = halt
1 = single user mode
2 = unused (but configured the same as runlevel 3)
3 = multiuser mode (text mode)
4 = multiuser mode, X11 with KDM/GDM/XDM (default Frugalware runlevel)
5 = unused (but configured the same as runlevel 3)
6 = reboot
--------------------------------------------------------------------------

If X11 is configured, /etc/rc.d/rc.4 will start one of the desktop managers,
as configured in '/etc/sysconfig/desktop'.

==== GRUB gfxmenu

Frugalware comes with a nice graphical grub menu
(thanks to SuSE's gfxmenu developers). If you don't like it, you can disable
it by commenting out the gfxmenu initialization line in /boot/grub/menu.lst.
So for example:

Before: `gfxmenu (hd0,5)/boot/grub/message` +
After: `#gfxmenu (hd0,5)/boot/grub/message`

==== Splashy

Frugalware uses splashy to display nice splash screen and a progress bar
instead of text messages during the boot procedure. Splashy is completely
user-space, so there is no need for patching the kernel.
If you dislike it or want to switch it off for whatever reason add
nosplashy for your kernel parameters in '/boot/grub/menu.lst'. For example:

`kernel (hd0,2)/vmlinuz root=/dev/hda5 ro quiet vga=791 nosplashy`
