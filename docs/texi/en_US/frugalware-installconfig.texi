@node Install and configure, Development, First steps, Top
@c node-name,     next,        previous,         up

@chapter Install and configure


@section Choosing installation flavor


Depending on your needs, there are different installers with
 different characteristics. You can choose which fits you the best.


@subsection Installing from CDs


Which CDs do you need? If you install a server without X, only the first.
 If you need a graphical system, then you'll need both CDs. (You can install
 language packs later from FTP servers if you need them.)


@subsection Installing from DVD


If you don't have any Internet connection but you want language packs and
 other optional packages, you'll need the DVD.

Pros: a full offline installation is possible.

Cons: Large amount of data must be downloaded, presumably 
some unnecessary packages too.


@subsection Netinstall


This is a small ISO image, currently under 32Mb, which is able to boot up, 
configure the network and install the system with the selected packages, 
which are downloaded on-the-fly as required.

Pros: Small image size, no wasted bandwidth with downloading outdated 
or unnecessary packages.

Cons: No offline installation possible, high bandwidth or hours of patience 
required for a full installation.


@subsection Fwbootstrap (self-contained chroot)


This is a tarball which has to be downloaded and unpacked. Mostly useful for 
developers who can compile packages in this build environment on a 
on-Frugalware host system. The archives can be found under 
@samp{http://ftp.frugalware.org/pub/other/chroot/} Usage example:

1) Download the tarball

@quotation
wget http://ftp.frugalware.org/pub/other/chroot/fwchroot-<date>-<arch>.tar.bz2
@end quotation
2) Unpack it

@quotation
tar xvjf fwchroot-<date>-<arch>.tar.bz2
@end quotation

3) Enter the chroot. The parameter is the root of the chroot.
@quotation
cd fwchroot-<date>-<arch> @*
./fwbootstrap ./
@end quotation

4) Use it (build a package or two)

5) Exit from the shell and fwbootstrap will unmount the necessary dirs for you.

You can get a list of installed packages in the chroot with issuing the
@samp{pacman -Q} command.

@subsection A complete bootstrap

So you want a complete Frugalware installed into /mnt/foo. First of all, 
you must have a running Frugalware where you are able to do

@samp{pacman -Sy core base -r /mnt/foo}

which installs the core and base pkgs into it. But beware:

@verbatim
$ pacman -Qo /etc/sysconfig/keymap
No package owns /etc/sysconfig/keymap
$ pacman -Qo /etc/profile.d/lang.sh
No package owns /etc/profile.d/lang.sh
$ pacman -Qo /etc/fstab
No package owns /etc/fstab
@end verbatim

so you have to copy or forge them by hand. 

@section Obtaining a source media


A Frugalware installation media can be obtained from several sources. You can
 download it freely via HTTP, FTP or rsync or you can buy a CD at CheapISO.com,
see @uref{http://cheapiso.com/product_info.php?products_id=141}.

Here are some examples:

Via FTP:
@quotation
wget @uref{ftp://ftp3.frugalware.org/mirrors/frugalware/frugalware/}
frugalware-version-iso/frugalware-version-arch-media.iso
@end quotation

Via HTTP:
@quotation
wget @uref{http://www5.frugalware.org/linux/frugalware/pub/frugalware/}
frugalware-version-iso/frugalware-version-arch-media.iso
@end quotation

Via rsync:
@quotation
rsync -avP rsync://ftp4.frugalware.org/ftp/pub/linux/distributions/
frugalware/frugalware-0.3-iso/frugalware-0.3-i686-dvd.iso ./
@end quotation

More info and the full list of mirrors can be found at our 
download page: @uref{http://frugalware.org/download.php}.

@subsection I have a skeleton system installed from CD/DVD, and I want to use the packages on the media afterwards


There are two methods.

First is the easiest, but needs quite a lot of space 
(and caution not to use pacman -Scc ;) ): mount the media and install all 
the .fpm's found in frugalware-i686 (or frugalware-x86_64) dir 
to /var/cache/pacman/pkg.

Second is a bit more challenging, but more usable. Add a new line 
to /etc/pacman.conf before the other Include lines:

Include = /etc/pacman.d/cd

Create a new file /etc/pacman.d/cd file with the following contents:

Server = file:///media/dvd/frugalware-i686

On x86_64, use this one:

Server = file:///media/dvd/frugalware-x86_64

The media should be mounted on /media/dvd, or change the Server lines 
appropriately. The section and the filename must be the same.



@section The installation process


After downloading and burning the CDs/DVD, insert the first CD/DVD to your 
CD/DVD drive, and reboot your computer. In the grub menu, you can disable 
the framebuffer, if a framebuffer with resolution 800x600 is not suitable 
for your graphics card or monitor. After that, grub loads the kernel and 
the initrd image.

At the first dialog, you should select your language. If your language is not
 on the list, you should choose English.

After selecting your keyboard map in the next window, setup searches for 
installation media automatically.

The next step is partitioning. Frugalware setup displays a list of your hard 
disks, you should choose one of them to partition it with a program. You can 
select the partitioning program in the next dialog, currently fdisk and cfdisk 
are included. You should create at least one partition with type 'Linux', and 
it is recommended to create a swap partition (with type 'Linux swap'). When 
you have finished partitioning, press Continue.

The following list displays your swap partitions, here you can choose which 
swap partitions are allowed to be used by Frugalware. Then setup formats 
your swap partitions.

In the next window, you should select your root partition first, then you can 
choose if you wish to format it or keep the existing filesystem on it. After 
selecting the root partition, you can setup other Linux partitions, optionally 
format them, and set their mount points. Using a separate partition is 
supported for /boot, but not yet for /usr.

After having your Linux partitions mounted, you should do the same with 
your DOS/Windows ones. Setup will display a list of them, if any exists. 
You should simply choose a mount point for them here.

The next step is to select package categories. Usually a full installation 
is the best choice. If you will not use KDE or GNOME, you may probably 
want to disable them. In most cases, it is not a good idea to disable 
other categories. The next window will show the packages which are 
included in the selected categories. Feel free to use the letter keys 
to find a specific package. Simply hitting Enter will usually be enough here.

After installing the base section, setup will install grub onto your hard 
disk. There are three options here: installing to the MBR, the root partition 
or a floppy. Installing to the MBR is the good choice if you want 
Frugalware to manage your computer's booting. The root is a good idea if you 
want to install grub into your root partition. In this case, grub will not 
modify your existing boot manager. Floppy is a good idea for example if you 
don't have any boot manager installed, but you want to leave 
your MBR unmodified.

After installing grub, setup will continue to install other sections 
(apps, lib, multimedia, network, devel) from the first CD. When it is 
done, you will be prompted to insert Frugalware install disc 2. If you 
have only one disc, feel free to abort installing packages, you can 
install anything else from the net later.

If you use a DVD, you can install optional or language-specific packages 
after installing the selected packages. The mechanism is the same: select 
categories, packages and install them.


@section Basic configuration


After the installation of the packages, Frugalware setup will configure 
your kernel modules. This means that an information dialog appears, 
but nothing more.

After module configuration, you should change the root password. This 
is very important as there is no default password. If you skip this step, 
anybody will be able to login as root. After this step, you can create a 
regular (also known as non-root) user. It's highly recommended to create 
one, and log in as a regular user. If a command should be run as root, 
you should use su or sudo under console, and gksu or its KDE equivalent 
under X.

After this, setup will configure your network settings. Setup simply 
runs the netconfig utility, which is described in the Networking section.

If network installation is done, we should configure the system's time. 
This means two actions. First, you should decide if the hardware (BIOS) 
clock is set to Coordinated Universal Time (UTC). If yes, select yes here. 
If the hardware clock is set to the current local time (this is how most 
PCs are set up), say no here. If you are not sure what is this, 
you should answer no here.

The next step is to configure your mouse. The configuration will take 
effect on the console mouse services (gpm) and on the X server. 
The setting is done by xconfig later.

If you have installed an X server (by default xorg), the setup will 
run xconfig. For more information on xconfig, see the section 
Graphical interface (X11).


@section Package management basics


Frugalware comes with Judd Vinet's great work, the pacman package manager. 
If you want to do anything with packages, you'll always have to use the 
pacman command. Here are some basic actions with pacman:

Actions usually used with remote installation from an FTP server:
@quotation
pacman -Sy
@end quotation

Updates the package database. Before searching for packages or installing 
them from an FTP server, you will have to use this command.
@quotation
pacman -Su
@end quotation

Upgrades all packages that are currently installed but a newer version of 
the package is available on the FTP server.
@quotation
pacman -Sup
@end quotation

Prints the URL of all packages that pacman should download. This way you 
can download the packages anywhere and then just copy them to 
/var/cache/pacman/pkg. This is very useful if you have limited bandwidth 
at your computer, but you can access high bandwidth elsewhere.
@quotation
pacman -S sendmail
@end quotation

Installs sendmail with all of its dependencies from the FTP server. 
If it conflicts with any package, you will be asked if pacman is 
allowed to remove them.
@quotation
pacman -Ss perl 
@end quotation

Searches in the package database (on the FTP server). This example 
will probably display the perl package and all perl modules.

Of course, you can treat packages as normal files, and you can 
manually add/remove/etc them. Here are some examples:
@quotation
pacman -U zsh-4.2.1-1.fpm
@end quotation

Adds (or if it's already installed, upgrades) the zsh package, 
which is located in the current directory.
@quotation
pacman -R qt
@end quotation

Removes the qt package.
@quotation
pacman -Qs perl
@end quotation

Shows every installed packages whose name contains the string perl.

Generally, if you want to turn off checking for conflicting files, 
you should use the -f parameter, and if you want to turn off all 
dependency checking, you should use the -d switch.
@quotation
pacman -h
@end quotation
This displays all the switches we discussed above, and a lot more. 
Once again, these are only the basics.


@section Networking


FIXME after the current reworking of netconfig is done.


@subsection Initializing the network card


In most cases, configuring your network card will be done automatically 
through the linux-hotplug scripts. This means that during every system boot 
these scripts will search for network cards, and will load the necessary 
modules needed to work properly. If you want, you can load your network 
card's module manually by editing the /etc/rc.d/rc.modules file and put 
the module in the blacklist by editing /etc/hotplug/blacklist. 
Configuring any interface on your card will be the task of the 
netconfig utility. Initializing your card ends here.


@subsection The netconfig utility


Configuring your network settings is done by the netconfig utility.

First, we have to give a name to your computer. The name must consist of at 
least two parts, separated by a dot (.).

In the next dialog, you should choose how your machine connects to the network. 
If you have an internal network card and an assigned IP address, gateway, and 
DNS, use static to enter these values. If your IP address is assigned by a 
DHCP server (commonly used by cable modem services, not equal to dsl 
services), select dhcp. Finally, if you do not have a network card, 
select the lo choice. The lo is also the correct choice if you are 
using a PCMCIA network card.

If you chose static, you must give your IP address, the netmask of your 
local network, your gateway address (you may leave it blank) and the IP 
address of your primary name server (you can add more nameservers later 
by editing the /etc/resolv.conf file) and then the configuration is finished.

If you chose dhcp, you can optionally give your dhcp hostname, however, 
netconfig will not ask more questions about your network, since all 
other data will be provided by the DHCP server.

If you chose lo, you don't have to answer any questions.

Finally, netconfig will write all your network configuration files. If you 
want to edit your settings by hand, the interface information is stored in 
the /etc/sysconfig/interfaces file.


@subsection Setting up a DSL connection


Configuring your DSL (or ADSL) connection should be done after configuring 
your network card. The configuration utility will also ask you if you want 
to configure your DSL connection.

First, you must give your username, something like @samp{someone@@provider.net}. 
Then you'll have to specify the network interface (usually eth0) through 
which the ADSL connecting script will try to communicate with your ADSL 
modem. Then enter your password twice.

If you are happy with the given configuration, press ENTER to accept 
the entered settings.

From now you can use the adsl service to manage your ADSL connection: 
su -c 'service adsl start' will connect, su -c 'service adsl stop' will 
disconnect. If you want Frugalware connect at startup automatically, 
add the ADSL service to the list of automatically started 
services: su -c 'service adsl add'.


@subsection Basic firewall configuration


Frugalware comes with a firewall configuration working 'out of the box'. 
This allows all outgoing connections, and incoming packets for established 
connections. It does not allow normal incoming packages for any ports. 
The firewall configuration is at @samp{/etc/sysconfig/firewall}.

Let's see an example: you would like to allow others to ssh into your 
computer. Edit /etc/sysconfig/firewall, remove the hashmark (#) from 
the beginning of the line under the # ssh description, and restart 
the firewall:

@samp{su -c 'service firewall restart'}

The same applies for Apache or any other services.

If you would like to have any advanced firewall settings, configure 
your firewall as root with iptables then save your config as root 
with iptables-save >/etc/sysconfig/firewall.

Warning! It will overwrite your existing configuration! It is strongly 
recommended to make a backup of /etc/sysconfig/firewall before saving 
your settings.


@section Graphical interface (X11)


@subsection Configuring your graphics card


If you install X, setup will run xconfig, our X configuration utility 
automatically. First, xconfig will detect your configuration and will 
create a basic configuration file. Then it will ask you to specify the 
screen resolution and colour depth. Finally, it will create the real 
configuration file, with the following extras:

@itemize
@item Automatically configures the mouse wheel, if found
@item Sets keyboard layout according to the selected language
@item Enables DPMS
@item Enables users to use the DRI extension 
@end itemize

After generating the config file, setup will start the X server. 
You must click the OK button to confirm to xconfig that the configuration 
was successful.


@subsection 3D acceleration, binary drivers


If there is built-in 3d acceleration support for your card in X, xconfig 
will add the necessary entries to /etc/X11/xorg.conf and X will load 
the module(s).

If you have an ATI or NVIDIA card, you probably need the manufacturer's 
binary drivers. Obtaining the NVIDIA binary driver is fairly simple:

@quotation
su -c 'pacman -Sy nvidia'
@end quotation

If you have an ATI card, installation will not be more complicated 
than a simple

@quotation
su -c 'pacman -Sy fglrx'
@end quotation

Warning: You must re-run pacman -S nvidia/fglrx after each kernel 
or xorg update!


@subsubsection xorg or kernel upgrade kills GUI, now what?


Reinstall nvidia or fglrx.


@subsection Allow root login in KDM/GDM


By default, no root login is permitted on the GUI, the recommended way of 
running graphical programs as root is to use gksu or kdesu.

To enable it anyway, the following lines should be edited:

For KDM (/usr/share/config/kdm/kdmrc)

@quotation
AllowRootLogin=false 
@end quotation

modify to

@quotation
AllowRootLogin=true 
@end quotation

For GDM (/etc/gdm/gdm.conf)

@quotation
AllowRoot=false 
@end quotation

modify to 

@quotation
AllowRoot=true
@end quotation

@section Sound

@subsection Configuring the sound card

Frugalware uses the Advanced Linux Sound Architecture (ALSA) subsystem for 
sound cards. For older applications, the Open Sound System (OSS) compatibility 
modules are loaded, but Frugalware does not contain native OSS support.

Finding and loading the necessary module for your sound card is fairly simple. 
The process is mostly the same as setting up your network card. 
During every boot, the hotplug scripts will detect your sound card, but, 
of course, you can take the automatically loaded module to blacklist, 
and load it manually by editing /etc/sysconfig/modules.


@subsection Volume configuration with alsamixer


By default, your sound card is muted. You can use alsamixer to unmute your 
card. Use the < and > keys to unmute a channel, up and down keys to set the 
volume and left or right keys to switch to another channel.

You can quit alsamixer by hitting the Esc key. During shutdown, Frugalware 
saves your settings, but you can store them any time with the

@quotation
su -c 'service alsa restart'
@end quotation

command.


@section Printing


Frugalware uses the Common Unix Printing System (CUPS) for handling 
printers and to manage printing.

@subsection Configuring the printer

1.) Open your favorite Internet browser and go to @uref{http://localhost:631/}. 
This is the Web interface of CUPS.

2.) Select Administration from the black top menu. If a username is required, 
type root, and give your root password.

3.) You can do almost everything here in connection with printing. 
In our example, we will add a new local printer.

4.) Click Add Printer, type in a name and optionally fill the 
Location and Description lines.

5.) Select Device, in most cases it is Parallel Port #1 for older models 
and one of the usb ports for newer ones.

6.) On the next page, select your vendor and your 
printer type (the driver/filter).


To set up a remote Windows share with password, give a string 
like this for location (the share name is the 
printer's assigned name on the remote system):
@samp{smb://user:passwd@@Netbios_Name_or_ip_address/Share_name}

Notice that, when you view the printer configuration, the 
credentials will not be shown but will be used.


@subsection My printer is not listed


If your vendor or printer type isn't listed in the wizard, you have to 
check @uref{http://linuxprinting.org/} wether if is supported 
under linux or not. If it's not on @uref{http://linuxprinting.org/} then try 
to google after. If listed but said to be "paperweight", then there 
is nothing to do. If it is supported and said to be working on the 
site, then please file a bug report with your printer details. 
While we fix the bug, you can install 
the driver (the ppd) by yourself.

On the left side, select Printer Listings. Then select your device's 
vendor and proper type. On the results page, select download PPD. 
After download, there will be a file named someting_that_ends_with.ppd.

Save the PPD file in the directory /usr/share/cups/model/. The PPD file 
doesn't have to be executable, but it should be world-readable and 
should have the file extension ".ppd".

Then restart the CUPS service: @samp{su -c 'service cups restart'}. The driver 
installation is now completed, now you can add your printer via the web 
interface. A good howto can be found at 
@uref{http://linuxprinting.org/cups-doc.html}.


@subsection Multiple pages on a single sheet


This is also known as n-up printing. If an application doesn't support it 
natively, print the document to a file as PostScript and use psnup:
@quotation
psnup -2 print.ps > print2page.ps 
@end quotation
The first option specifies the number of pages stacked on one physical sheet, 
the second is the filename of the original one-sided document, and the last 
is the n-up (two-sided) document. You can then print it with
@quotation
cupsdoprint -P nameofprinter foo.ps
@end quotation
or open it in your favourite PS viewer.

@subsection Troubleshooting

If something goes wrong, check out CUPS log at /var/log/cups. There is a 
verbose error log and an access log, too. Also, on linuxprinting.org there 
is a section for all supported (or known to be unsupported) printers.

@section The hotplug subsystem

@subsection udev

The /dev directory under Frugalware is a ramdisk. Every device node is 
created automatically during the system boot by the hotplug subsystem, 
more specifically, by udev. It means, there won't be unnecessary device 
nodes in /dev, but it also means, if you create a device node manually, 
it will exist only until the next shutdown/reboot.

If you want to force Frugalware to create a device node "manually" 
during each boot, you must edit the /etc/sysconfig/udev configuration file.

The udev needs sysfs, so it will only work with the 2.6.x kernel series. 
Do not try to run udev on Frugalware with kernel series 2.4.x.


@subsection Pen/Thumbdrives


Pendrives (also known as thumbdrives) are well-supported through the hotplug 
scripts and udev. If you insert a pendrive into the USB slot, udev will 
create a device node for it in /dev. Most pendrives contain only one 
partition and their filesystem is vfat. In most cases, the pendrive will 
behave like a SCSI disc. It means, you can find the pendrive 
under /dev/sda and its first partition under /dev/sda1. 
Adding the following line to /etc/fstab:
@quotation
/dev/sda1 /media/pendrive auto defaults,noauto,user 0 0
@end quotation
will allow users mount their pendrive if the device node 
exists (if the device is inserted into the slot).


@subsection Digital cameras


Tyipcally, there are two types of digital cameras. Some of them support 
both access methods, others use only one of them. First, most of the 
cameras can be treated as a pendrive (USB Mass Storage device), you can 
mount them and copy the pictures from them easily.

Other cameras support the Picture Transfer Protocol (PTP). You can 
grab the pictures from them (and do lots of other actions) with gphoto2, 
if your model is supported. (If it's not available on your system, a 
simple su -c 'pacman -S gphoto2' will install it onto your system.)

@subsection Automounting: D-BUS, HAL and Ivman

D-BUS is a simple IPC (inter-process communication) library based on messages. 
HAL is a hardware abstraction layer which uses D-BUS. Ivman is based on HAL 
and uses pmount ("policy mount"), which is a wrapper around the standard 
mount program which permits normal users to mount removable devices 
without an existing /etc/fstab entry.

Ivman is a daemon to automount CD-ROMs and DVDs when inserted in a drive, 
or play audio CDs or video DVDs automatically. It is 100% userspace, 
so it is a safe replacement for submount.

If you want to change the default settings, all config files are 
located in /etc/ivman. They are plain XML files, just read them, 
everything is quite self-explanatory.

@section The init scripts, bootup


@subsection About the kernel


The Linux kernel is in the kernel package. We're trying to use as few patches 
as possible to stay close to the vanilla kernel. The only exception is the 
bootsplash patch, which allows an optional nice splash screen during boot. 
The kernel contains compiled-in support for most IDE controllers, but all 
low-level SCSI drivers are compiled as a module. If Frugalware's kernel 
doesn't contain built-in support for your controller, you can compile your 
own kernel. Don't worry, it's fairly simple.

1) After setup is finished, choose the option that you want to do 
something special.

2) Change your root directory to /mnt/target:
@quotation
chroot /mnt/target
@end quotation
3) The source of your kernel (with additional patches applied) can be found 
at /usr/src/linux. So go to the /usr/src/linux directory and enter the 
configuration menu by typing make menuconfig. Inside it, select the driver 
you don't want to compile as a module anymore, and exit from the menu with 
saving changes.

4) Compile your kernel with the make command. This may take several minutes.

5) Copy your new kernel to /boot by typing the 
@samp{cp /usr/src/linux/arch/yourarch/boot/bzImage /boot/vmlinuz} command. 
On x86, yourarch is i386.

@subsection Init scripts

In Frugalware, init scripts are always called rc.something and 
they are located in /etc/rc.d. You can manage these scripts 
with the service command:
@itemize
@item @samp{service adsl stop} - it will stop your ADSL connection
@item @samp{service httpd start} - it will start your webserver
@item @samp{service clamd add} - the clamd service will be started during every boot
@item @samp{service sshd del} - the sshd service will not be started 
automatically anymore
@item @samp{service acpid list} - gives you a short list of the runlevels where the 
specified service is started automatically
@end itemize

@subsection System boot, runlevels


If you don't pass any extra @samp{init=/path/to/init} parameters to it, the kernel 
will start /sbin/init as the final step of the kernel boot sequence. 
According to the content of /etc/inittab, init will run:

1) each S* script at /etc/rc.d/rcS.d

2) each S* script at /etc/rc.d/rcn.d, where n is the default runlevel. 
This is set to 4 by default. Here is the list of available runlevels:
@quotation
0 = halt	@*
1 = single user mode	@*
2 = unused (but configured the same as runlevel 3)	@*
3 = multiuser mode (text mode)	@*
4 = multiuser mode, X11 with KDM/GDM/XDM (default Frugalware runlevel)	@*
5 = unused (but configured the same as runlevel 3)	@*
6 = reboot	@*
@end quotation

If X11 is configured, /etc/rc.d/rc.4 will start one of the desktop managers, 
as configured in /etc/sysconfig/desktop.

@subsection GRUB gfxmenu

Frugalware comes with a nice graphical grub menu 
(thanks to SuSE's gfxmenu developers). If you don't like it, you can disable 
it by commenting out the gfxmenu initialization line in /boot/grub/menu.lst. 
So for example:

Before: @samp{gfxmenu (hd0,5)/boot/grub/message}	@*
After: @samp{# gfxmenu (hd0,5)/boot/grub/message}

@subsection Bootsplash

Frugalware's kernel contains the bootsplash patch. This allows users to see a 
nice splash screen and a progress bar instead of text messages during the 
boot procedure. If you prefer verbose mode but don't want to press the F2 key 
each time you boot, or you would like to completely disable bootsplash, you'll 
need to add an extra parameter in /boot/grub/menu.lst to your kernel.

@itemize
@item splash=silent 	Silent mode, only a progressbar 
(default with GRUB gfxmenu)
@item splash=verbose 	Verbose mode, but with a nice background 
(default without gfxmenu)
@item splash=none 	completely disables bootsplash
@end itemize

Warning: You can't use framebuffer with 24 bit colour depth 
and bootsplash together.

Here is a summary of @samp{vga=} parameters which you can
 and which you cannot use:

@c have to use a multi-table, 2 columned (simple) tables are not enough

@multitable @columnfractions .5 .2 .2
@headitem depth / resolution @tab 800x600 @tab 1024x768
@item 16 bit (good)   @tab  788  @tab  791
@item 24 bit (wrong)  @tab  789  @tab  792
@end multitable


@subsection Hibernation


Hibernating your computer can cause data loss or severe filesystem damage 
if things go wrong. It's highly advised that first, you should consider if 
hibernating is worth the effort at all. Try it on a fresh installation first, 
instead of a production system.

From kernel/suspend.c:

@verbatim
* BIG FAT WARNING *********************************************************
*
* If you have unsupported (*) devices using DMA...
*                              ...say goodbye to your data.
*
* If you touch anything on disk between suspend and resume...
*                              ...kiss your data goodbye.
*
* If your disk driver does not support suspend... (IDE does)
*                              ...you'd better find out how to get along
*                                 without your data.
*
* If you change kernel command line between suspend and resume...
*                              ...prepare for nasty fsck or worse.
*
* If you change your hardware while system is suspended...
*                              ...well, it was not good idea.
*
* (*) suspend/resume support is needed to make it safe.
@end verbatim


You have been warned. If you are still not discouraged, read on!


First, you need to create a swap partition (if you don't have any yet). 
You have to add an extra resume=/dev/swappart kernel parameter to 
/boot/grub/menu.lst. For example, on my machine the old line was:

@samp{kernel (hd0,2)/boot/vmlinuz ro root=/dev/hda3 quiet vga=788}

The new line:

@samp{kernel (hd0,2)/boot/vmlinuz ro root=/dev/hda3 quiet vga=788 resume=/dev/hda2}

After the above are done, you must reboot. The hibernation can be started with:

@samp{echo shutdown > /sys/power/disk; echo disk > /sys/power/state}

and next time you boot your kernel it should resume. For more info, look at 
/usr/src/linux/Documentation/power/swsusp.txt.  It requires the kernel source, 
which can be installed issuing the @samp{pacman -S kernel-source} 
command as root.


@section Apt - pacman cross reference


For those who are familiar with the apt package management tool, 
here is a quick cross-reference.

@c well, multi-tables, again :)

@multitable @columnfractions .4 .3 .3
@headitem Action
 	@tab Apt command 
 	@tab pacman command
@item Refresh the package database: 
	@tab  apt-get update  
	@tab  pacman -Sy
@item Update currently installed packages to 
 the newest available version:  
	@tab apt-get upgrade 
	@tab pacman -Su
@item Install a new package:  
	@tab apt-get install foo
	@tab pacman -S foo
@item Remove a package:  
	@tab  apt-get remove foo 
	@tab pacman -Rc foo
@item Search in the full package database:  
	@tab  apt-cache search foo 
	@tab pacman -Ss foo
@item Install a package from a file:  
	@tab  dpkg -i foo.deb 
	@tab pacman -A foo.tgz
@item Clean the package cache: 
	@tab  apt-get clean 
	@tab pacman -Sc
@end multitable

@section Applications


The following sections describe the configuration of some applications.


@subsection Noteedit and timidity


I included boobaa's repo, installed noteedit but it won't start!

Probably you didn't set up your hardware-related stuff.
@enumerate
@item Install timidity++ and eawpats from boobaa's repo.

@item echo "snd_seq" >>/etc/sysconfig/modules (this is necessary to
 load the module during boot)

@item modprobe snd_seq (load the module now)

@item service timidity add (in order to start timidity server 
automatically during boot)

@item service timidity start (start timidity server now) 

@end enumerate
You can start noteedit now, but set it up to use timidity-based MIDI devices.

@subsection lmsensors

lmsensors is a hardware monitoring tool which is able to read thermal and 
voltage values and fan speeds from the sensor chips of your motherboard. 
Before running sensors you have to run sensors-detect as root to initialize 
them. It will autodetect your hardware and define which kernel modules you 
need to get it working properly, and tell you how to autoload them during 
boot.


@subsection Apache/httpd with SSL


How to configure Apache - optionally with SSL support?

@enumerate
@item These steps require root privileges, so use su - to get a root shell.

@item The Apache server isn't started by default. You can change this with the

service httpd add

command.

@item We don't want to reboot, so start it manually:

root@@vmhome:# service httpd start

Starting Apache web server (no SSL) [ OK ]

@item If you want SSL support:

root@@vmhome:# cd /etc/httpd/conf/

root@@vmhome:/etc/httpd/conf# sh mkcert.sh

Signature Algorithm ((R)SA or (D)SA) [R]:

Here we can accept the default RSA signature algorithm first. Then we 
have to fill out some fields. There are quite a few fields but you 
can leave most of them blank. If you enter '.', the field will be left blank.
@c this is nested
@enumerate
@item  Country Name (2 letter code) [XY]:

Give the 2-letter code of our contry (for example US)

@item  State or Province Name (full name) [Snake Desert]:

We type our state.

@item  Locality Name (eg, city) [Snake Town]:

The name of our city.

@item  Organization Name (eg, company) [Snake Oil, Ltd]:

Our organization's name.

@item  Organizational Unit Name (eg, section) [Webserver Team]:

Our section's name.

@item  Common Name (eg, FQDN) [www.snakeoil.com]:

Important: Give a real address here, otherwise you'll get warnings in 
your browser!

@item  Email Address (eg, @samp{name@@FQDN}) [@samp{www@@snakeoil.com}]:

I usually give the email address of the webmaster here. (webmaster@@domain.com)

@item  Certificate Validity (days) [365]:

In most cases, one year will be good.

Then, we should choose the version of our certificate:

Certificate Version (1 or 3) [3]:

The default 3 will be good, so just hit enter. In the next step we can
 encrypt our private key:

Encrypt the private key now? [Y/n]:

The keys will not be readable by users, so we can leave this step out.

So the following files are created: 
@verbatim
/etc/httpd/conf/ssl.key/server.key (keep this file private!)
/etc/httpd/conf/ssl.crt/server.crt
/etc/httpd/conf/ssl.csr/server.csr
@end verbatim
@end enumerate

@item Now we should restart Apache:

@samp{root@@vmhome:# service httpd restart}

Stopping Apache web server [ OK ]
Starting Apache web server [ OK ]

@item Then we can check if the task was successful:

@samp{vmiklos@@vmhome:$ elinks https://localhost/}
@end enumerate

This should show the default homapage, received via SSL :)

@subsection Questions and answers

@subsubsection Vim's syntax highlighting works in Konsole, but it 
doesn't work in gnome-terminal nor mrxvt

Konsole sets TERM=xterm-color, others set TERM=xterm. Workaround in 
gnome-terminal: enable Edit->Current profile...->Title 
and command->Run command as a login shell.


@subsubsection I have removed gcc package, and I keep getting lots 
of warnings/errors. Now what?


You should _never_ remove gcc completely , as it contains some libs that 
other packages depend on. Without gcc your system most likely won't even 
start. You may remove gcc>=4.0.1-2, but this is currently experimental.


@subsubsection I am new to qemu and I want to use it, help!


qemu-img create foo.img 2G @*
wget bar.iso @*
qemu -hda foo.img -cdrom bar.iso @*


@subsubsection How should I remote control xmms from xchat?


First make sure you really need it - some people think it's a security hole. 
You need XChat-XMMS plugin 
(http://inconnu.isu.edu/~ink/new/projects/xchat-xmms/xchat-xmms-0.8.1.tar.gz) 
from XChat's Scripts + Plugins 
(http://scripts.xchat.org/cgi-bin/search?str=xmms&cat=0&Submit=Search) section, 
and some other packages (mostly Perl modules) which I'm too lazy to search for, 
but are available in fpm. Unpack the tarball, copy the .pl script to your 
XChat dir, and (try to) load it. If it complains about missing Perl modules, 
install them and try again. (This script has some minor bugs, but was found 
to be the most useful one amongst the kind. The documentation is a German PDF, 
which is to be translated to English/Hungarian.)

