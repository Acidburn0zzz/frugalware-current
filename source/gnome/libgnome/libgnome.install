schemas=(
	'etc/gconf/schemas/desktop_gnome_accessibility_keyboard.schemas'
	'etc/gconf/schemas/desktop_gnome_accessibility_startup.schemas'
	'etc/gconf/schemas/desktop_gnome_applications_browser.schemas'
	'etc/gconf/schemas/desktop_gnome_applications_help_viewer.schemas'
	'etc/gconf/schemas/desktop_gnome_applications_terminal.schemas'
	'etc/gconf/schemas/desktop_gnome_applications_window_manager.schemas'
	'etc/gconf/schemas/desktop_gnome_background.schemas'
	'etc/gconf/schemas/desktop_gnome_file_views.schemas'
	'etc/gconf/schemas/desktop_gnome_interface.schemas'
	'etc/gconf/schemas/desktop_gnome_lockdown.schemas'
	'etc/gconf/schemas/desktop_gnome_peripherals_keyboard.schemas'
	'etc/gconf/schemas/desktop_gnome_peripherals_mouse.schemas'
	'etc/gconf/schemas/desktop_gnome_sound.schemas'
	'etc/gconf/schemas/desktop_gnome_thumbnailers.schemas'
	'etc/gconf/schemas/desktop_gnome_typing_break.schemas'
)

post_install() {
	echo -n "updating gconf schemas... "
	for schema in "${schemas[@]}" ; do
		GCONF_CONFIG_SOURCE=`usr/bin/gconftool-2 --get-default-source` usr/bin/gconftool-2 --makefile-install-rule "$schema" > /dev/null 2>&1
	done
	kill -HUP `pidof /usr/libexec/gconfd-2` > /dev/null 2>&1
	echo "done."
}

post_upgrade() {
	post_install $1
}

pre_remove() {
	echo -n "updating gconf schemas... "
	for schema in "${schemas[@]}" ; do
		GCONF_CONFIG_SOURCE=`usr/bin/gconftool-2 --get-default-source` usr/bin/gconftool-2 --makefile-uninstall-rule "$schema" > /dev/null 2>&1
	done
	kill -HUP `pidof /usr/libexec/gconfd-2` > /dev/null 2>&1
	echo "done."
}

op=$1
shift

$op $*
