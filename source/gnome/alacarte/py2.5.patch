--- alacarte-0.10.1/configure	2006-10-03 01:49:15.000000000 +0200
+++ alacarte-0.10.1-p/configure	2006-10-16 23:41:33.000000000 +0200
@@ -723,7 +723,7 @@
 INTLTOOL_MSGMERGE
 INTLTOOL_XGETTEXT
 ALL_LINGUAS
-PYTHON2_4
+PYTHON2_5
 PYTHON
 PYTHON_VERSION
 PYTHON_PREFIX
@@ -6222,16 +6222,16 @@
 
 
   if test -z "$PYTHON"; then
-    # Extract the first word of "python2.4", so it can be a program name with args.
-set dummy python2.4; ac_word=$2
+    # Extract the first word of "python2.5", so it can be a program name with args.
+set dummy python2.5; ac_word=$2
 { echo "$as_me:$LINENO: checking for $ac_word" >&5
 echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
-if test "${ac_cv_path_PYTHON2_4+set}" = set; then
+if test "${ac_cv_path_PYTHON2_5+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
-  case $PYTHON2_4 in
+  case $PYTHON2_5 in
   [\\/]* | ?:[\\/]*)
-  ac_cv_path_PYTHON2_4="$PYTHON2_4" # Let the user override the test with a path.
+  ac_cv_path_PYTHON2_5="$PYTHON2_5" # Let the user override the test with a path.
   ;;
   *)
   as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
@@ -6241,7 +6241,7 @@
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
   if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; }; then
-    ac_cv_path_PYTHON2_4="$as_dir/$ac_word$ac_exec_ext"
+    ac_cv_path_PYTHON2_5="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
@@ -6252,10 +6252,10 @@
   ;;
 esac
 fi
-PYTHON2_4=$ac_cv_path_PYTHON2_4
-if test -n "$PYTHON2_4"; then
-  { echo "$as_me:$LINENO: result: $PYTHON2_4" >&5
-echo "${ECHO_T}$PYTHON2_4" >&6; }
+PYTHON2_5=$ac_cv_path_PYTHON2_5
+if test -n "$PYTHON2_5"; then
+  { echo "$as_me:$LINENO: result: $PYTHON2_5" >&5
+echo "${ECHO_T}$PYTHON2_5" >&6; }
 else
   { echo "$as_me:$LINENO: result: no" >&5
 echo "${ECHO_T}no" >&6; }
@@ -6263,21 +6263,21 @@
 
 
   else
-    PYTHON2_4="$PYTHON"
+    PYTHON2_5="$PYTHON"
   fi
 
-  PYTHON="$PYTHON2_4"
+  PYTHON="$PYTHON2_5"
 
 
   if test -n "$PYTHON"; then
 
 
-            { echo "$as_me:$LINENO: checking whether $PYTHON version is >= 2.4.0" >&5
-echo $ECHO_N "checking whether $PYTHON version is >= 2.4.0... $ECHO_C" >&6; }
+            { echo "$as_me:$LINENO: checking whether $PYTHON version is >= 2.5.0" >&5
+echo $ECHO_N "checking whether $PYTHON version is >= 2.5... $ECHO_C" >&6; }
       prog="import sys, string
 # split strings by '.' and convert to numeric.  Append some zeros
 # because we need at least 4 digits for the hex conversion.
-minver = map(int, string.split('2.4.0', '.')) + [0, 0, 0]
+minver = map(int, string.split('2.5', '.')) + [0, 0, 0]
 minverhex = 0
 for i in xrange(0, 4): minverhex = (minverhex << 8) + minver[i]
 sys.exit(sys.hexversion < minverhex)"
@@ -6610,8 +6610,8 @@
 	:
 fi
 
-{ echo "$as_me:$LINENO: checking for pygtk 2.8.0 installed for python 2.4" >&5
-echo $ECHO_N "checking for pygtk 2.8.0 installed for python 2.4... $ECHO_C" >&6; }
+{ echo "$as_me:$LINENO: checking for pygtk 2.8.0 installed for python 2.5" >&5
+echo $ECHO_N "checking for pygtk 2.8.0 installed for python 2.5... $ECHO_C" >&6; }
 prog="
 import pygtk; pygtk.require('2.0')
 import gobject
@@ -7459,7 +7459,7 @@
 INTLTOOL_MSGMERGE!$INTLTOOL_MSGMERGE$ac_delim
 INTLTOOL_XGETTEXT!$INTLTOOL_XGETTEXT$ac_delim
 ALL_LINGUAS!$ALL_LINGUAS$ac_delim
-PYTHON2_4!$PYTHON2_4$ac_delim
+PYTHON2_5!$PYTHON2_5$ac_delim
 PYTHON!$PYTHON$ac_delim
 PYTHON_VERSION!$PYTHON_VERSION$ac_delim
 PYTHON_PREFIX!$PYTHON_PREFIX$ac_delim
