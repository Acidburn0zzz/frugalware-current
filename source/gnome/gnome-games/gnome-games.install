schemas=(
	'etc/gconf/schemas/aisleriot.schemas'
	'etc/gconf/schemas/blackjack.schemas'
	'etc/gconf/schemas/gataxx.schemas'
	'etc/gconf/schemas/glines.schemas'
	'etc/gconf/schemas/gnect.schemas'
	'etc/gconf/schemas/gnibbles.schemas'
	'etc/gconf/schemas/gnobots2.schemas'
	'etc/gconf/schemas/gnome-stones.schemas'
	'etc/gconf/schemas/gnometris.schemas'
	'etc/gconf/schemas/gnomine.schemas'
	'etc/gconf/schemas/gnotravex.schemas'
	'etc/gconf/schemas/gnotski.schemas'
	'etc/gconf/schemas/gtali.schemas'
	'etc/gconf/schemas/iagno.schemas'
	'etc/gconf/schemas/libgnomegames.schemas'
	'etc/gconf/schemas/mahjongg.schemas'
	'etc/gconf/schemas/same-gnome.schemas'
)

post_install()
{
	echo -n "updating gconf schemas... "
	for schema in "${schemas[@]}" ; do
		GCONF_CONFIG_SOURCE=`/usr/bin/gconftool-2 --get-default-source` /usr/bin/gconftool-2 --makefile-install-rule "$schema" > /dev/null 2>&1
	done
	kill -HUP `pidof /usr/libexec/gconfd-2` > /dev/null 2>&1
	echo "done."
	echo -n "updating scrollkeeper catalogue... "
	scrollkeeper-update -p /var/lib/scrollkeeper > /dev/null 2>&1
	echo "done."
	echo -n "updating desktop database... "
	update-desktop-database > /dev/null 2>&1
	echo "done."
}

post_upgrade()
{
	post_install
}

pre_remove()
{
	echo -n "updating gconf schemas... "
	for schema in "${schemas[@]}" ; do
		GCONF_CONFIG_SOURCE=`/usr/bin/gconftool-2 --get-default-source` /usr/bin/gconftool-2 --makefile-install-rule "$schema" > /dev/null 2>&1
	done
	kill -HUP `pidof /usr/libexec/gconfd-2` > /dev/null 2>&1
	echo "done."
}

post_remove()
{
	echo -n "updating scrollkeeper catalogue... "
	scrollkeeper-update -p /var/lib/scrollkeeper > /dev/null 2>&1
	echo "done."
	echo -n "updating desktop database... "
	update-desktop-database > /dev/null 2>&1
	echo "done."
}

op=$1
shift

$op $*

# vim: ft=sh
