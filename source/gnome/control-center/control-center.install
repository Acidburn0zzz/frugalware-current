schemas=(
	'/etc/gconf/schemas/apps_gnome_settings_daemon_default_editor.schemas'
	'/etc/gconf/schemas/apps_gnome_settings_daemon_keybindings.schemas'
	'/etc/gconf/schemas/apps_gnome_settings_daemon_screensaver.schemas'
	'/etc/gconf/schemas/desktop_gnome_font_rendering.schemas'
	'/etc/gconf/schemas/desktop_gnome_peripherals_keyboard_xkb.schemas'
	'/etc/gconf/schemas/fontilus.schemas'
	'/etc/gconf/schemas/themus.schemas'
)

post_install() {
	echo -n "updating gconf schemas... "
	for schema in "${schemas[@]}" ; do
		GCONF_CONFIG_SOURCE=`/usr/bin/gconftool-2 --get-default-source` /usr/bin/gconftool-2 --makefile-install-rule "$schema" > /dev/null 2>&1
	done
	if [ -e /bin/pidof ]; then
		kill -HUP `pidof /usr/libexec/gconfd-2` > /dev/null 2>&1
	fi
	echo "done."
        echo -n "updating scrollkeeper catalogue... "
        scrollkeeper-update -p /var/lib/scrollkeeper > /dev/null 2>&1
        echo "done."
	echo -n "updating desktop database... "
	update-desktop-database > /dev/null 2>&1
	echo "done."
}

post_upgrade() {
	post_install $1
}

pre_remove() {
	echo -n "updating gconf schemas... "
	for schema in "${schemas[@]}" ; do
		GCONF_CONFIG_SOURCE=`/usr/bin/gconftool-2 --get-default-source` /usr/bin/gconftool-2 --makefile-uninstall-rule "$schema" > /dev/null 2>&1
	done
	if [ -e /bin/pidof ]; then
		kill -HUP `pidof /usr/libexec/gconfd-2` > /dev/null 2>&1
	fi
	echo "done."
}

post_remove() {
        echo -n "updating scrollkeeper catalogue... "
        scrollkeeper-update -p /var/lib/scrollkeeper > /dev/null 2>&1
        echo "done."
	echo -n "updating desktop database... "
	update-desktop-database > /dev/null 2>&1
	echo "done."
}

op=$1
shift

$op $*
