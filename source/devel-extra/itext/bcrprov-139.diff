--- src/core/com/lowagie/text/pdf/PdfPKCS7.java	2008-05-14 15:10:19.000000000 +0200
+++ src/core/com/lowagie/text/pdf/PdfPKCS7.java	2008-06-10 12:30:09.000000000 +0200
@@ -172,7 +172,12 @@
     public PdfPKCS7(byte[] contentsKey, byte[] certsKey, String provider) throws SecurityException, InvalidKeyException, CertificateException, NoSuchProviderException, NoSuchAlgorithmException, IOException, StreamParsingException {
         X509CertParser cr = new X509CertParser();
         cr.engineInit(new ByteArrayInputStream(certsKey));
-        certs = cr.engineReadAll();
+	try {
+       		certs = cr.engineReadAll();
+	}
+	catch(Exception ecerts){
+     		throw new SecurityException("can't create certs object");
+	}
         signCert = (X509Certificate)certs.iterator().next();
         crls = new ArrayList();
         ASN1InputStream in = new ASN1InputStream(new ByteArrayInputStream(contentsKey));
@@ -241,10 +246,20 @@
         // the certificates and crls
         X509CertParser cr = new X509CertParser();
         cr.engineInit(new ByteArrayInputStream(contentsKey));
-        certs = cr.engineReadAll();
+	try{
+        	certs = cr.engineReadAll();
+	}
+	catch(Exception ecerts2){
+     		throw new SecurityException("can't create certs object");
+	}
         X509CRLParser cl = new X509CRLParser();
         cl.engineInit(new ByteArrayInputStream(contentsKey));
-        crls = cl.engineReadAll();
+       	try{
+		crls = cl.engineReadAll();
+	}
+	catch(Exception ectrls){
+     		throw new SecurityException("can't create crls object");
+	}
         
         // the possible ID_PKCS7_DATA
         ASN1Sequence rsaData = (ASN1Sequence)content.getObjectAt(2);
