Index: vorbis-tools/ogg123/speex_format.c
===================================================================
--- vorbis-tools/ogg123/speex_format.c (revision 12185)
+++ vorbis-tools/ogg123/speex_format.c (revision 14728)
@@ -104,5 +104,5 @@
 
   len = source->transport->peek(source, buf, sizeof(char), 36);
-  
+
   if (len >= 32 && memcmp(buf, "OggS", 4) == 0
       && memcmp(buf+28, "Speex   ", 8) == 0) /* 3 trailing spaces */
@@ -182,5 +182,5 @@
 
     ret = read_speex_header(decoder);
-    
+
     if (!ret) {
       *eos = 1;
@@ -201,5 +201,5 @@
     char *data;
     int i, j, nb_read;
-    
+
     /* First see if there is anything left in the output buffer and 
        empty it out */
@@ -210,5 +210,5 @@
 
       to_copy = priv->output_left < to_copy ? priv->output_left : to_copy;
-      
+
       /* Integerify it! */
       for (i = 0; i < to_copy; i++)
@@ -218,5 +218,5 @@
       priv->output_start += to_copy;
       priv->output_left -= to_copy;
-     
+
       priv->currentsample += to_copy / audio_fmt->channels;
 
@@ -225,9 +225,9 @@
       float *temp_output = priv->output;
       /* Decode some more samples */
-            
+
       /*Copy Ogg packet to Speex bitstream*/
       speex_bits_read_from(&priv->bits, (char*)priv->op.packet, 
 			   priv->op.bytes);
-      
+
       for (j = 0;j < priv->frames_per_packet; j++) {
 	/*Decode frame*/
@@ -258,5 +258,5 @@
     } else if (!priv->eof) {
       /* Finally, pull in some more data and try again on the next pass */
-      
+
       /*Get the ogg buffer for writing*/
       data = ogg_sync_buffer(&priv->oy, 200);
@@ -275,5 +275,5 @@
     }
   }
-  
+
   return bytes_requested - nbytes;
 }
@@ -412,5 +412,5 @@
 		
   cb->printf_metadata(callback_arg, 3, _("Encoded by: %s"), temp);
-  
+
 
   /* Parse out user comments */
@@ -441,5 +441,5 @@
       return;
     }
-    
+
     if (temp_len < len + 1) {
       temp_len = len + 1;
@@ -450,5 +450,5 @@
     strncpy(temp, c, len);
     temp[len] = '\0';
-    
+
     print_vorbis_comment(temp, cb, callback_arg);
 
@@ -470,5 +470,5 @@
    SpeexCallback callback;
    int enhance = ENHANCE_AUDIO;
-   
+
    *header = speex_packet_to_header((char*)op->packet, op->bytes);
    if (!*header) {
@@ -476,5 +476,5 @@
      return NULL;
    }
-   if ((*header)->mode >= SPEEX_NB_MODES) {
+   if ((*header)->mode >= SPEEX_NB_MODES || (*header)->mode < 0) {
      cb->printf_error(callback_arg, ERROR, 
 		      _("Mode number %d does not (any longer) exist in this version"),
@@ -485,5 +485,5 @@
    modeID = (*header)->mode;
    mode = speex_mode_list[modeID];
-   
+
    if (mode->bitstream_version < (*header)->mode_bitstream_version) {
      cb->printf_error(callback_arg, ERROR, _("The file was encoded with a newer version of Speex.\n You need to upgrade in order to play it.\n"));
@@ -494,9 +494,9 @@
      return NULL;
    }
-   
+
    st = speex_decoder_init(mode);
    speex_decoder_ctl(st, SPEEX_SET_ENH, &enhance);
    speex_decoder_ctl(st, SPEEX_GET_FRAME_SIZE, frame_size);
-   
+
    callback.callback_id = SPEEX_INBAND_STEREO;
    callback.func = speex_std_stereo_request_handler;
@@ -522,9 +522,9 @@
     /*Get the ogg buffer for writing*/
     data = ogg_sync_buffer(&priv->oy, 200);
-    
+
     /*Read bitstream from input file*/
     nb_read = trans->read(decoder->source, data, sizeof(char), 200);
     ogg_sync_wrote(&priv->oy, nb_read);
-    
+
     /*Loop for all complete pages we got (most likely only one)*/
     while (ogg_sync_pageout(&priv->oy, &priv->og)==1) {
@@ -534,5 +534,5 @@
 	stream_init = 1;
       }
-    
+
       /*Add page to the bitstream*/
       ogg_stream_pagein(&priv->os, &priv->og);
