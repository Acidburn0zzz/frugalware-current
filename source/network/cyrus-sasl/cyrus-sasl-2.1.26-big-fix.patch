diff -Naur cyrus-sasl-2.1.26/cmulocal/sasl2.m4 cyrus-sasl-2.1.26-patch/cmulocal/sasl2.m4
--- cyrus-sasl-2.1.26/cmulocal/sasl2.m4	2012-11-06 20:14:29.000000000 +0100
+++ cyrus-sasl-2.1.26-patch/cmulocal/sasl2.m4	2015-12-29 19:56:50.002238221 +0100
@@ -219,7 +219,11 @@
                  [AC_WARN([Cybersafe define not found])])
 
   elif test "$ac_cv_header_gssapi_h" = "yes"; then
-    AC_EGREP_HEADER(GSS_C_NT_HOSTBASED_SERVICE, gssapi.h,
+    AC_EGREP_CPP(hostbased_service_gss_nt_yes, gssapi.h,
+                 [#include <gssapi.h>
+                  #ifdef GSS_C_NT_HOSTBASED_SERVICE
+                    hostbased_service_gss_nt_yes
+                  #endif],
                     [AC_DEFINE(HAVE_GSS_C_NT_HOSTBASED_SERVICE,,
                                [Define if your GSSAPI implementation defines GSS_C_NT_HOSTBASED_SERVICE])])
   elif test "$ac_cv_header_gssapi_gssapi_h"; then
@@ -268,7 +272,11 @@
 
   cmu_save_LIBS="$LIBS"
   LIBS="$LIBS $GSSAPIBASE_LIBS"
-  AC_CHECK_FUNCS(gsskrb5_register_acceptor_identity)
+  AC_CHECK_FUNCS([gsskrb5_register_acceptor_identity], [],
+    [AC_CHECK_FUNCS([krb5_gss_register_acceptor_identity],
+      [AC_CHECK_HEADERS([gssapi/gssapi_krb5.h],
+         [AC_DEFINE([HAVE_GSSKRB5_REGISTER_ACCEPTOR_IDENTITY], [1])]
+  )])])
   AC_CHECK_FUNCS(gss_decapsulate_token)
   AC_CHECK_FUNCS(gss_encapsulate_token)
   AC_CHECK_FUNCS(gss_oid_equal)
diff -Naur cyrus-sasl-2.1.26/config/kerberos_v4.m4 cyrus-sasl-2.1.26-patch/config/kerberos_v4.m4
--- cyrus-sasl-2.1.26/config/kerberos_v4.m4	2012-01-28 00:31:36.000000000 +0100
+++ cyrus-sasl-2.1.26-patch/config/kerberos_v4.m4	2015-12-29 19:45:44.892957707 +0100
@@ -89,18 +89,18 @@
     dnl if we were ambitious, we would look more aggressively for the
     dnl krb4 install
     if test -d ${krb4}; then
-       AC_CACHE_CHECK(for Kerberos includes, cyrus_krbinclude, [
+       AC_CACHE_CHECK(for Kerberos includes, cyrus_cv_krbinclude, [
          for krbhloc in include/kerberosIV include/kerberos include
          do
            if test -f ${krb4}/${krbhloc}/krb.h ; then
-             cyrus_krbinclude=${krb4}/${krbhloc}
+             cyrus_cv_krbinclude=${krb4}/${krbhloc}
              break
            fi
          done
          ])
 
-       if test -n "${cyrus_krbinclude}"; then
-         CPPFLAGS="$CPPFLAGS -I${cyrus_krbinclude}"
+       if test -n "${cyrus_cv_krbinclude}"; then
+         CPPFLAGS="$CPPFLAGS -I${cyrus_cv_krbinclude}"
        fi
        LDFLAGS="$LDFLAGS -L$krb4/lib"
     fi
diff -Naur cyrus-sasl-2.1.26/configure.in cyrus-sasl-2.1.26-patch/configure.in
--- cyrus-sasl-2.1.26/configure.in	2012-10-12 16:05:48.000000000 +0200
+++ cyrus-sasl-2.1.26-patch/configure.in	2015-12-29 19:45:44.891957678 +0100
@@ -44,6 +44,8 @@
 AC_INIT(lib/saslint.h)
 AC_PREREQ([2.54])
 
+AC_CONFIG_MACRO_DIRS([cmulocal] [config])
+
 dnl use ./config.cache as the default cache file.
 dnl we require a cache file to successfully configure our build.
 if test $cache_file = "/dev/null"; then
diff -Naur cyrus-sasl-2.1.26/include/sasl.h cyrus-sasl-2.1.26-patch/include/sasl.h
--- cyrus-sasl-2.1.26/include/sasl.h	2012-10-12 16:05:48.000000000 +0200
+++ cyrus-sasl-2.1.26-patch/include/sasl.h	2015-12-29 19:58:10.738353076 +0100
@@ -121,6 +121,9 @@
 #ifndef SASL_H
 #define SASL_H 1
 
+/* stddef.h to get size_t defined */
+#include <stddef.h>
+
 /* Keep in sync with win32/common.mak */
 #define SASL_VERSION_MAJOR 2
 #define SASL_VERSION_MINOR 1
diff -Naur cyrus-sasl-2.1.26/lib/auxprop.c cyrus-sasl-2.1.26-patch/lib/auxprop.c
--- cyrus-sasl-2.1.26/lib/auxprop.c	2012-01-28 00:31:36.000000000 +0100
+++ cyrus-sasl-2.1.26-patch/lib/auxprop.c	2015-12-29 19:50:01.373343194 +0100
@@ -970,6 +970,10 @@
     }
 
     if(!found) {
+	/* compatibility with <= 2.1.23, ignore the lack of auxrop plugin */
+	if (!plist)
+	    result = SASL_OK;
+	else
 	_sasl_log(sparams->utils->conn, SASL_LOG_DEBUG,
 		  "could not find auxprop plugin, was searching for '%s'",
 		  plist ? plist : "[all]");
diff -Naur cyrus-sasl-2.1.26/lib/checkpw.c cyrus-sasl-2.1.26-patch/lib/checkpw.c
--- cyrus-sasl-2.1.26/lib/checkpw.c	2012-01-28 00:31:36.000000000 +0100
+++ cyrus-sasl-2.1.26-patch/lib/checkpw.c	2015-12-29 20:36:01.387503983 +0100
@@ -587,16 +587,14 @@
 	    /* Timeout. */
 	    errno = ETIMEDOUT;
 	    return -1;
-	case +1:
-	    if (FD_ISSET(fd, &rfds)) {
-		/* Success, file descriptor is readable. */
-		return 0;
-	    }
-	    return -1;
 	case -1:
 	    if (errno == EINTR || errno == EAGAIN)
 		continue;
 	default:
+            if (FD_ISSET(fd, &rfds)) {
+                /* Success, file descriptor is readable. */
+                return 0;
+            }
 	    /* Error catch-all. */
 	    return -1;
 	}
diff -Naur cyrus-sasl-2.1.26/lib/Makefile.am cyrus-sasl-2.1.26-patch/lib/Makefile.am
--- cyrus-sasl-2.1.26/lib/Makefile.am	2012-10-12 16:05:48.000000000 +0200
+++ cyrus-sasl-2.1.26-patch/lib/Makefile.am	2015-12-29 19:40:35.680046259 +0100
@@ -80,7 +80,7 @@
 
 libsasl2.a: libsasl2.la $(SASL_STATIC_OBJS)
 	@echo adding static plugins and dependencies
-	$(AR) cru .libs/$@ $(SASL_STATIC_OBJS)
+	$(AR) cru $@ $(SASL_STATIC_OBJS)
 	@for i in ./libsasl2.la ../sasldb/libsasldb.la ../plugins/lib*.la; do \
 	if test ! -f $$i; then continue; fi; . $$i; \
 	for j in $$dependency_libs foo; do \
diff -Naur cyrus-sasl-2.1.26/Makefile.am cyrus-sasl-2.1.26-patch/Makefile.am
--- cyrus-sasl-2.1.26/Makefile.am	2012-10-12 16:05:48.000000000 +0200
+++ cyrus-sasl-2.1.26-patch/Makefile.am	2015-12-29 19:45:44.891957678 +0100
@@ -43,6 +43,8 @@
 #
 ################################################################
 
+ACLOCAL_AMFLAGS = -I cmulocal -I config
+
 if SASLAUTHD
 SAD = saslauthd
 else
diff -Naur cyrus-sasl-2.1.26/plugins/gssapi.c cyrus-sasl-2.1.26-patch/plugins/gssapi.c
--- cyrus-sasl-2.1.26/plugins/gssapi.c	2012-01-28 00:31:36.000000000 +0100
+++ cyrus-sasl-2.1.26-patch/plugins/gssapi.c	2015-12-29 19:56:50.002238221 +0100
@@ -50,6 +50,9 @@
 #else
 #include <gssapi/gssapi.h>
 #endif
+#if defined (KRB5_HEIMDAL) || defined (HAVE_GSSAPI_GSSAPI_KRB5_H)
+#include <gssapi/gssapi_krb5.h>
+#endif
 
 #ifdef WIN32
 #  include <winsock2.h>
diff -Naur cyrus-sasl-2.1.26/plugins/ldapdb.c cyrus-sasl-2.1.26-patch/plugins/ldapdb.c
--- cyrus-sasl-2.1.26/plugins/ldapdb.c	2012-01-28 00:31:36.000000000 +0100
+++ cyrus-sasl-2.1.26-patch/plugins/ldapdb.c	2015-12-29 20:34:25.821118022 +0100
@@ -404,6 +404,7 @@
 	if ( len > out_max )
 	    len = out_max;
 	memcpy(out, bvals[0]->bv_val, len);
+    out[len] = '\0';
 	*out_ulen = len;
 	ber_bvecfree(bvals);
     }
diff -Naur cyrus-sasl-2.1.26/pwcheck/pwcheck_getspnam.c cyrus-sasl-2.1.26-patch/pwcheck/pwcheck_getspnam.c
--- cyrus-sasl-2.1.26/pwcheck/pwcheck_getspnam.c	2012-01-28 00:31:36.000000000 +0100
+++ cyrus-sasl-2.1.26-patch/pwcheck/pwcheck_getspnam.c	2015-12-29 19:47:19.473681843 +0100
@@ -24,6 +24,7 @@
 ******************************************************************/
 
 #include <shadow.h>
+#include <string.h>
 
 extern char *crypt();
 
diff -Naur cyrus-sasl-2.1.26/sample/server.c cyrus-sasl-2.1.26-patch/sample/server.c
--- cyrus-sasl-2.1.26/sample/server.c	2012-01-28 00:31:36.000000000 +0100
+++ cyrus-sasl-2.1.26-patch/sample/server.c	2015-12-29 19:48:17.314347416 +0100
@@ -85,8 +85,10 @@
 
 #ifdef HAVE_GSS_GET_NAME_ATTRIBUTE
 #include <gssapi/gssapi.h>
+#ifndef KRB5_HEIMDAL
 #include <gssapi/gssapi_ext.h>
 #endif
+#endif
 
 #include "common.h"
 
diff -Naur cyrus-sasl-2.1.26/saslauthd/auth_rimap.c cyrus-sasl-2.1.26-patch/saslauthd/auth_rimap.c
--- cyrus-sasl-2.1.26/saslauthd/auth_rimap.c	2012-10-12 16:05:48.000000000 +0200
+++ cyrus-sasl-2.1.26-patch/saslauthd/auth_rimap.c	2015-12-29 20:36:01.386503958 +0100
@@ -90,6 +90,7 @@
 					   service we connect to.	 */
 #define TAG "saslauthd"			/* IMAP command tag */
 #define LOGIN_CMD (TAG " LOGIN ")	/* IMAP login command (with tag) */
+#define LOGOUT_CMD (TAG " LOGOUT ")	/* IMAP logout command (with tag)*/
 #define NETWORK_IO_TIMEOUT 30		/* network I/O timeout (seconds) */
 #define RESP_LEN 1000			/* size of read response buffer  */
 
@@ -307,10 +308,12 @@
     int	s=-1;				/* socket to remote auth host   */
     struct addrinfo *r;			/* remote socket address info   */
     struct iovec iov[5];		/* for sending LOGIN command    */
+    struct iovec iov2[2];               /* for sending LOGOUT command   */
     char *qlogin;			/* pointer to "quoted" login    */
     char *qpass;			/* pointer to "quoted" password */
     char *c;				/* scratch pointer              */
     int rc;				/* return code scratch area     */
+    int rcl;				/* return code scratch area     */
     char rbuf[RESP_LEN];		/* response read buffer         */
     char hbuf[NI_MAXHOST], pbuf[NI_MAXSERV];
     int saved_errno;
@@ -371,7 +374,7 @@
     if ( rc>0 ) {
         /* check if there is more to read */
         fd_set         perm;
-        int            fds, ret;
+        int            fds, ret, loopc;
         struct timeval timeout;
 
         FD_ZERO(&perm);
@@ -380,6 +383,7 @@
 
         timeout.tv_sec  = 1;
         timeout.tv_usec = 0;
+        loopc = 0;
         while( select (fds, &perm, NULL, NULL, &timeout ) >0 ) {
            if ( FD_ISSET(s, &perm) ) {
               ret = read(s, rbuf+rc, sizeof(rbuf)-rc);
@@ -387,6 +391,14 @@
                  rc = ret;
                  break;
               } else {
+                 if (ret == 0) {
+                   loopc += 1;
+                 } else {
+                   loopc = 0;
+                 }
+                 if (loopc > sizeof(rbuf)) { // arbitrary chosen value
+                   break;
+                 }
                  rc += ret;
               }
            }
@@ -484,7 +496,7 @@
     if ( rc>0 ) {
         /* check if there is more to read */
         fd_set         perm;
-        int            fds, ret;
+        int            fds, ret, loopc;
         struct timeval timeout;
 
         FD_ZERO(&perm);
@@ -493,6 +505,7 @@
 
         timeout.tv_sec  = 1;
         timeout.tv_usec = 0;
+        loopc = 0;
         while( select (fds, &perm, NULL, NULL, &timeout ) >0 ) {
            if ( FD_ISSET(s, &perm) ) {
               ret = read(s, rbuf+rc, sizeof(rbuf)-rc);
@@ -500,11 +513,37 @@
                  rc = ret;
                  break;
               } else {
+                 if (ret == 0) {
+                   loopc += 1;
+                 } else {
+                   loopc = 0;
+                 }
+                 if (loopc > sizeof(rbuf)) { // arbitrary chosen value
+                   break;
+                 }
                  rc += ret;
               }
            }
         }
     }
+
+    /* close remote imap */
+    iov2[0].iov_base = LOGOUT_CMD;
+    iov2[0].iov_len  = sizeof(LOGOUT_CMD) - 1;
+    iov2[1].iov_base = "\r\n";
+    iov2[1].iov_len  = sizeof("\r\n") - 1;
+
+    if (flags & VERBOSE) {
+        syslog(LOG_DEBUG, "auth_rimap: sending %s%s %s",
+               LOGOUT_CMD, qlogin, qpass);
+    }
+    alarm(NETWORK_IO_TIMEOUT);
+    rcl = retry_writev(s, iov2, 2);
+    alarm(0);
+    if (rcl == -1) {
+        syslog(LOG_WARNING, "auth_rimap: writev logout: %m");
+    }
+
     (void) close(s);			/* we're done with the remote */
     if (rc == -1) {
 	syslog(LOG_WARNING, "auth_rimap: read (response): %m");
diff -Naur cyrus-sasl-2.1.26/saslauthd/configure.in cyrus-sasl-2.1.26-patch/saslauthd/configure.in
--- cyrus-sasl-2.1.26/saslauthd/configure.in	2012-10-12 16:05:48.000000000 +0200
+++ cyrus-sasl-2.1.26-patch/saslauthd/configure.in	2015-12-29 19:45:44.891957678 +0100
@@ -1,7 +1,8 @@
 AC_INIT(mechanisms.h)
 AC_PREREQ([2.54])
 
-AC_CONFIG_AUX_DIR(config)
+AC_CONFIG_MACRO_DIRS([../cmulocal] [../config])
+AC_CONFIG_AUX_DIR([config])
 AC_CANONICAL_HOST
 
 dnl Should we enable SASLAUTHd at all?
@@ -25,6 +26,7 @@
 AC_PROG_MAKE_SET
 AC_PROG_LN_S
 AC_PROG_INSTALL
+AC_PROG_LIBTOOL
 
 dnl Checks for build foo
 CMU_C___ATTRIBUTE__
@@ -77,7 +79,7 @@
   AC_DEFINE(AUTH_SASLDB,[],[Include SASLdb Support])
   SASL_DB_PATH_CHECK()
   SASL_DB_CHECK()
-  SASL_DB_LIB="$SASL_DB_LIB ../sasldb/.libs/libsasldb.al"
+  SASL_DB_LIB="$SASL_DB_LIB ../sasldb/.libs/libsasldb.a"
 fi
 
 AC_ARG_ENABLE(httpform, [  --enable-httpform       enable HTTP form authentication [[no]] ],
@@ -163,30 +165,30 @@
 
 dnl Checks for which function macros exist
 AC_MSG_CHECKING(whether $CC implements __func__)
-AC_CACHE_VAL(have_func,
+AC_CACHE_VAL(_cv_have_func,
 [AC_TRY_LINK([#include <stdio.h>],[printf("%s", __func__);],
-have_func=yes,
-have_func=no)])
-AC_MSG_RESULT($have_func)
-if test "$have_func" = yes; then
+_cv_have_func=yes,
+_cv_have_func=no)])
+AC_MSG_RESULT($_cv_have_func)
+if test "$_cv_have_func" = yes; then
        AC_DEFINE(HAVE_FUNC,[],[Does the compiler understand __func__])
 else
        AC_MSG_CHECKING(whether $CC implements __PRETTY_FUNCTION__)
-       AC_CACHE_VAL(have_pretty_function,
+       AC_CACHE_VAL(_cv_have_pretty_function,
        [AC_TRY_LINK([#include <stdio.h>],[printf("%s", __PRETTY_FUNCTION__);],
-       have_pretty_function=yes,
-       have_pretty_function=no)])
-       AC_MSG_RESULT($have_pretty_function)
-       if test "$have_pretty_function" = yes; then
+       _cv_have_pretty_function=yes,
+       _cv_have_pretty_function=no)])
+       AC_MSG_RESULT($_cv_have_pretty_function)
+       if test "$_cv_have_pretty_function" = yes; then
                AC_DEFINE(HAVE_PRETTY_FUNCTION,[],[Does compiler understand __PRETTY_FUNCTION__])
        else
                AC_MSG_CHECKING(whether $CC implements __FUNCTION__)
-               AC_CACHE_VAL(have_function,
+               AC_CACHE_VAL(_cv_have_function,
                [AC_TRY_LINK([#include <stdio.h>],[printf("%s", __FUNCTION__);],
-               have_function=yes,
-               have_function=no)])
-               AC_MSG_RESULT($have_function)
-               if test "$have_function" = yes; then
+               _cv_have_function=yes,
+               _cv_have_function=no)])
+               AC_MSG_RESULT($_cv_have_function)
+               if test "$_cv_have_function" = yes; then
                        AC_DEFINE(HAVE_FUNCTION,[],[Does compiler understand __FUNCTION__])
                fi
        fi
diff -Naur cyrus-sasl-2.1.26/saslauthd/Makefile.am cyrus-sasl-2.1.26-patch/saslauthd/Makefile.am
--- cyrus-sasl-2.1.26/saslauthd/Makefile.am	2012-01-28 00:31:36.000000000 +0100
+++ cyrus-sasl-2.1.26-patch/saslauthd/Makefile.am	2015-12-29 19:46:26.940168853 +0100
@@ -1,4 +1,6 @@
 AUTOMAKE_OPTIONS = 1.7
+ACLOCAL_AMFLAGS = -I ../cmulocal -I ../config
+
 sbin_PROGRAMS	= saslauthd testsaslauthd
 EXTRA_PROGRAMS  = saslcache
 
@@ -16,7 +18,7 @@
 saslauthd_DEPENDENCIES = saslauthd-main.o @LTLIBOBJS@
 saslauthd_LDADD	= @SASL_KRB_LIB@ \
 		  @GSSAPIBASE_LIBS@ @GSSAPI_LIBS@ @LIB_CRYPT@ @LIB_SIA@ \
-		  @LIB_SOCKET@ @SASL_DB_LIB@ @LIB_PAM@ @LDAP_LIBS@ @LTLIBOBJS@
+		  @LIB_SOCKET@ ../sasldb/libsasldb.la @LIB_PAM@ @LDAP_LIBS@ @LTLIBOBJS@
 
 testsaslauthd_SOURCES = testsaslauthd.c utils.c
 testsaslauthd_LDADD = @LIB_SOCKET@
diff -Naur cyrus-sasl-2.1.26/sasldb/Makefile.am cyrus-sasl-2.1.26-patch/sasldb/Makefile.am
--- cyrus-sasl-2.1.26/sasldb/Makefile.am	2012-01-28 00:31:36.000000000 +0100
+++ cyrus-sasl-2.1.26-patch/sasldb/Makefile.am	2015-12-29 19:46:26.941168882 +0100
@@ -55,14 +55,14 @@
 
 libsasldb_la_SOURCES = allockey.c sasldb.h
 EXTRA_libsasldb_la_SOURCES = $(extra_common_sources)
-libsasldb_la_DEPENDENCIES = $(SASL_DB_BACKEND)
-libsasldb_la_LIBADD = $(SASL_DB_BACKEND) 
+libsasldb_la_DEPENDENCIES = $(SASL_DB_BACKEND) $(SASL_DB_LIB)
+libsasldb_la_LIBADD = $(SASL_DB_BACKEND) $(SASL_DB_LIB)
 
 # Prevent make dist stupidity
 libsasldb_a_SOURCES =
 EXTRA_libsasldb_a_SOURCES =
 
 libsasldb.a: libsasldb.la $(SASL_DB_BACKEND_STATIC)
-	$(AR) cru .libs/$@ $(SASL_DB_BACKEND_STATIC)
+	$(AR) cru $@ $(SASL_DB_BACKEND_STATIC)
 
 
