/*Fix for the kernel header 2.26. Should be fix in the new version */ 

diff -Nurp source/client.orig/compat_smb_fs.h source/client/compat_smb_fs.h
--- source/client.orig/compat_smb_fs.h	1970-01-01 02:00:00.000000000 +0200
+++ source/client/compat_smb_fs.h	2008-09-12 02:11:39.000000000 +0300
@@ -0,0 +1,25 @@
+/*
+ *  compat_smb_fs.h
+ *
+ *  Copyright (C) 1995 by Paal-Kr. Engstad and Volker Lendecke
+ *  Copyright (C) 1997 by Volker Lendecke
+ *
+ */
+
+#ifndef _LINUX_COMPAT_SMB_FS_H
+#define _LINUX_COMPAT_SMB_FS_H
+
+#include "compat_smb.h"
+
+/*
+ * ioctl commands
+ */
+#define	SMB_IOC_GETMOUNTUID		_IOR('u', 1, __kernel_old_uid_t)
+#define SMB_IOC_NEWCONN                 _IOW('u', 2, struct smb_conn_opt)
+
+/* __kernel_uid_t can never change, so we have to use __kernel_uid32_t */
+#define	SMB_IOC_GETMOUNTUID32		_IOR('u', 3, __kernel_uid32_t)
+
+
+
+#endif /* _LINUX_COMPAT_SMB_FS_H */
diff -Nurp source/client.orig/compat_smb.h source/client/compat_smb.h
--- source/client.orig/compat_smb.h	1970-01-01 02:00:00.000000000 +0200
+++ source/client/compat_smb.h	2008-09-12 02:12:14.000000000 +0300
@@ -0,0 +1,64 @@
+/*
+ *  compat_smb.h
+ *
+ *  Copyright (C) 1995, 1996 by Paal-Kr. Engstad and Volker Lendecke
+ *  Copyright (C) 1997 by Volker Lendecke
+ *
+ */
+
+#ifndef _LINUX_COMPAT_SMB_H
+#define _LINUX_COMPAT_SMB_H
+
+#include <linux/types.h>
+#include <linux/magic.h>
+
+enum smb_protocol { 
+	SMB_PROTOCOL_NONE, 
+	SMB_PROTOCOL_CORE, 
+	SMB_PROTOCOL_COREPLUS, 
+	SMB_PROTOCOL_LANMAN1, 
+	SMB_PROTOCOL_LANMAN2, 
+	SMB_PROTOCOL_NT1 
+};
+
+enum smb_case_hndl {
+	SMB_CASE_DEFAULT,
+	SMB_CASE_LOWER,
+	SMB_CASE_UPPER
+};
+
+struct smb_dskattr {
+        __u16 total;
+        __u16 allocblocks;
+        __u16 blocksize;
+        __u16 free;
+};
+
+struct smb_conn_opt {
+
+        /* The socket */
+	unsigned int fd;
+
+	enum smb_protocol protocol;
+	enum smb_case_hndl case_handling;
+
+	/* Connection-Options */
+
+	__u32              max_xmit;
+	__u16              server_uid;
+	__u16              tid;
+
+        /* The following are LANMAN 1.0 options */
+        __u16              secmode;
+        __u16              maxmux;
+        __u16              maxvcs;
+        __u16              rawmode;
+        __u32              sesskey;
+
+	/* The following are NT LM 0.12 options */
+	__u32              maxraw;
+	__u32              capabilities;
+	__s16              serverzone;
+};
+
+#endif
diff -Nurp source/client.orig/smbmnt.c source/client/smbmnt.c
--- source/client.orig/smbmnt.c	2008-05-28 15:41:11.000000000 +0300
+++ source/client/smbmnt.c	2008-09-12 02:12:38.000000000 +0300
@@ -29,7 +29,7 @@
 
 #include <asm/types.h>
 #include <asm/posix_types.h>
-#include <linux/smb.h>
+#include "compat_smb.h"
 #include <linux/smb_mount.h>
 #include <asm/unistd.h>
 
diff -Nurp source/client.orig/smbmount.c source/client/smbmount.c
--- source/client.orig/smbmount.c	2008-09-12 01:49:54.000000000 +0300
+++ source/client/smbmount.c	2008-09-12 02:13:21.000000000 +0300
@@ -22,7 +22,7 @@
 
 #include <mntent.h>
 #include <asm/types.h>
-#include <linux/smb_fs.h>
+#include "compat_smb_fs.h"
 
 extern BOOL in_client;
 extern pstring user_socket_options;
diff -Nurp source/client.orig/smbumount.c source/client/smbumount.c
--- source/client.orig/smbumount.c	2008-05-28 15:41:11.000000000 +0300
+++ source/client/smbumount.c	2008-09-12 02:22:46.000000000 +0300
@@ -13,9 +13,9 @@
 
 #include <asm/types.h>
 #include <asm/posix_types.h>
-#include <linux/smb.h>
+#include "compat_smb.h"
 #include <linux/smb_mount.h>
-#include <linux/smb_fs.h>
+#include "compat_smb_fs.h"
 
 /* This is a (hopefully) temporary hack due to the fact that
 	sizeof( uid_t ) != sizeof( __kernel_uid_t ) under glibc.
