--- mutt-1.4.2.1/keymap.h.foo	2005-03-07 16:12:31.000000000 -0500
+++ mutt-1.4.2.1/keymap.h	2005-03-07 16:12:42.000000000 -0500
@@ -22,6 +22,8 @@
 /* maximal length of a key binding sequence used for buffer in km_bindkey */
 #define MAX_SEQ 8
 
+#include "mapping.h"
+
 /* type for key storage, the rest of mutt works fine with int type */
 typedef short keycode_t;
 
--- mutt-1.4.2.1/mutt_socket.c.foo	2005-03-07 16:33:30.000000000 -0500
+++ mutt-1.4.2.1/mutt_socket.c	2005-03-07 16:38:36.000000000 -0500
@@ -50,7 +50,7 @@
   if (socket_preconnect ())
     return -1;
 
-  return conn->open (conn);
+  return (conn->open) (conn);
 }
 
 int mutt_socket_close (CONNECTION* conn)
@@ -60,7 +60,7 @@
   if (conn->fd < 0)
     dprint (1, (debugfile, "mutt_socket_close: Attempt to close closed connection.\n"));
   else
-    rc = conn->close (conn);
+    rc = (conn->close) (conn);
 
   conn->fd = -1;
   conn->ssf = 0;
@@ -78,7 +78,7 @@
     return -1;
   }
 
-  rc = conn->read (conn, buf, len);
+  rc = (conn->read) (conn, buf, len);
   /* EOF */
   if (rc == 0)
   {
@@ -105,7 +105,7 @@
   }
 
   len = mutt_strlen (buf);
-  if ((rc = conn->write (conn, buf, len)) < 0)
+  if ((rc = (conn->write) (conn, buf, len)) < 0)
   {
     dprint (1, (debugfile,
       "mutt_socket_write: error writing, closing socket\n"));
@@ -129,7 +129,7 @@
   if (conn->bufpos >= conn->available)
   {
     if (conn->fd >= 0)
-      conn->available = conn->read (conn, conn->inbuf, sizeof (conn->inbuf));
+      conn->available = (conn->read) (conn, conn->inbuf, sizeof (conn->inbuf));
     else
     {
       dprint (1, (debugfile, "mutt_socket_readchar: attempt to read from closed connection.\n"));
--- mutt-1.4.2.1/mutt_socket.h.foo	2005-03-07 16:37:33.000000000 -0500
+++ mutt-1.4.2.1/mutt_socket.h	2005-03-07 16:38:05.000000000 -0500
@@ -44,10 +44,10 @@
   struct _connection *next;
 
   void *sockdata;
-  int (*read) (struct _connection* conn, char* buf, size_t len);
-  int (*write) (struct _connection *conn, const char *buf, size_t count);
-  int (*open) (struct _connection *conn);
-  int (*close) (struct _connection *conn);
+  int (*(read)) (struct _connection* conn, char* buf, size_t len);
+  int (*(write)) (struct _connection *conn, const char *buf, size_t count);
+  int (*(open)) (struct _connection *conn);
+  int (*(close)) (struct _connection *conn);
 } CONNECTION;
 
 int mutt_socket_open (CONNECTION* conn);
