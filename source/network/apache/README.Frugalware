How to configure Apache
~~~~~~~~~~~~~~~~~~~~~~~

1. These steps require root privileges, so use su - to get a root shell.
2. The Apache server isn't started by default. You can change this with the
+
-----------------
service httpd add
-----------------
+
command.

3. We don't want to reboot, so start it manually:
+
-------------------
service httpd start
-------------------
+
`Starting Apache web server (no SSL) [ OK ]`

You have finished if you don't need SSL support.

Setting up SSL support for Apache
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1. Creating the certifications:
+
-------------------------------------------------------------------------------
# cd /etc/httpd/conf/
# sh mkcert.sh

Signature Algorithm ((R)SA or (D)SA) [R]:

     Here we can accept the default RSA signature algorithm first. Then
     we have to fill out some fields. There are quite a few fields but
     you can leave most of them blank. If you enter '.', the field will
     be left blank.
       1) Country Name (2 letter code) [XY]:

          Give the 2-letter code of our contry (for example US)

       2) State or Province Name (full name) [Snake Desert]:

          We type our state.

       3) Locality Name (eg, city) [Snake Town]:

         The name of our city.

       4) Organization Name (eg, company) [Snake Oil, Ltd]:

          Our organization's name.

       5) Organizational Unit Name (eg, section) [Webserver Team]:

          Our section's name.

       6) Common Name (eg, FQDN) [www.snakeoil.com]:

          Important: Give a real address here, otherwise you'll get
          warnings in your browser!

       7) Email Address (eg, `name@FQDN') [`www@snakeoil.com']:

          I usually give the email address of the webmaster here.
          (webmaster@domain.com)

       8) Certificate Validity (days) [365]:

          In most cases, one year will be good.

          Then, we should choose the version of our certificate:

          Certificate Version (1 or 3) [3]:

          The default 3 will be good, so just hit enter. In the next
          step we can  encrypt our private key:

          Encrypt the private key now? [Y/n]:

          The keys will not be readable by users, so we can leave this
          step out.
-------------------------------------------------------------------------------
+
So the following files are created:
+
------------------------------------------------------------
/etc/httpd/conf/ssl.key/server.key (keep this file private!)
/etc/httpd/conf/ssl.crt/server.crt
/etc/httpd/conf/ssl.csr/server.csr
------------------------------------------------------------

2. Enable SSL in '/etc/httpd/conf/httpd.conf':
   Open the file with your favorite editor, and search the followings
   at about line 1040:
+
-----------------------------------------
# Uncomment this if you want SSL support!
#<IfModule mod_ssl.c>
#	Include /etc/httpd/conf/ssl.conf
#</IfModule>
-----------------------------------------
+
Uncomment them.

3. Now we should restart Apache:
+
---------------------
service httpd restart
---------------------

4. Then we can check if the task was successful:
+
-------------------------
elinks https://localhost/
-------------------------
+
This should show the default homapage, received via SSL :)

Self-signed Apache certificate
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This must be done as root.
+
-----------------------------------------
openssl genrsa -des3 -out server.key 1024
-----------------------------------------
+
Enter "foobar" twice as passphrase.
+
------------------------------------------------
openssl req -new -key server.key -out server.csr
------------------------------------------------
+
Enter "foobar" when asked for passphrase, answer the questions. Leave "challenge password" "and optional company name" empty.
+
----------------------------------------------
cp server.key server.key.org
openssl rsa -in server.key.org -out server.key
----------------------------------------------
+
Enter "foobar" when asked for passphrase.
+
------------------------------------------------------------------------------
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
cp server.crt /etc/httpd/conf/ssl.crt/
cp server.key /etc/httpd/conf/ssl.key/
service httpd stop
vi /etc/httpd/conf/httpd.conf
------------------------------------------------------------------------------
+
Uncomment the marked three lines around line 1044 (look for "SSL support").
+
---------------------
service httpd restart
---------------------
+
Don't forget to open port 443 on your firewall, if any. (Based on link:http://www.akadia.com/services/ssh_test_certificate.html[How to create a self-signed SSL Certificate...], tested on frugalware-current 2007-02-14.)
