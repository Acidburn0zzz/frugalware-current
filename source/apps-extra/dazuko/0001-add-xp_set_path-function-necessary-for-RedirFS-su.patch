From 8c31801270d4085bdf0704d572a0c3fbe8cf6a8f Mon Sep 17 00:00:00 2001
From: ogman <ogman>
Date: Wed, 12 Dec 2007 16:08:39 +0000
Subject: [PATCH] add xp_set_path() function (necessary for RedirFS support)

---
 dazuko_call.h     |   14 ++++++++++++++
 dazuko_core.c     |   10 ++++++++++
 dazuko_core.h     |    3 +++
 dazuko_dummyos.c  |    8 ++++++++
 dazuko_freebsd.c  |    8 ++++++++
 dazuko_freebsd5.c |    8 ++++++++
 dazuko_linux.c    |    8 ++++++++
 dazuko_linux26.c  |    8 ++++++++
 dazuko_rsbac.c    |    8 ++++++++
 9 files changed, 75 insertions(+), 0 deletions(-)

diff --git a/dazuko_call.h b/dazuko_call.h
index ad0e8e8..68bd929 100644
--- a/dazuko_call.h
+++ b/dazuko_call.h
@@ -484,4 +484,18 @@ static int call_xp_init_cache(unsigned long ttl)
 	return xp_init_cache(ttl);
 }
 
+
+/* include/exclude paths */
+
+static int call_xp_set_path(const char *path, int type)
+{
+	if (path == NULL)
+	{
+		xp_print("dazuko: warning: call_xp_set_path(path=NULL)\n");
+		return -1;
+	}
+
+	return xp_set_path(path, type);
+}
+
 #endif
diff --git a/dazuko_core.c b/dazuko_core.c
index 7585166..fa8ca8f 100644
--- a/dazuko_core.c
+++ b/dazuko_core.c
@@ -1607,10 +1607,20 @@ static int dazuko_set_option(struct daemon_id *did, int opt, void *param, int le
 
 		case ADD_INCLUDE_PATH:
 			error = dazuko_insert_path_fs(&(sl->incl_paths), &(sl->lock_lists), (char *)param, len);
+			if (!error)
+			{
+				if (call_xp_set_path((char *)param, ADD_INCLUDE_PATH) != 0)
+					error = XP_ERROR_INVALID;
+			}
 			break;
 
 		case ADD_EXCLUDE_PATH:
 			error = dazuko_insert_path_fs(&(sl->excl_paths), &(sl->lock_lists), (char *)param, len);
+			if (!error)
+			{
+				if (call_xp_set_path((char *)param, ADD_EXCLUDE_PATH) != 0)
+					error = XP_ERROR_INVALID;
+			}
 			break;
 
 		case REMOVE_ALL_PATHS:
diff --git a/dazuko_core.h b/dazuko_core.h
index 935ca63..e64bf3e 100644
--- a/dazuko_core.h
+++ b/dazuko_core.h
@@ -178,6 +178,9 @@ int xp_set_event_properties(struct event_properties *event_p, struct xp_daemon_i
 /* cache settings */
 int xp_init_cache(unsigned long ttl);
 
+/* include/exclude paths */
+int xp_set_path(const char *path, int type);
+
 /* output */
 int xp_print(const char *fmt, ...);
 
diff --git a/dazuko_dummyos.c b/dazuko_dummyos.c
index d092581..6bdcf70 100644
--- a/dazuko_dummyos.c
+++ b/dazuko_dummyos.c
@@ -350,6 +350,14 @@ int xp_init_cache(unsigned long ttl)
 }
 
 
+/* include/exclude paths */
+
+int xp_set_path(const char *path, int type)
+{
+	return 0;
+}
+
+
 /* system calls */
 
 static void dummy_dazuko_setid(const char *id)
diff --git a/dazuko_freebsd.c b/dazuko_freebsd.c
index f4cb535..c16412c 100644
--- a/dazuko_freebsd.c
+++ b/dazuko_freebsd.c
@@ -825,6 +825,14 @@ int xp_init_cache(unsigned long ttl)
 }
 
 
+/* include/exclude paths */
+
+int xp_set_path(const char *path, int type)
+{
+	return 0;
+}
+
+
 /* system calls */
 
 static inline int check_fd(struct proc *p, int fd)
diff --git a/dazuko_freebsd5.c b/dazuko_freebsd5.c
index ff0994f..d26f030 100644
--- a/dazuko_freebsd5.c
+++ b/dazuko_freebsd5.c
@@ -877,6 +877,14 @@ int xp_init_cache(unsigned long ttl)
 }
 
 
+/* include/exclude paths */
+
+int xp_set_path(const char *path, int type)
+{
+	return 0;
+}
+
+
 /* system calls */
 
 static inline int check_fd(struct proc *p, int fd)
diff --git a/dazuko_linux.c b/dazuko_linux.c
index f8bd860..d83bded 100644
--- a/dazuko_linux.c
+++ b/dazuko_linux.c
@@ -1429,6 +1429,14 @@ int xp_init_cache(unsigned long ttl)
 }
 
 
+/* include/exclude paths */
+
+int xp_set_path(const char *path, int type)
+{
+	return 0;
+}
+
+
 /* system calls */
 
 #if defined(ON_OPEN_SUPPORT)
diff --git a/dazuko_linux26.c b/dazuko_linux26.c
index cdf0d43..a1676be 100644
--- a/dazuko_linux26.c
+++ b/dazuko_linux26.c
@@ -579,6 +579,14 @@ int xp_init_cache(unsigned long ttl)
 }
 
 
+/* include/exclude paths */
+
+int xp_set_path(const char *path, int type)
+{
+	return 0;
+}
+
+
 /* system hooks */
 
 #ifndef DAZUKO_FIST
diff --git a/dazuko_rsbac.c b/dazuko_rsbac.c
index 9fa701b..6023bae 100644
--- a/dazuko_rsbac.c
+++ b/dazuko_rsbac.c
@@ -518,6 +518,14 @@ int xp_init_cache(unsigned long ttl)
 }
 
 
+/* include/exclude paths */
+
+int xp_set_path(const char *path, int type)
+{
+	return 0;
+}
+
+
 /* system hook */
 
 inline int xp_sys_hook()
-- 
1.5.4.rc4.25.g81cc-dirty

