diff --git a/drivers/lirc_atiusb/lirc_atiusb.c b/drivers/lirc_atiusb/lirc_atiusb.c
index b0fe76f..bcce6a1 100644
--- a/drivers/lirc_atiusb/lirc_atiusb.c
+++ b/drivers/lirc_atiusb/lirc_atiusb.c
@@ -822,7 +822,7 @@ static void free_in_endpt(struct in_endpt *iep, int mem_failure)
 				ir->devnum);
 	case 3:
 #ifdef KERNEL_2_5
-		usb_buffer_free(iep->ir->usbdev, iep->len, iep->buf, iep->dma);
+		usb_free_coherent(iep->ir->usbdev, iep->len, iep->buf, iep->dma);
 #else
 		kfree(iep->buf);
 #endif
@@ -867,7 +867,7 @@ static struct in_endpt *new_in_endpt(struct atirf_dev *ir,
 	iep->len = len;
 
 #ifdef KERNEL_2_5
-	iep->buf = usb_buffer_alloc(dev, len, GFP_ATOMIC, &iep->dma);
+	iep->buf = usb_alloc_coherent(dev, len, GFP_ATOMIC, &iep->dma);
 #else
 	iep->buf = kmalloc(len, GFP_KERNEL);
 #endif
@@ -929,7 +929,7 @@ static void free_out_endpt(struct out_endpt *oep, int mem_failure)
 		}
 	case 3:
 #ifdef KERNEL_2_5
-		usb_buffer_free(oep->ir->usbdev, USB_OUTLEN,
+		usb_free_coherent(oep->ir->usbdev, USB_OUTLEN,
 				oep->buf, oep->dma);
 #else
 		kfree(oep->buf);
@@ -963,7 +963,7 @@ static struct out_endpt *new_out_endpt(struct atirf_dev *ir,
 		init_waitqueue_head(&oep->wait);
 
 #ifdef KERNEL_2_5
-		oep->buf = usb_buffer_alloc(dev, USB_OUTLEN,
+		oep->buf = usb_alloc_coherent(dev, USB_OUTLEN,
 					    GFP_ATOMIC, &oep->dma);
 #else
 		oep->buf = kmalloc(USB_OUTLEN, GFP_KERNEL);
diff --git a/drivers/lirc_igorplugusb/lirc_igorplugusb.c b/drivers/lirc_igorplugusb/lirc_igorplugusb.c
index 02c14a3..aa51eaf 100644
--- a/drivers/lirc_igorplugusb/lirc_igorplugusb.c
+++ b/drivers/lirc_igorplugusb/lirc_igorplugusb.c
@@ -450,7 +450,7 @@ static void *usb_remote_probe(struct usb_device *dev, unsigned int ifnum,
 	}
 
 #if defined(KERNEL_2_5)
-	ir->buf_in = usb_buffer_alloc(dev,
+	ir->buf_in = usb_alloc_coherent(dev,
 			      DEVICE_BUFLEN+DEVICE_HEADERLEN,
 			      GFP_ATOMIC, &ir->dma_in);
 #else
@@ -486,7 +486,7 @@ mem_failure_switch:
 	switch (mem_failure) {
 	case 9:
 #if defined(KERNEL_2_5)
-		usb_buffer_free(dev, DEVICE_BUFLEN+DEVICE_HEADERLEN,
+		usb_free_coherent(dev, DEVICE_BUFLEN+DEVICE_HEADERLEN,
 			ir->buf_in, ir->dma_in);
 #else
 		kfree(ir->buf_in);
@@ -569,7 +569,7 @@ static void usb_remote_disconnect(struct usb_device *dev, void *ptr)
 
 
 #if defined(KERNEL_2_5)
-	usb_buffer_free(dev, ir->len_in, ir->buf_in, ir->dma_in);
+	usb_free_coherent(dev, ir->len_in, ir->buf_in, ir->dma_in);
 #else
 	kfree(ir->buf_in);
 #endif
diff --git a/drivers/lirc_mceusb/lirc_mceusb.c b/drivers/lirc_mceusb/lirc_mceusb.c
index 3611646..9d32912 100644
--- a/drivers/lirc_mceusb/lirc_mceusb.c
+++ b/drivers/lirc_mceusb/lirc_mceusb.c
@@ -1041,7 +1041,7 @@ static int mceusb_dev_probe(struct usb_interface *intf,
 		goto mem_failure_switch;
 	}
 
-	ir->buf_in = usb_buffer_alloc(dev, maxp, GFP_ATOMIC, &ir->dma_in);
+	ir->buf_in = usb_alloc_coherent(dev, maxp, GFP_ATOMIC, &ir->dma_in);
 	if (!ir->buf_in) {
 		mem_failure = 5;
 		goto mem_failure_switch;
@@ -1081,7 +1081,7 @@ mem_failure_switch:
 	case 9:
 		usb_free_urb(ir->urb_in);
 	case 7:
-		usb_buffer_free(dev, maxp, ir->buf_in, ir->dma_in);
+		usb_free_coherent(dev, maxp, ir->buf_in, ir->dma_in);
 	case 5:
 		lirc_buffer_free(rbuf);
 	case 4:
@@ -1211,7 +1211,7 @@ static void mceusb_dev_disconnect(struct usb_interface *intf)
 	mutex_lock(&ir->lock);
 	usb_kill_urb(ir->urb_in);
 	usb_free_urb(ir->urb_in);
-	usb_buffer_free(dev, ir->len_in, ir->buf_in, ir->dma_in);
+	usb_free_coherent(dev, ir->len_in, ir->buf_in, ir->dma_in);
 	mutex_unlock(&ir->lock);
 
 	unregister_from_lirc(ir);
diff --git a/drivers/lirc_streamzap/lirc_streamzap.c b/drivers/lirc_streamzap/lirc_streamzap.c
index 4ad2321..6e7b335 100755
--- a/drivers/lirc_streamzap/lirc_streamzap.c
+++ b/drivers/lirc_streamzap/lirc_streamzap.c
@@ -546,7 +546,7 @@ static void *streamzap_probe(struct usb_device *udev, unsigned int ifnum,
 
 	sz->buf_in_len = sz->endpoint->wMaxPacketSize;
 #ifdef KERNEL_2_5
-	sz->buf_in = usb_buffer_alloc(sz->udev, sz->buf_in_len,
+	sz->buf_in = usb_alloc_coherent(sz->udev, sz->buf_in_len,
 				      GFP_ATOMIC, &sz->dma_in);
 #else
 	sz->buf_in = kmalloc(sz->buf_in_len, GFP_KERNEL);
@@ -657,7 +657,7 @@ error:
 	if (sz) {
 		usb_free_urb(sz->urb_in);
 #ifdef KERNEL_2_5
-		usb_buffer_free(udev, sz->buf_in_len, sz->buf_in, sz->dma_in);
+		usb_free_coherent(udev, sz->buf_in_len, sz->buf_in, sz->dma_in);
 #else
 		if (sz->buf_in) {
 			kfree(sz->buf_in);
@@ -788,7 +788,7 @@ static void streamzap_disconnect(struct usb_device *dev, void *ptr)
 	usb_free_urb(sz->urb_in);
 
 #ifdef KERNEL_2_5
-	usb_buffer_free(sz->udev, sz->buf_in_len, sz->buf_in, sz->dma_in);
+	usb_free_coherent(sz->udev, sz->buf_in_len, sz->buf_in, sz->dma_in);
 #else
 	kfree(sz->buf_in);
 #endif
