# HG changeset patch
# User Stuart Rackham <srackham@methods.co.nz>
# Date 1287292278 -46800
# Node ID 02c8e59ce1b67ba91c7c77d1ab59c3a4524def33
# Parent  3c92b13a7f45e76465388ef533312a2208515aee
'attributes', 'titles' and 'specialcharacters' sections are now read from the
local `asciidoc.conf` file before the header is parsed. This fixes a regression
problem. See
http://groups.google.com/group/asciidoc/browse_thread/thread/1b3f88f1f8118ab3

diff -r 3c92b13a7f45 -r 02c8e59ce1b6 asciidoc.py
--- a/asciidoc.py	Wed Oct 13 08:52:09 2010 +1300
+++ b/asciidoc.py	Sun Oct 17 18:11:18 2010 +1300
@@ -4259,10 +4259,12 @@
         self.include1 = {}      # Holds include1::[] files for {include1:}.
         self.dumping = False    # True if asciidoc -c option specified.
 
-    def load_file(self,fname,dir=None):
+    def load_file(self, fname, dir=None, include=[]):
         """
         Loads sections dictionary with sections from file fname.
         Existing sections are overlaid.
+        The 'include' list contains the section names to be loaded,
+        if 'inlude' is not specified all sections are loaded.
         Return False if no file was found in any of the locations.
         """
         if dir:
@@ -4316,9 +4318,14 @@
             else:
                 sections[section] = contents
         rdr.close()
+        if include:
+            for s in set(sections) - set(include):
+                del sections[s]
         attrs = {}
         self.load_sections(sections,attrs)
-        self.loaded.append(os.path.realpath(fname))
+        if not include:
+            # If all sections are loaded mark this file as loaded.
+            self.loaded.append(os.path.realpath(fname))
         document.update_attributes(attrs) # So they are available immediately.
         return True
 
@@ -5313,13 +5320,17 @@
             if o == '-c': config.dumping = True
             if o == '-s': config.header_footer = False
             if o == '-v': config.verbose = True
-        # Check the infile exists.
-        if infile != '<stdin>' and not os.path.isfile(infile):
-            raise EAsciiDoc,'input file %s missing' % infile
-        document.infile = infile
         # Load asciidoc.conf files.
         if not config.load_from_dirs('asciidoc.conf'):
             raise EAsciiDoc,'configuration file asciidoc.conf missing'
+        # Check the infile exists.
+        if infile != '<stdin>':
+            if not os.path.isfile(infile):
+                raise EAsciiDoc,'input file %s missing' % infile
+            indir = os.path.dirname(infile)
+            config.load_file('asciidoc.conf', indir,
+                            ['attributes','titles','specialchars'])
+        document.infile = infile
         AttributeList.initialize()
         # Open input file and parse document header.
         reader.tabsize = config.tabsize
@@ -5342,10 +5353,9 @@
             document.load_lang()
         # Load local conf files (conf files in the input file directory).
         if infile != '<stdin>':
-            d =os.path.dirname(infile)
-            config.load_from_dirs('asciidoc.conf', [d])
-            config.load_backend([d])
-            config.load_filters([d])
+            config.load_file('asciidoc.conf', indir)
+            config.load_backend([indir])
+            config.load_filters([indir])
             # Load document specific configuration files.
             f = os.path.splitext(infile)[0]
             config.load_file(f + '.conf')
diff -r 3c92b13a7f45 -r 02c8e59ce1b6 doc/asciidoc.txt
--- a/doc/asciidoc.txt	Wed Oct 13 08:52:09 2010 +1300
+++ b/doc/asciidoc.txt	Sun Oct 17 18:11:18 2010 +1300
@@ -3647,6 +3647,8 @@
 the following order:
 
 - `asciidoc.conf` from locations 1, 2, 3.
+- 'attributes', 'titles' and 'specialcharacters' sections from the
+  `asciidoc.conf` in location 4.
 - The document header is parsed at this point.
 - `<backend>.conf` and `<backend>-<doctype>.conf` from locations 1,
   2,3.
