diff -ur OpenGTL-0.9.16.old/CMakeLists.txt OpenGTL-0.9.16/CMakeLists.txt
--- OpenGTL-0.9.16.old/CMakeLists.txt	2011-12-28 16:01:43.000000000 +0100
+++ OpenGTL-0.9.16/CMakeLists.txt	2012-06-03 12:48:29.023685746 +0200
@@ -47,8 +47,8 @@
 
 find_package(LLVM REQUIRED)
 
-if( NOT MSVC AND NOT LLVM_VERSION STREQUAL "3.0" ) # There is no way with MSVC to know the llvm version
-  message(FATAL_ERROR "LLVM 3.0 is required.")
+if( NOT MSVC AND NOT LLVM_VERSION STREQUAL "3.1" ) # There is no way with MSVC to know the llvm version
+  message(FATAL_ERROR "LLVM 3.1 is required.")
 endif()
 
 if(MSVC)
diff -ur OpenGTL-0.9.16.old/OpenGTL/GTLCore/AST/Expression.cpp OpenGTL-0.9.16/OpenGTL/GTLCore/AST/Expression.cpp
--- OpenGTL-0.9.16.old/OpenGTL/GTLCore/AST/Expression.cpp	2011-12-28 16:01:43.000000000 +0100
+++ OpenGTL-0.9.16/OpenGTL/GTLCore/AST/Expression.cpp	2012-06-03 12:55:01.894676725 +0200
@@ -261,7 +261,7 @@
 
 LLVMBackend::ExpressionResult StringExpression::generateValue( LLVMBackend::GenerationContext& _gc, LLVMBackend::ExpressionGenerationContext& _egc) const
 {
-    return LLVMBackend::ExpressionResult(llvm::ConstantArray::get(_gc.llvmContext(), (const std::string&)m_string, true ), Type::Integer8 ); // return a null terminated string
+    return LLVMBackend::ExpressionResult(llvm::ConstantDataArray::getString(_gc.llvmContext(), (const std::string&)m_string, true ), Type::Integer8 ); // return a null terminated string
 }
 
 ExpressionResultSP StringExpression::generateValue( GenerationVisitor* _generationVisitor) const
