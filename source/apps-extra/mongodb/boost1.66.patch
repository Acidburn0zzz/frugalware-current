diff -Naur mongodb-src-r3.6.2/src/mongo/db/repl/oplog_fetcher.cpp mongodb-src-r3.6.2-p/src/mongo/db/repl/oplog_fetcher.cpp
--- mongodb-src-r3.6.2/src/mongo/db/repl/oplog_fetcher.cpp	2018-01-05 00:28:55.000000000 +0100
+++ mongodb-src-r3.6.2-p/src/mongo/db/repl/oplog_fetcher.cpp	2018-02-11 17:30:07.172391706 +0100
@@ -245,7 +245,7 @@
         if (!metadataResult.isOK()) {
             return metadataResult.getStatus();
         }
-        oqMetadata = boost::make_optional<rpc::OplogQueryMetadata>(metadataResult.getValue());
+        oqMetadata = boost::make_optional(metadataResult.getValue());
     }
     return oqMetadata;
 }
diff -Naur mongodb-src-r3.6.2/src/mongo/executor/network_interface_mock_test.cpp mongodb-src-r3.6.2-p/src/mongo/executor/network_interface_mock_test.cpp
--- mongodb-src-r3.6.2/src/mongo/executor/network_interface_mock_test.cpp	2018-01-05 00:28:55.000000000 +0100
+++ mongodb-src-r3.6.2-p/src/mongo/executor/network_interface_mock_test.cpp	2018-02-11 17:29:18.943329005 +0100
@@ -143,7 +143,7 @@
         [&](const HostAndPort& remoteHost) {
             makeRequestCalled = true;
             hostCorrectForRequest = (remoteHost == testHost());
-            return boost::make_optional<RemoteCommandRequest>(expectedRequest);
+            return boost::make_optional(expectedRequest);
         },
         [&](const HostAndPort& remoteHost, RemoteCommandResponse&& response) {
             handleReplyCalled = true;
