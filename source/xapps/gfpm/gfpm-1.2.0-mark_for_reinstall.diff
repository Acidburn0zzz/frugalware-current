diff -Naur gfpm-1.2.0/src/gfpm-interface.c gfpm-1.2.0.new/src/gfpm-interface.c
--- gfpm-1.2.0/src/gfpm-interface.c	2009-03-11 22:27:38.000000000 +0530
+++ gfpm-1.2.0.new/src/gfpm-interface.c	2009-03-14 12:14:02.000000000 +0530
@@ -119,6 +119,7 @@
 static void cb_gfpm_mark_for_reinstall (GtkButton *button, gpointer data);
 static void cb_gfpm_mark_for_removal (GtkButton *button, gpointer data);
 static void cb_gfpm_mark_for_upgrade (GtkButton *button, gpointer data);
+static void cb_gfpm_reinstall (GtkButton *button, gpointer data);
 static gint gfpm_trans_prepare (PM_LIST *list);
 static gint gfpm_trans_commit (PM_LIST **list);
 
@@ -208,7 +209,6 @@
 	GtkListStore		*store = NULL;
 	GtkTreeViewColumn	*column = NULL;
 	GtkCellRenderer		*renderer = NULL;
-	GList			*columns = NULL;
 	
 	if (gfpm_config_get_value_bool("show_compressed_size"))
 	{
@@ -280,7 +280,7 @@
 	gtk_tree_view_column_set_resizable (column, FALSE);
 	gtk_tree_view_column_set_sort_column_id (column, COL_PKG_SIZE_COMPRESSED);
 	gtk_tree_view_append_column (GTK_TREE_VIEW(gfpm_pkgs_tvw), column);
-	gfpm_compressed_size_col = column;
+	gfpm_compressed_size_col = (GtkWidget*) column;
 	gfpm_pkgs_show_compressed_size (show_compressed);
 	
 	renderer = gtk_cell_renderer_text_new ();
@@ -291,7 +291,7 @@
 	gtk_tree_view_column_set_resizable (column, FALSE);
 //	gtk_tree_view_column_set_sort_column_id (column, (show_compressed)?6:5);
 	gtk_tree_view_append_column (GTK_TREE_VIEW(gfpm_pkgs_tvw), column);
-	gfpm_uncompressed_size_col = column;
+	gfpm_uncompressed_size_col = (GtkWidget*) column;
 	gfpm_pkgs_show_uncompressed_size (show_uncompressed);
 
 	gtk_tree_view_set_model (GTK_TREE_VIEW(gfpm_pkgs_tvw), GTK_TREE_MODEL(store));
@@ -1638,6 +1638,13 @@
 		menu_item = gtk_image_menu_item_new_with_label (_("Reinstall package"));
 		image = gtk_image_new_from_stock ("gtk-refresh", GTK_ICON_SIZE_MENU);
 		gtk_image_menu_item_set_image (GTK_IMAGE_MENU_ITEM(menu_item), image);
+		g_signal_connect (G_OBJECT(menu_item), "activate", G_CALLBACK(cb_gfpm_reinstall), (gpointer)pkgname);
+		gtk_menu_shell_append (GTK_MENU_SHELL(menu), menu_item);
+		gtk_widget_show (menu_item);
+		
+		menu_item = gtk_image_menu_item_new_with_label (_("Mark for re-installation"));
+		image = gtk_image_new_from_stock ("gtk-refresh", GTK_ICON_SIZE_MENU);
+		gtk_image_menu_item_set_image (GTK_IMAGE_MENU_ITEM(menu_item), image);
 		g_signal_connect (G_OBJECT(menu_item), "activate", G_CALLBACK(cb_gfpm_mark_for_reinstall), (gpointer)pkgname);
 		gtk_menu_shell_append (GTK_MENU_SHELL(menu), menu_item);
 		gtk_widget_show (menu_item);
@@ -1675,6 +1682,14 @@
 static void
 cb_gfpm_mark_for_reinstall (GtkButton *button, gpointer data)
 {
+	gfpm_package_list_add (GFPM_INSTALL_LIST, (char*)data);
+
+	return;
+}
+
+static void
+cb_gfpm_reinstall (GtkButton *button, gpointer data)
+{
 	GfpmList *temp = NULL;
 
 	temp = install_list;
