Index: netwerk/protocol/http/public/nsIHttpProtocolHandler.idl
===================================================================
RCS file: /cvsroot/mozilla/netwerk/protocol/http/public/nsIHttpProtocolHandler.idl,v
retrieving revision 1.7
diff -d -u -p -6 -r1.7 nsIHttpProtocolHandler.idl
--- netwerk/protocol/http/public/nsIHttpProtocolHandler.idl	14 Nov 2003 20:51:55 -0000	1.7
+++ netwerk/protocol/http/public/nsIHttpProtocolHandler.idl	16 Dec 2004 19:50:51 -0000
@@ -99,12 +99,22 @@ interface nsIHttpProtocolHandler : nsIPr
     attribute ACString language;
 
     /**
      * Get/Set the application comment misc portion.
      */
     attribute ACString misc;
+
+    /**
+     * The application string (e.g. "Firefox")
+     */
+    attribute ACString app;
+
+    /**
+     * The application sub string (e.g. "1.0")
+     */
+    attribute ACString appSub;
 };
 
 %{C++
 /**
  * At initialization time, the HTTP handler will initialize each service
  * registered under this category:
Index: netwerk/protocol/http/src/nsHttpHandler.cpp
===================================================================
RCS file: /cvsroot/mozilla/netwerk/protocol/http/src/nsHttpHandler.cpp,v
retrieving revision 1.94.2.1.2.3
diff -d -u -p -6 -r1.94.2.1.2.3 nsHttpHandler.cpp
--- netwerk/protocol/http/src/nsHttpHandler.cpp	15 Sep 2004 19:43:43 -0000	1.94.2.1.2.3
+++ netwerk/protocol/http/src/nsHttpHandler.cpp	16 Dec 2004 19:50:51 -0000
@@ -563,12 +567,22 @@ nsHttpHandler::BuildUserAgent()
             mUserAgent += " (";
             mUserAgent += mProductComment;
             mUserAgent += ')';
         }
     }
 
+    // App portion
+    if (!mApp.IsEmpty()) {
+        mUserAgent += ' ';
+        mUserAgent += mApp;
+        if (!mAppSub.IsEmpty()) {
+            mUserAgent += '/';
+            mUserAgent += mAppSub;
+        }
+    }
+
     // Vendor portion
     if (!mVendor.IsEmpty()) {
         mUserAgent += ' ';
         mUserAgent += mVendor;
         if (!mVendorSub.IsEmpty()) {
             mUserAgent += '/';
@@ -1448,18 +1473,50 @@ NS_IMETHODIMP
 nsHttpHandler::GetAppVersion(nsACString &value)
 {
     value = mAppVersion;
     return NS_OK;
 }
 
+
+NS_IMETHODIMP
+nsHttpHandler::GetApp(nsACString &value)
+{
+    value = mApp;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsHttpHandler::GetAppSub(nsACString &value)
+{
+    value = mAppSub;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsHttpHandler::SetApp(const nsACString &value)
+{
+    mApp = value;
+    mUserAgentIsDirty = PR_TRUE;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsHttpHandler::SetAppSub(const nsACString &value)
+{
+    mAppSub = value;
+    mUserAgentIsDirty = PR_TRUE;
+    return NS_OK;
+}
+
 NS_IMETHODIMP
 nsHttpHandler::GetVendor(nsACString &value)
 {
     value = mVendor;
     return NS_OK;
 }
+
 NS_IMETHODIMP
 nsHttpHandler::SetVendor(const nsACString &value)
 {
     mVendor = value;
     mUserAgentIsDirty = PR_TRUE;
     return NS_OK;
@@ -1468,12 +1525,13 @@ nsHttpHandler::SetVendor(const nsACStrin
 NS_IMETHODIMP
 nsHttpHandler::GetVendorSub(nsACString &value)
 {
     value = mVendorSub;
     return NS_OK;
 }
+
 NS_IMETHODIMP
 nsHttpHandler::SetVendorSub(const nsACString &value)
 {
     mVendorSub = value;
     mUserAgentIsDirty = PR_TRUE;
     return NS_OK;

