# Compiling time: 232.03 SBU
# Maintainer: Janos Kovacs <janny@frugalware.org>
# Contributor: Laszlo Dvornik <dvornik@gnome.hu>

# build released development version
USE_DEVEL=${USE_DEVEL:-"n"}
# build directly from git
USE_GIT=${USE_GIT:-"n"}

pkgname=libreoffice

if Fuse $USE_GIT; then
	upstream=3.3.0
	tree=ooo330
	milestone=7
	pkgver=$upstream${tree}_m$milestone.15035.g955ee5e
	pkgrel=1
else
	if ! Fuse $USE_DEVEL; then
		pkgver=3.3.0.4
		pkgrel=3
	else
		pkgver=3.3.1.1
		pkgrel=1
	fi
fi
pkgdesc="LibreOffice Productivity Suite, a fork of OpenOffice.org."
url="http://www.documentfoundation.org/download/"
_F_gnome_desktop="y"
Finclude gnome-scriptlet mono kde
unset install
depends=('libxml2' 'libart_lgpl' 'libsndfile' 'openjre' 'nas' 'fontconfig' 'libpng>=1.4.1' 'imagemagick' \
	 'flex' 'neon>=0.26.1' 'bison' 'zip' 'unzip' 'expat' 'cups' 'desktop-file-utils' 'perl-archive-zip' \
	 'unixodbc' 'libxaw>=1.0.5' 'libxslt' 'startup-notification>=0.9-3' 'libwpd>=0.8.13' 'poppler' 'libboost-mt' \
	 'sane-backends' 'lp_solve' 'silgraphite' 'libtextcat')
# this is here as gstreamer is only a makedepend
rodepends=('flac' 'dejavu-ttf')
makedepends=('curl>=7.20.0-2' 'intltool' 'tcsh' 'ecj' 'apache-ant' \
	     'boost' 'icu' 'hunspell' 'imake' 'gccmakedep' 'xalan-j' \
	     'patch>=2.5.9' 'openclipart' 'xorg-server' 'gstreamer>=0.10.30-2' 'gst-plugins-base' \
	     'procps' 'openldap' 'gperf' 'xulrunner' 'kdelibs-compiletime' 'libwps' \
	     'libwpg' 'mdbtools' 'mdds' 'junit' 'lucene' 'cppunit' 'hsqldb' 'bsh' 'vigra' \
	     'mythes' 'hyphen')
groups=('xapps')
archs=('i686' 'x86_64')
replaces=('openoffice.org')
if Fuse $USE_GIT; then
	unset source signatures
	_F_scm_type="git"
	_F_scm_url="git://anongit.freedesktop.org/git/libreoffice/build"
	_F_scm_tag=$pkgver
	Finclude scm
else
	mirror="http://download.documentfoundation.org/libreoffice/src/"
	_F_archive_name="libreoffice-build"
	up2date="Flasttar $mirror"
	modules=('artwork' 'base' 'bootstrap' 'calc'
		'components' 'extensions' 'extras' 'filters' 'help'
		'impress' 'l10n' 'libs-core' 'libs-extern-sys'
		'libs-extern' 'libs-gui' 'postprocess' 'sdk' 'testing'
		'ure' 'writer' 'build')
	source=()
	for i in ${modules[@]}
	do
		[ $i == build ] && ext=gz || ext=bz2
		source=(${source[@]} $mirror/libreoffice-$i-$pkgver.tar.$ext)
		signatures=(${signatures[@]} $mirror/libreoffice-$i-$pkgver.tar.$ext.asc)
	done
	source=(${source[@]} http://tools.openoffice.org/unowinreg_prebuild/680/unowinreg.dll)
	signatures=("${signatures[@]}" '')
	ext_source=(18f577b374d60b3c760a3a3350407632-STLport-4.5.tar.gz \
		fdb27bfe2dbe2e7b57ae194d9bf36bab-SampleICC-1.3.2.tar.gz \
		ada24d37d8d638b3d8a9985e80bc2978-source-9.0.0.7-bj.zip \
		1f24ab1d39f4a51faf22244c94a6203f-xmlsec1-1.2.14.tar.gz \
		798b2ffdc8bcfe7bca2cf92b62caf685-rhino1_5R5.zip \
		35c94d2df8893241173de1d16b6034c0-swingExSrc.zip \
		cf8a6967f7de535ae257fa411c98eb88-mdds_0.3.0.tar.bz2)
	for i in ${ext_source[@]}
	do
		source=(${source[@]} http://hg.services.openoffice.org/binaries/$i)
		signatures=("${signatures[@]}" '')
	done
	go_oo_source=(extras-3.1.tar.bz2 biblio.tar.bz2)
	for i in ${go_oo_source[@]}
	do
		source=(${source[@]} http://download.go-oo.org/SRC680/$i)
		signatures=("${signatures[@]}" '')
	done
fi
NOEXTRACT=1
options=(${options[@]} 'scriptlet')

subpkgs=("$pkgname-kde" "$pkgname-gnome" "$pkgname-sdk" "$pkgname-mono" "$pkgname-mozilla")
subdescs=("$pkgname kde integration" "$pkgname gnome integration" \
	"The $pkgname Software Development Kit" "$pkgname mono integration" \
	"$pkgname mozilla integration")
subdepends=("kdelibs>=$_F_kde_ver" \
	"gnome-vfs libbonobo evolution-data-server-ldap" \
	"openjdk>=6" \
	"mono" \
	"")
subrodepends=("$pkgname=$pkgver" \
	"$pkgname=$pkgver" \
	"$pkgname=$pkgver" \
	"$pkgname=$pkgver" \
	"$pkgname=$pkgver")
subarchs=('i686 x86_64' 'i686 x86_64' 'i686 x86_64' 'i686 x86_64' 'i686 x86_64')
subgroups=('kde-extra' 'gnome-extra' 'devel-extra' 'devel-extra' 'xapps')
subinstall=("" "$_F_gnome_scriptlet" "" "" "")
subreplaces=('openoffice.org-kde' 'openoffice.org-gnome' 'openoffice.org-sdk' 'openoffice.org-mono' 'openoffice.org-mozilla')

# sed ':a;N;$!ba;s/\\\n//g' solenv/inc/postset.mk|grep ^completelangiso=|sed 's/completelangiso=//;s/en-US //'
completelangiso=(af ar as ast be-BY bo bg br brx bn bs ca ca-XV cs cy
	da de dgo dz el en-GB en-ZA eo es et eu fa fi fr ga gd gl gu he hi hr hu id is
	it ja ky ka kk km kn ko kok ks ku lo lt lv mai mk mn mni ms ml mr my ne nb nl
	nn nr ns om oc or pap pa-IN pl ps pt pt-BR ro ru rw sat sa-IN si sd sq sk sl sh
	sr ss st sv sw-TZ te ti ta th tn tr ts tg ug ur uk uz ve vi xh zh-CN zh-TW zu)
# for i in ${completelangiso[@]}; do echo -n "'$(grep -1 STR_NAME_MODULE_LANGPACK_$(echo $i|tr '[a-z]' '[A-Z]'|tr '-' '_') scp2/source/ooo/module_langpack.ulf|sed -n 's/.*"\(.*\)"/\1/;$ p')' "; done
completelangdescs=('Afrikaans' 'Arabic' 'Assamese' 'Asturian'
	'Belarusian' 'Tibetan' 'Bulgarian' 'Bodo' 'Bodo' 'Bengali (India)' 'Bosnian'
	'Catalan (Valencian)' 'Catalan (Valencian)' 'Czech' 'Welsh' 'Danish' 'German'
	'Dogri' 'Dzongkha' 'Greek' 'English (United Kingdom)' 'English (South Africa)'
	'Esperanto' 'Spanish' 'Estonian' 'Basque' 'Farsi' 'Finnish' 'French' 'Irish'
	'Scottish Gaelic' 'Galician' 'Gujarati' 'Hebrew' 'Hindi' 'Croatian' 'Hungarian'
	'Indonesian' 'Icelandic' 'Italian' 'Japanese' 'Kyrgyz' 'Georgian' 'Kazakh'
	'Khmer' 'Kannada' 'Konkani' 'Konkani' 'Kashmiri' 'Kurdish' 'Lao' 'Lithuanian'
	'Latvian' 'Maithili' 'Macedonian' 'Manipuri' 'Manipuri' 'Malay (Malaysian)'
	'Malayalam' 'Marathi' 'Burmese' 'Nepali' 'Norwegian (BokmÃ¥l)' 'Dutch'
	'Norwegian (Nynorsk)' 'Ndebele South' 'Northern Sotho' 'Oromo' 'Occitan'
	'Oriya' 'Papiamento' 'Punjabi' 'Polish' 'Pashto' 'Portuguese (Brazil)'
	'Portuguese (Brazil)' 'Romanian' 'Russian' 'Kinyarwanda' 'Santali' 'Sanskrit
	(India)' 'Sinhala' 'Sindhi' 'Albanian' 'Slovak' 'Slovenian' 'Serbian (Latin)'
	'Serbian (Cyrillic)' 'Swazi' 'Southern Sotho (Sutu)' 'Swedish' 'Swahili'
	'Telugu' 'Tigrinya' 'Tamil' 'Thai' 'Tswana' 'Turkish' 'Tsonga' 'Tajik' 'Uyghur'
	'Urdu' 'Ukrainian' 'Uzbek' 'Venda' 'Vietnamese' 'Xhosa' 'Chinese (simplified)'
	'Chinese (traditional)' 'Zulu')

if [ ${#completelangiso[@]} -ne ${#completelangdescs[@]} ]; then
	error '${#completelangiso[@]} != ${#completelangdescs[@]}'
	Fdie
fi

i=0
while [ $i -lt ${#completelangiso[@]} ]
do
	subpkgs=("${subpkgs[@]}" "$pkgname-l10n-`echo ${completelangiso[$i]}|tr [A-Z] [a-z]`")
	subdescs=("${subdescs[@]}" "Installs ${completelangdescs[$i]} support in LibreOffice")
	subreplaces=("${subreplaces[@]}" "openoffice.org-i18n-`echo ${completelangiso[$i]}|tr [A-Z] [a-z]`")
	i=$(($i+1))
done

i=0
while [ $i -lt ${#completelangiso[@]} ]
do
	subinstall=("${subinstall[@]}" '')
	i=$(($i+1))
done

i=0
while [ $i -lt ${#completelangiso[@]} ]
do
        subdepends=("${subdepends[@]}" "")
        subrodepends=("${subrodepends[@]}" "$pkgname>=$pkgver")
        subgroups=("${subgroups[@]}" "locale-extra")
        subarchs=("${subarchs[@]}" "i686 x86_64")
        i=$(($i+1))
done

dictpath="/usr/lib/$pkgname/share/extensions"

build()
{
	Fmonoexport
	if Fuse $USE_GIT; then
		Funpack_scm
		NOCONFIGURE=1 ./autogen.sh || return 1
	else
		Fextract libreoffice-build-$pkgver.tar.gz
		Fcd libreoffice-build-$pkgver
		for i in $Fsrcdir/libreoffice-*
		do
			ln -sf $i src/
		done
	fi

	# SMP build
	if [ ! -z "$MAKEFLAGS" ]; then
		Fconfopts="$Fconfopts --with-max-jobs=${MAKEFLAGS/-j}"
		unset MAKEFLAGS
	fi

	# Other options.
	# FIXME --with-openclipart=/usr/share/openclipart does not fail,
	# but slows down the build at the moment and in the end it does
	# not do anything, so disable it for now.
	Fconfopts="$Fconfopts \
		--with-distro=Frugalware \
		--with-gcc-speedup=ccache \
		--with-binsuffix=no \
		--with-installed-ooo-dirname=$pkgname\
		--with-system-cairo \
		--with-system-libwpd \
		--with-system-libwps \
		--with-system-libwpg \
		--with-system-mdbtools \
		--with-system-mdds"

	# Optimize build.
	export ARCH_FLAGS="$CFLAGS"

	if Fuse $USE_GIT; then
		Fconf --with-git=http://frugalware.org/git/pub/other/sources/libreoffice
	else
		# mono-2.8 and mdds-0.5 are not yet supported
		Fconf --with-lang="en-US ${completelangiso[*]}" --disable-mono --without-system-mdds
		# avoid problems with ixion for now
		sed -i '/fields-table-formula.diff/d' patches/dev300/apply || return 1
		mkdir -p src
		for i in ${go_oo_source[@]}
		do
			ln -sf $Fsrcdir/$i src/
		done
		mkdir -p ext_source
		for i in ${ext_source[@]}
		do
			ln -sf $Fsrcdir/$i ext_source/
		done
		ln -sf $Fsrcdir/unowinreg.dll ext_source/185d60944ea767075d27247c3162b3bc-unowinreg.dll
	fi

	# make patch be less strict
	Fsed '--fuzz=0 ' '' patches/apply.pl

	# on failure make a stab at rebuilding un-parallel
	if ! make; then
		Fsed "^MAX_JOBS=.*" "MAX_JOBS='1'" bin/setup
		make || return 1
	fi

	Fmakeinstall

	# Install artwork
	cat src/openintro_fw.png > $Fdestdir/usr/lib/$pkgname/program/intro.png
	cat src/openabout_fw.png > $Fdestdir/usr/lib/$pkgname/program/about.png
	Fsed 'ProgressPosition=164,225' 'ProgressPosition=116,195' $Fdestdir/usr/lib/libreoffice/program/sofficerc

	# Use desktop files from sysui, those have correct
	# lowriter instead of non-existing oowriter, etc.
	for i in $Fdestdir/usr/share/applications/*.desktop
	do
		file=$(basename $i)
		if [ -e $Fdestdir/usr/lib/libreoffice/share/xdg/$file ]; then
			Fln /usr/lib/libreoffice/share/xdg/$file /usr/share/applications/$file
		fi
	done
	# Use libreoffice-gulls instead of non-existing libreoffice-startcenter icon
	Fsed 'libreoffice-startcenter' 'libreoffice-gulls' $Fdestdir/usr/lib/libreoffice/share/xdg/startcenter.desktop
	for i in $Fdestdir/usr/share/pixmaps/ooo-*
	do
		mv $i $(echo $i|sed 's/ooo/libreoffice/') || return 1
	done

	# Permission fixes
	find $Fdestdir/usr/lib/$pkgname/program -name "*.so" ! -perm 755 -exec chmod 755 {} \;

	# Fix invalid hardwired mktemp path in unopkg
	Fsed /bin/mktemp mktemp $Fdestdir/usr/lib/$pkgname/program/unopkg

	# Enable and split the mozilla plugin
	Fmkdir /usr/lib/mozilla/plugins
	Fln /usr/lib/$pkgname/program/libnpsoplugin.so /usr/lib/mozilla/plugins/
	Fsplit $pkgname-mozilla usr/lib/$pkgname/basis-link/program/nsplugin \
		usr/lib/mozilla/plugins/libnpsoplugin.so \
		usr/lib/$pkgname/program/libnpsoplugin.so

	# Split out the l10n stuff
	for i in "${completelangiso[@]}"
	do
		# en-GB -> en-gb
		spkg=`echo $i|tr [A-Z] [a-z]`
		# en-GB -> en_GB
		upkg=`echo $i|sed 's/-/_/g'`
		for j in $(grep -v '^%dir' build/lang_${upkg}_list.txt)
		do
			if [ -e $Fdestdir/$j ]; then
				Fsplit $pkgname-l10n-$spkg $j
			fi
		done
		rm build/lang_${upkg}_list.txt
	done

	## Split KDE stuff
	Fsplit $pkgname-kde $(grep -v '^%dir' build/kde4_list.txt)
	rm build/kde4_list.txt
	# We don't want a kde3 subpackage
	[ -e build/kde_list.txt ] && rm build/kde_list.txt

	## Split GNOME stuff
	Fsplit $pkgname-gnome $(grep -v '^%dir' build/gnome_list.txt)
	rm build/gnome_list.txt
	Fbuild_gnome_scriptlet

	# Split SDK
	Fsplit $pkgname-sdk $(grep -v '^%dir' build/sdk_list.txt)
	rm build/sdk_list.txt
	Fsplit $pkgname-sdk $(grep -v '^%dir' build/sdk_doc_list.txt)
	rm build/sdk_doc_list.txt

	# Split Mono
	Fsplit $pkgname-mono $(grep -v '^%dir' build/mono_list.txt)
	rm build/mono_list.txt

	if false; then
		# FIXME move this to the start of the build
		# Check for missing language packs.
		misslangs="`find $Fdestdir -type f |grep registry/res/.*/org|sed 's|.*registry/res/\(.*\)/org.*|\1|'|grep -v en-US|sort -u`"
		if [ -n "$misslangs" ]; then
			Fmessage "Unsplit languages: $misslangs"
			return 1
		fi
	fi

	# Check for missing subpkgs.
	# It's OK not to split these
	rm build/{common,lang_en_US,nld}_list.txt
	misspkgs="`find build -maxdepth 1 -name '*_list.txt'`"
	if [ -n "$misspkgs" ]; then
		Fmessage "Unsplit subpkgs: $misspkgs"
		return 1
	fi
	Fmonocleanup
}

# optimization OK
