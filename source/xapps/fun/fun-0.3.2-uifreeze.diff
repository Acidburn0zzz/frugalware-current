diff -Naur fun-0.3.2/src/fun-ui.c fun-0.3.2.new/src/fun-ui.c
--- fun-0.3.2/src/fun-ui.c	2009-03-12 19:33:47.000000000 +0530
+++ fun-0.3.2.new/src/fun-ui.c	2009-03-15 12:37:25.000000000 +0530
@@ -55,6 +55,9 @@
 static GtkWidget		*fun_config_news_chkbtn = NULL;
 static gboolean			connected = FALSE;
 
+/* synchronization lock */
+static GMutex			*mutex = NULL;
+
 /* credits */
 static const gchar *authors[] = { \
 					"Priyank M. Gosalia <priyankmg@gmail.com>",
@@ -92,7 +95,7 @@
 "MA  02110-1301  USA");
 
 
-static gboolean fun_timeout_func (void);
+static void fun_timeout_func (void);
 static gboolean fun_timeout_conn (void);
 
 static void fun_config_dialog_show (void);
@@ -284,6 +287,7 @@
 void
 fun_ui_cleanup (void)
 {
+	g_mutex_free (mutex);
 	if (icon == NULL)
 		return;
 	g_object_unref (icon);
@@ -397,6 +401,12 @@
 					G_CALLBACK(cb_fun_config_dlg_close_clicked),
 					(gpointer)glade_xml_get_widget(xml,"interval_spbtn"));
 	
+	/* don't destroy the dialog on delete-event */
+	g_signal_connect (G_OBJECT(fun_config_dlg),
+					  "delete_event",
+					  G_CALLBACK(gtk_widget_hide),
+					  (gpointer)fun_config_dlg);
+	
 	return;
 }
 
@@ -494,6 +504,9 @@
 					"update notifier daemon by running the following command as root: \n\n"
 					"'service fun start'");
 	
+	/* create lock */
+	mutex = g_mutex_new ();
+
 	if (fun_dbus_perform_service (TEST_SERVICE, NULL, NULL, NULL) == FALSE)
 	{
 		fun_error (_("Connection Failed"), _("Failed to connect to the fun daemon\n"));
@@ -558,15 +571,22 @@
 	return TRUE;
 }
 
+
 static gboolean
-fun_timeout_func (void)
+_fun_timeout_func (void)
 {
 	gchar *plist = NULL;
 
+	/* obtain lock */
+	g_mutex_lock (mutex);
+	
 	/* Don't do anything if we're not connected to the daemon */
 	if (!connected)
 		return TRUE;
 
+	/* get gdk lock before updating the ui */
+	gdk_threads_enter ();
+
 	/* set the status to let the user know that fun is checking for an update */
 	fun_update_status (_("Checking for new updates..."));
 	while(gtk_events_pending()) gtk_main_iteration ();
@@ -591,10 +611,25 @@
 	/* and the status back to Idle */
 	fun_update_status (_("Idle"));
 
+	/* release gdk locks */
+	gdk_flush ();
+	gdk_threads_leave ();
+
+	/* release lock and return */
+	g_mutex_unlock (mutex);
 	return TRUE;
 }
 
 static void
+fun_timeout_func (void)
+{
+	if (!g_thread_create((GThreadFunc)&_fun_timeout_func, NULL, FALSE, NULL) != 0)
+		g_warning (_("Failed to create thread for checking update"));
+
+	return;
+}
+
+static void
 fun_about_show (void)
 {
 	if (fun_about_dlg==NULL)
