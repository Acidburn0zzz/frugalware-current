# Compiling Time: 26.48 SBU
# Maintainer: crazy <crazy@frugalware.org>
# Contributor: James Buren <ryuo@frugalware.org>
# Contributor: Miklos Vajna <vmiklos@frugalware.org>

USE_SHARED=${USE_SHARED:-"y"}
USE_BRANCH=${USE_BRANCH:-"y"}

USE_LANGS=${USE_LANGS:-"y"}
USE_CXX=${USE_CXX:-"$USE_LANGS"}
USE_FORTRAN=${USE_FORTRAN:-"$USE_LANGS"}
USE_OBJC=${USE_OBJC:-"$USE_LANGS"}
USE_GO=${USE_GO:-"$USE_LANGS"}

# Activate required langage
Fuse $USE_OBJC && USE_CXX="y"

pkgname=gcc
if Fuse $USE_BRANCH; then
	## released version is 6.2.0 .. branch is minor+1
	pkgver=6.2.1
	gccver=$pkgver
else
	pkgver=6.2.0
	gccver=$pkgver
fi
pkgrel=4
pkgdesc="The GNU Compiler Collection"
url="http://gcc.gnu.org"
depends=('binutils>=2.27-3' 'glibc>=2.24-3' 'libmpc>=1.0.3-6' 'zlib>=1.2.8-7')
makedepends=('kernel-headers>=4.7')
provides=('c-compiler')
groups=('devel' 'devel-core')
archs=('i686' 'x86_64')
options+=('scriptlet' 'noccache' 'static')
if Fuse $USE_BRANCH; then
	_pkgver=20160908
	## well something
	up2date="Flasttar ftp://gcc.gnu.org/pub/gcc/snapshots/LATEST-${pkgver/%.*/}/ | sed 's/6_/${pkgver}_/g' | sed 's/_${_pkgver}//g'"
	source=(ftp://gcc.gnu.org/pub/gcc/snapshots/${pkgver/%.*}-${_pkgver}/gcc-${pkgver/%.*}-${_pkgver}.tar.bz2)
	sha1sums=('7cc96ea766f967979b529ae0d0cb60db92d8bf99')
	_F_cd_path="gcc-${pkgver/%.*}-${_pkgver}"
else

	up2date="lynx -dump http://ftp.gnu.org/pub/gnu/gcc/|grep gcc-.*/$|sed -n 's|.*gcc-\(.*\)/|\1|;$ p'"
	source=(http://ftp.gnu.org/pub/gnu/gcc/gcc-$pkgver/gcc-$pkgver.tar.bz2)
	sha1sums=('ce93852ee66b20f56ba005030fbd2b4ac2c6492b')
fi

if Fuse $USE_SHARED; then
	subpkgs=('libgcc' 'libssp' 'libgomp' 'libatomic')
	subdescs=('GCC shared support library' \
	'SSP libraries from GCC' 'GNU OpenMP runtime library' 'Atomic libraries from GCC')
	subrodepends=('glibc' 'glibc' 'glibc' 'glibc')
	subbackup=('' '' '' '')
	subgroups=('base chroot-core' 'lib' 'lib' 'lib')
	subreplaces=('' '' '' '')
	subconflicts=('' '' '' '')
fi
if Fuse $USE_CXX; then
	subpkgs=("${subpkgs[@]}" 'libstdc++' 'gcc-g++')
	subdescs=("${subdescs[@]}" 'GNU Standard C++ Library' 'C++ suport for GCC')
	subrodepends=("${subrodepends[@]}" 'libgcc' 'libstdc++ gcc')
	subbackup=("${subbackup[@]}" '' '')
	subgroups=("${subgroups[@]}" 'base chroot-core' 'devel devel-core')
	subreplaces=("${subreplaces[@]}" '' '')
	subconflicts=("${subconflicts[@]}" '' '')
fi
if Fuse $USE_OBJC; then
	subpkgs=("${subpkgs[@]}" 'libobjc' 'gcc-objc' 'gcc-objc++')
	subdescs=("${subdescs[@]}" 'Objective-C runtime' 'Objective-C support for GCC' 'Objective-C++ support for GCC')
	subrodepends=("${subrodepends[@]}" 'libgcc' 'libobjc gcc' 'gcc-objc gcc-g++')
	subbackup=("${subbackup[@]}" '' '' '')
	subgroups=("${subgroups[@]}" 'lib-extra' 'devel-extra' 'devel-extra')
	subreplaces=("${subreplaces[@]}" 'objc objc-bootstrap' '' '')
	subconflicts=("${subconflicts[@]}" '' '' '')
fi
if Fuse $USE_GO; then
	subpkgs=("${subpkgs[@]}" 'libgo' 'gcc-go')
	subdescs=("${subdescs[@]}" 'Go runtime' 'Go support for GCC')
	subrodepends=("${subrodepends[@]}" 'libgcc' 'libgo gcc')
	subbackup=("${subbackup[@]}" '' '')
	subgroups=("${subgroups[@]}" 'lib-extra' 'devel-extra')
	subreplaces=("${subreplaces[@]}" '' '')
	subconflicts=("${subconflicts[@]}" '' 'go')
fi

if Fuse $USE_FORTRAN; then
	subpkgs=("${subpkgs[@]}" 'libquadmath' 'libgfortran' 'gcc-gfortran')
	subdescs=("${subdescs[@]}" 'Quadruple Precision Math library from GCC' 'Fortran 95 runtime' 'Fortran 95 support for GCC')
	subrodepends=("${subrodepends[@]}" 'glibc' 'libgcc libquadmath' 'libgfortran gcc')
	subbackup=("${subbackup[@]}" '' '' '')
	subgroups=("${subgroups[@]}" 'lib' 'lib' 'devel-extra')
	subreplaces=("${subreplaces[@]}" '' '' '')
	subconflicts=("${subconflicts[@]}" '' '' '')
fi
i=0
while [ $i -lt ${#subpkgs[@]} ]
do
	subarchs=("${subarchs[@]}" "i686 x86_64")
	i=$(($i+1))
done


build()
{
	Fcd
	Fsed 'lib64' 'lib' gcc/config/i386/t-linux64

	# no fixincludes, thanks
	Fsed '\./fixinc\.sh' '-c true' gcc/Makefile.in

	Fpatchall

	mkdir -p ../$pkgname-build || Fdie
	cd ../$pkgname-build || Fdie

	langlist="c"
	if Fuse $USE_CXX; then
		langlist="$langlist,c++"

		Fconfopts+=" --enable-__cxa_atexit \
			--enable-libstdcxx-allocator=new \
			--enable-libstdcxx-dual-abi \
			--disable-libstdcxx-pch \
			--enable-linux-futex \
			--with-default-libstdcxx-abi=new"
	fi

	Fuse $USE_OBJC && langlist="$langlist,objc,obj-c++"

	if Fuse $USE_FORTRAN; then
		langlist="$langlist,fortran"
		Fconfopts+=" --enable-libquadmath --enable-libquadmath-support"
	else
		Fconfopts+=" --disable-libquadmath --disable-libquadmath-support"
	fi

	Fuse $USE_GO && langlist="$langlist,go"

	if [ "$CARCH" == "arm" ]; then
		Fconfopts+=" --enable-softfloat \
			--with-float=soft \
			--disable-bootstrap \
			--enable-target-optspace"
	fi

	_F_conf_configure=../$_F_cd_path/configure
	CC="$FCC gcc" CFLAGS="$CFLAGS" CXXFLAGS="$CFLAGS" XCFLAGS="$CFLAGS" \
	TCFLAGS="$CFLAGS"
	Fconf \
		--enable-languages=$langlist \
		--enable-lto \
		--enable-shared \
		--enable-threads=posix \
		--with-system-zlib \
		--libdir=/usr/lib \
		--libexecdir=/usr/lib \
		--disable-multilib \
		--disable-werror \
		--with-bugurl="http://bugs.frugalware.org/" \
		--with-pkgversion="Frugalware Linux" \
		--enable-plugin \
		--enable-checking=release

	if Fuse $USE_SHARED; then
		Fexec make STAGE_CC_WRAPPER="$FCC" BOOT_CFLAGS="$CFLAGS" || Fdie
	else
		Fexec make all-gcc || Fdie
	fi

	if Fuse $USE_SHARED; then
		Fmakeinstall
	else
		Fexec make install-gcc DESTDIR=$Fdestdir || Fdie
	fi

	if [ -d $Fdestdir/usr/lib64 ]; then
               mv -f $Fdestdir/usr/lib64/* $Fdestdir/usr/lib/ || Fdie
               rm -rf $Fdestdir/usr/lib64 || Fdie
       fi


	# fix some junk in la files
	for lafile in `find $Fdestdir -name "*.la"`
        do
                sed -i 's|-L.*/gcc-build/.*/./gcc||g' $lafile
        done

	# symlinks for backward compatibility
	Fln gcc /usr/bin/cc
	Fmkdir /lib
	Fln /usr/bin/cpp /lib/cpp

	gcchost="$CHOST"

	# libffi is internal don't expose it
	Frm usr/lib/libffi*
	Frm usr/lib/gcc/$gcchost/$gccver/include/ffi*
	Frm $Fmandir/man3/ffi\*


	if Fuse $USE_FORTRAN; then
		Fln gfortran /usr/bin/f95
		# libquadmath
		Fsplit libquadmath usr/lib/libquadmath.*
		Fsplit libquadmath usr/share/info/libquadmath.info
		# libgfortran
		#Fsplit libgfortran usr/lib/gcc/$gcchost/$gccver/libgfortranbegin.*
		Fsplit libgfortran usr/lib/libgfortran.*
		# gcc-gfortran
		Fsplit gcc-gfortran usr/bin/{gfortran,$gcchost-gfortran,f95}
		Fsplit gcc-gfortran usr/share/man/man1/gfortran.1*
		Fsplit gcc-gfortran usr/share/info/gfortran*
		Fsplit gcc-gfortran usr/lib/gcc/$gcchost/$gccver/f951
	fi
	if Fuse $USE_OBJC; then
		# libobjc
		Fsplit libobjc usr/lib/gcc/$gcchost/$gccver/include/objc/
		Fsplit libobjc usr/lib/libobjc*
		# gcc-objc
		Fsplit gcc-objc usr/lib/gcc/$gcchost/$gccver/cc1obj
		# gcc-objc++
		Fsplit gcc-objc++ usr/lib/gcc/$gcchost/$gccver/cc1objplus
	fi
	if Fuse $USE_CXX; then
		Fln g++ /usr/bin/c++
		# libstdc++
		Fsplit libstdc++ usr/include/c++/
		Fmv usr/lib/libstdc++.*-gdb.py usr/share/gcc-$gccver/python/libstdcxx
		Fsplit libstdc++ usr/lib/libstdc++.*
		## this is a experimental lib in 5.3++ .. only static
		Fsplit libstdc++ usr/lib/libstdc++fs.*
		Fsplit libstdc++ usr/share/locale/{de,fr}/LC_MESSAGES/libstdc++.mo
		#gcc-g++
		Fsplit gcc-g++ usr/share/gcc-$gccver/
		Fsplit gcc-g++ usr/bin/{,$gcchost-}{c++,g++}
		Fsplit gcc-g++ usr/lib/libsupc++.*
		Fsplit gcc-g++ usr/lib/gcc/$gcchost/$gccver/cc1plus
		Fsplit gcc-g++ usr/share/man/man1/g++.1
	fi
	if Fuse $USE_SHARED; then
		# libgcc
		Fsplit libgcc usr/lib/libgcc_*
		# libssp
		Fsplit libssp usr/lib/libssp*
		Fsplit libssp usr/lib/gcc/$gcchost/$gccver/include/ssp/
		# libgomp
		Fsplit libgomp usr/share/info/libgomp.info
		Fsplit libgomp usr/lib/gcc/$gcchost/$gccver/include/omp.h
		Fsplit libgomp usr/lib/libgomp.*
		# libatomic
		Fsplit libatomic usr/lib/libatomic.*
	fi
	if Fuse $USE_GO; then
		# libgo
		Fsplit libgo usr/lib/go/
		Fsplit libgo usr/lib/libgo*
		Fsplit libgo usr/lib/libnetgo.*
		# gcc-go
		Fsplit gcc-go usr/bin/go
		Fsplit gcc-go usr/bin/gofmt
		Fsplit gcc-go usr/bin/{,$gcchost-}gccgo
		Fsplit gcc-go usr/lib/gcc/$gcchost/$gccver/go1
		Fsplit gcc-go usr/lib/gcc/$gcchost/$gccver/cgo
		Fsplit gcc-go usr/share/man/man1/*go*.1
		Fsplit gcc-go usr/share/info/gccgo.info
	fi
	# llvm needs these.
	for i in /usr/lib/gcc/$gcchost/$gccver/{crtbegin.o,crtend.o,libgcc.a}; do
		Fln $i /usr/lib/$(basename $i)
	done
}

# optimization OK
