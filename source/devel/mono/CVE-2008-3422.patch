Index: mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlInputRadioButtonTest.cs
===================================================================
--- mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlInputRadioButtonTest.cs	(revision 109357)
+++ mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlInputRadioButtonTest.cs	(revision 109358)
@@ -236,9 +236,9 @@
 			rb.ID = "id";
 			string attrs = rb.RenderAttributes ();
 			Assert.IsTrue (attrs.IndexOf ("value=\"id\"") >= 0);
-			rb.Value = "hola";
+			rb.Value = "hola<&";
 			attrs = rb.RenderAttributes ();
-			Assert.IsTrue (attrs.IndexOf ("value=\"hola\"") >= 0);
+			Assert.IsTrue (attrs.IndexOf ("value=\"hola&lt;&amp;\"") >= 0);
 		}
 
 #if NET_2_0
Index: mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlSelectTest.cs
===================================================================
--- mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlSelectTest.cs	(revision 109357)
+++ mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlSelectTest.cs	(revision 109358)
@@ -479,5 +479,17 @@
 			HtmlDiff.AssertAreEqual (exp, s.Render (), "DataBindDoubleCall");
 		}
 		
+		[Test]
+		public void HtmlEncodeValues ()
+		{
+			TestHtmlSelect s = new TestHtmlSelect ();
+			s.DataSource = new string [] { "&", "<" };
+			s.DataBind ();
+			string exp = @"<select name>
+	<option value=""&amp;"">&amp;</option>
+	<option value=""&lt;"">&lt;</option>
+</select>";
+			HtmlDiff.AssertAreEqual (exp, s.Render (), "HtmlEncodeValues");
+		}
 	}
 }
Index: mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlImageTest.cs
===================================================================
--- mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlImageTest.cs	(revision 109357)
+++ mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlImageTest.cs	(revision 109358)
@@ -126,13 +126,13 @@
 			img.Alt = "*2*";
 			img.Border = 3;
 			img.Height = 4;
-			img.Src = "*5*";
+			img.Src = "*5<&*";
 			img.Width = 6;
 			
 			Assert.AreEqual (6, img.Attributes.Count, "Attributes.Count");
 
 			HtmlTextWriter writer = img.GetWriter ();
-			Assert.AreEqual (" src=\"*5*\" align=\"*1*\" alt=\"*2*\" border=\"3\" height=\"4\" width=\"6\" /", writer.InnerWriter.ToString ());
+			Assert.AreEqual (" src=\"*5&lt;&amp;*\" align=\"*1*\" alt=\"*2*\" border=\"3\" height=\"4\" width=\"6\" /", writer.InnerWriter.ToString ());
 		}
 	}
 }
Index: mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlInputButtonTest.cs
===================================================================
--- mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlInputButtonTest.cs	(revision 109357)
+++ mcs/class/System.Web/Test/System.Web.UI.HtmlControls/HtmlInputButtonTest.cs	(revision 109358)
@@ -164,6 +164,28 @@
 			Assert.IsTrue (found >= 0, "#02");
 		}
 
+		[Test]
+		public void OnClickAttributeWithSpecials ()
+		{
+			StringWriter sw = new StringWriter ();
+			HtmlTextWriter tw = new HtmlTextWriter (sw);
+
+			HtmlInputButtonPoker p = new HtmlInputButtonPoker ();
+			p.Page = new Page ();
+			p.Attributes["onclick"] = "alert('<&');";
+			p.DoRenderAttributes (tw);
+			string str = sw.ToString ();
+			int found = str.IndexOf ("alert('&lt;&amp;');");
+			Assert.IsTrue (found >= 0, "#01");
+			p.ServerClick += new EventHandler (EmptyHandler);
+			sw = new StringWriter ();
+			tw = new HtmlTextWriter (sw);
+			p.DoRenderAttributes (tw);
+			str = sw.ToString ();
+			found = str.IndexOf ("alert('&lt;&amp;');");
+			Assert.IsTrue (found >= 0, "#02" + str);
+		}
+
 		private static void EmptyHandler (object sender, EventArgs e)
 		{
 		}
Index: mcs/class/System.Web/Test/System.Web.UI.HtmlControls/ChangeLog
===================================================================
--- mcs/class/System.Web/Test/System.Web.UI.HtmlControls/ChangeLog	(revision 109357)
+++ mcs/class/System.Web/Test/System.Web.UI.HtmlControls/ChangeLog	(revision 109358)
@@ -1,3 +1,9 @@
+2008-07-27  Dean Brettle <dean@brettle.com>
+
+	* HtmlInputButtonTest.cs, HtmlImageTest.cs, HtmlFormTest.cs, 
+	HtmlInputRadioButtonTest.cs, HtmlSelectTest.cs:	Added tests 
+	for HTML-encoded of attributes. 
+
 2007-07-31 Vladimir Krasnov <vladimirk@mainsoft.com>
 
 	* HtmlImageTest.cs: fixed RenderAttributes, moved to webtest since src
Index: mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlForm.cs
===================================================================
--- mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlForm.cs	(revision 109357)
+++ mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlForm.cs	(revision 109358)
@@ -276,7 +276,7 @@
 				w.WriteAttribute ("name", Name);
 
 			w.WriteAttribute ("method", Method);
-			w.WriteAttribute ("action", action);
+			w.WriteAttribute ("action", action, true);
 
 			/*
 			 * This is a hack that guarantees the ID is set properly for HtmlControl to
Index: mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlInputRadioButton.cs
===================================================================
--- mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlInputRadioButton.cs	(revision 109357)
+++ mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlInputRadioButton.cs	(revision 109358)
@@ -126,7 +126,7 @@
 			if (Page != null)
 				Page.ClientScript.RegisterForEventValidation (this.UniqueID, Value);
 #endif
-			writer.WriteAttribute ("value", Value);
+			writer.WriteAttribute ("value", Value, true);
 			Attributes.Remove ("value");
 			base.RenderAttributes (writer);
 		}
Index: mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlSelect.cs
===================================================================
--- mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlSelect.cs	(revision 109357)
+++ mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlSelect.cs	(revision 109358)
@@ -693,10 +693,10 @@
 					}
 				}
 				
-				w.WriteAttribute ("value", item.Value);
+				w.WriteAttribute ("value", item.Value, true);
 				w.Write (HtmlTextWriter.TagRightChar);
 				
-				w.Write (item.Text);
+				w.Write (HttpUtility.HtmlEncode(item.Text));
 				w.WriteEndTag ("option");
 				w.WriteLine ();
 
Index: mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlControl.cs
===================================================================
--- mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlControl.cs	(revision 109357)
+++ mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlControl.cs	(revision 109358)
@@ -90,7 +90,7 @@
 					catch (Exception) {
 						throw new HttpException(attribName + " property had malformed url");
 					}
-					writer.WriteAttribute(attribName, attr);
+					writer.WriteAttribute(attribName, attr, true);
 					Attributes.Remove(attribName);
 				}
 			}
Index: mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlInputButton.cs
===================================================================
--- mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlInputButton.cs	(revision 109357)
+++ mcs/class/System.Web/System.Web.UI.HtmlControls/HtmlInputButton.cs	(revision 109358)
@@ -286,7 +286,7 @@
 				}
 
 				if (onclick.Length > 0) {
-					writer.WriteAttribute ("onclick", onclick);
+					writer.WriteAttribute ("onclick", onclick, true);
 					writer.WriteAttribute ("language", "javascript");
 				}
 			}
@@ -302,7 +302,7 @@
 				
 				if (oc != null) {
 					writer.WriteAttribute ("language", "javascript");
-					writer.WriteAttribute ("onclick", oc);
+					writer.WriteAttribute ("onclick", oc, true);
 				}
 			}
 #endif
Index: mcs/class/System.Web/System.Web.UI.HtmlControls/ChangeLog
===================================================================
--- mcs/class/System.Web/System.Web.UI.HtmlControls/ChangeLog	(revision 109357)
+++ mcs/class/System.Web/System.Web.UI.HtmlControls/ChangeLog	(revision 109358)
@@ -1,3 +1,12 @@
+2008-07-25  Dean Brettle <dean@brettle.com>
+
+	* HtmlControl.cs (PreProcessRelativeReference), 
+	HtmlForm.cs (RenderAttributes), HtmlInputButton (RenderAttributes),
+	HtmlInputRadioButton (RenderAttributes), HtmlSelect (RenderChildren):
+	Encode attributes that could contain HTML special chars.
+	
+	* HtmlSelect (RenderChildren): HTML-encode option text.
+
 2008-02-06  Marek Habersack  <mhabersack@novell.com>
 
 	* HtmlMeta.cs: render XHTML compliant tag if not in the Legacy
