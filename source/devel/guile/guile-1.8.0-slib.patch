--- guile-1.8.0/ice-9/slib.scm.slib	2006-02-12 14:29:10.000000000 +0100
+++ guile-1.8.0/ice-9/slib.scm	2006-03-16 10:29:15.000000000 +0100
@@ -22,6 +22,7 @@
 	   scheme-implementation-type scheme-implementation-version
 	   output-port-width output-port-height array-indexes
 	   make-random-state
+	   user-vicinity program-vicinity with-load-pathname
 	   -1+ <? <=? =? >? >=?
 	   require slib:error slib:exit slib:warn slib:eval
 	   defmacro:eval logical:logand logical:logior logical:logxor
@@ -254,6 +255,32 @@
 (define (scheme-implementation-home-page)
   "http://www.gnu.org/software/guile/guile.html")
 
+(define (user-vicinity) "")
+(define (pathname->vicinity pathname)
+  (let loop ((i (- (string-length pathname) 1)))
+    (cond ((negative? i) "")
+	  ((eqv? (string-ref pathname i) #\/)
+           (substring pathname 0 (+ i 1)))
+          (else (loop (- i 1))))))
+(define (program-vicinity)
+  (define clp (current-load-port))
+  (if clp
+      (pathname->vicinity (port-filename clp))
+      (slib:error 'program-vicinity " called; use slib:load to load")))
+(define with-load-pathname
+  (let ((exchange
+         (lambda (new)
+           (let ((old program-vicinity))
+             (set! program-vicinity new)
+             old))))
+    (lambda (path thunk)
+      (define old #f)
+      (define vic (pathname->vicinity path))
+      (dynamic-wind
+          (lambda () (set! old (exchange (lambda () vic))))
+          thunk
+          (lambda () (exchange old))))))
+
 ;; legacy from r3rs, but slib says all implementations provide these
 ;; ("Legacy" section of the "Miscellany" node in the manual)
 (define-public t   #t)
