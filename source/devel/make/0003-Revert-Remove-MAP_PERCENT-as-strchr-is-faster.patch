From a9fc812659a6b9dd780a38e220292f09b2f30ae7 Mon Sep 17 00:00:00 2001
From: foo <foo@foo.bar>
Date: Mon, 29 Jan 2018 13:31:15 +0100
Subject: [PATCH 3/3] Revert "Remove MAP_PERCENT as strchr is faster."

This reverts commit 98602961981b6cc38fe20d067767d1aa25e124b8.
---
 src/main.c    |  1 +
 src/makeint.h |  7 ++++---
 src/read.c    | 10 +++++-----
 3 files changed, 10 insertions(+), 8 deletions(-)

diff --git a/src/main.c b/src/main.c
index 3b28646..8bb9522 100644
--- a/src/main.c
+++ b/src/main.c
@@ -632,6 +632,7 @@ initialize_stopchar_map (void)
   stopchar_map[(int)';'] = MAP_SEMI;
   stopchar_map[(int)'='] = MAP_EQUALS;
   stopchar_map[(int)':'] = MAP_COLON;
+  stopchar_map[(int)'%'] = MAP_PERCENT;
   stopchar_map[(int)'|'] = MAP_PIPE;
   stopchar_map[(int)'.'] = MAP_DOT | MAP_USERFUNC;
   stopchar_map[(int)','] = MAP_COMMA;
diff --git a/src/makeint.h b/src/makeint.h
index 2adab63..a4dc76c 100644
--- a/src/makeint.h
+++ b/src/makeint.h
@@ -398,9 +398,10 @@ extern int unixy_shell;
 #define MAP_EQUALS      0x0020
 #define MAP_COLON       0x0040
 #define MAP_VARSEP      0x0080
-#define MAP_PIPE        0x0100
-#define MAP_DOT         0x0200
-#define MAP_COMMA       0x0400
+#define MAP_PERCENT     0x0100
+#define MAP_PIPE        0x0200
+#define MAP_DOT         0x0400
+#define MAP_COMMA       0x0800
 
 /* These are the valid characters for a user-defined function.  */
 #define MAP_USERFUNC    0x2000
diff --git a/src/read.c b/src/read.c
index ccd857b..765e0b6 100644
--- a/src/read.c
+++ b/src/read.c
@@ -2387,9 +2387,10 @@ find_percent_cached (const char **string)
 
   while (1)
     {
-      p = strchr(p, '%');
+      while (! STOP_SET (*p, MAP_PERCENT|MAP_NUL))
+        ++p;
 
-      if (!p)
+      if (*p == '\0')
         break;
 
       /* See if this % is escaped with a backslash; if not we're done.  */
@@ -2435,12 +2436,11 @@ find_percent_cached (const char **string)
   if (new)
     {
       *string = strcache_add (*string);
-      if (p)
-	p = *string + (p - new);
+      p = *string + (p - new);
     }
 
   /* If we didn't find a %, return NULL.  Otherwise return a ptr to it.  */
-  return p;
+  return (*p == '\0') ? NULL : p;
 }
 
 /* Find the next line of text in an eval buffer, combining continuation lines
-- 
2.16.1

