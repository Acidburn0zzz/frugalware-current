diff -Naur libarchive-1.02.030.orig/archive_entry.c libarchive-1.02.030/archive_entry.c
--- libarchive-1.02.030.orig/archive_entry.c	2005-08-12 18:06:52.000000000 +0200
+++ libarchive-1.02.030/archive_entry.c	2005-08-12 18:06:57.000000000 +0200
@@ -622,7 +622,13 @@
 void
 archive_entry_set_pathname(struct archive_entry *entry, const char *name)
 {
+	char filename[255];
+//	printf ("----Arrival %s\n", name);
+	snprintf(filename, sizeof(filename), "%.100s", name);
+	strdup(filename);
+//	printf ("FILENAME %s\n", filename);
 	aes_set_mbs(&entry->ae_pathname, name);
+//	printf ("----After in struct %s\n", entry->ae_pathname);
 }
 
 void
diff -Naur libarchive-1.02.030.orig/archive_read_extract.c libarchive-1.02.030/archive_read_extract.c
--- libarchive-1.02.030.orig/archive_read_extract.c	2005-08-12 18:06:52.000000000 +0200
+++ libarchive-1.02.030/archive_read_extract.c	2005-08-12 18:09:55.000000000 +0200
@@ -757,33 +757,44 @@
 	int r;
 	const char *pathname;
 	const char *linkname;
+	const char *x;
 
 	extract = a->extract;
 	pathname = archive_entry_pathname(entry);
 	linkname = archive_entry_hardlink(entry);
 
+	if (linkname[0] != '/') {
+	    asprintf(&x, "/%s", linkname);
+	} else {
+	    asprintf(&x, "%s", linkname);
+	}
+	
+//	printf("**!!!! X - %s\n", x);
+
 	/* Just remove any pre-existing file with this name. */
 	if (!(flags & ARCHIVE_EXTRACT_NO_OVERWRITE))
 		unlink(pathname);
 
-	r = link(linkname, pathname);
+	r = link(x, pathname);
 	extract->pst = NULL; /* Invalidate cached stat data. */
 
 	if (r != 0) {
 		/* Might be a non-existent parent dir; try fixing that. */
 		create_parent_dir(a, pathname, flags);
-		r = link(linkname, pathname);
+		r = link(x, pathname);
 	}
 
 	if (r != 0) {
 		/* XXX Better error message here XXX */
 		archive_set_error(a, errno,
-		    "Can't restore hardlink to '%s'", linkname);
+		    "Can't restore hardlink to '%s' - '%s'", linkname, pathname);
+		    free(x);
 		return (ARCHIVE_WARN);
 	}
 
 	/* Set ownership, time, permission information. */
 	r = restore_metadata(a, -1, entry, flags);
+	free(x);
 	return (r);
 }
 
