diff -Naur libpng-1.2.24/pngpread.c fw_libpng-1.2.24/pngpread.c
--- libpng-1.2.24/pngpread.c	2007-12-14 17:22:25.000000000 +0100
+++ fw_libpng-1.2.24/pngpread.c	2008-04-23 22:42:43.000000000 +0200
@@ -1495,9 +1495,14 @@
                  png_sizeof(png_ptr->unknown_chunk.name));
       png_ptr->unknown_chunk.name[png_sizeof(png_ptr->unknown_chunk.name)-1]='\0';
 
-      png_ptr->unknown_chunk.data = (png_bytep)png_malloc(png_ptr, length);
       png_ptr->unknown_chunk.size = (png_size_t)length;
-      png_crc_read(png_ptr, (png_bytep)png_ptr->unknown_chunk.data, length);
+      if (length == 0)
+	      png_ptr->unknown_chunk.data = NULL;
+      else
+      {
+	      png_ptr->unknown_chunk.data = (png_bytep)png_malloc(png_ptr, length);
+	      png_crc_read(png_ptr, (png_bytep)png_ptr->unknown_chunk.data, length);
+      }
 #if defined(PNG_READ_USER_CHUNKS_SUPPORTED)
       if(png_ptr->read_user_chunk_fn != NULL)
       {
@@ -1520,8 +1525,11 @@
 #else
       png_set_unknown_chunks(png_ptr, info_ptr, &png_ptr->unknown_chunk, 1);
 #endif
-      png_free(png_ptr, png_ptr->unknown_chunk.data);
-      png_ptr->unknown_chunk.data = NULL;
+      if (png_ptr->unknown_chunk.data)
+      {
+	      png_free(png_ptr, png_ptr->unknown_chunk.data);
+	      png_ptr->unknown_chunk.data = NULL;
+      }
    }
    else
 #endif
diff -Naur libpng-1.2.24/pngrutil.c fw_libpng-1.2.24/pngrutil.c
--- libpng-1.2.24/pngrutil.c	2007-12-14 17:22:27.000000000 +0100
+++ fw_libpng-1.2.24/pngrutil.c	2008-04-23 22:42:43.000000000 +0200
@@ -2227,9 +2227,14 @@
                   (png_charp)png_ptr->chunk_name, 
                   png_sizeof(png_ptr->unknown_chunk.name));
        png_ptr->unknown_chunk.name[png_sizeof(png_ptr->unknown_chunk.name)-1] = '\0';
-       png_ptr->unknown_chunk.data = (png_bytep)png_malloc(png_ptr, length);
        png_ptr->unknown_chunk.size = (png_size_t)length;
-       png_crc_read(png_ptr, (png_bytep)png_ptr->unknown_chunk.data, length);
+       if (length == 0)
+	       png_ptr->unknown_chunk.data = NULL;
+       else
+       {
+	       png_ptr->unknown_chunk.data = (png_bytep)png_malloc(png_ptr, length);
+	       png_crc_read(png_ptr, (png_bytep)png_ptr->unknown_chunk.data, length);
+       }
 #if defined(PNG_READ_USER_CHUNKS_SUPPORTED)
        if(png_ptr->read_user_chunk_fn != NULL)
        {
@@ -2252,8 +2257,11 @@
 #else
        png_set_unknown_chunks(png_ptr, info_ptr, &png_ptr->unknown_chunk, 1);
 #endif
-       png_free(png_ptr, png_ptr->unknown_chunk.data);
-       png_ptr->unknown_chunk.data = NULL;
+       if (png_ptr->unknown_chunk.data)
+       {
+	       png_free(png_ptr, png_ptr->unknown_chunk.data);
+	       png_ptr->unknown_chunk.data = NULL;
+       }
    }
    else
 #endif
diff -Naur libpng-1.2.24/pngset.c fw_libpng-1.2.24/pngset.c
--- libpng-1.2.24/pngset.c	2007-12-14 17:22:27.000000000 +0100
+++ fw_libpng-1.2.24/pngset.c	2008-04-23 22:45:04.000000000 +0200
@@ -1044,21 +1044,24 @@
                    (png_charp)from->name, 
                    png_sizeof(from->name));
         to->name[png_sizeof(to->name)-1] = '\0';
-
-        to->data = (png_bytep)png_malloc_warn(png_ptr, from->size);
-        if (to->data == NULL)
-        {
-           png_warning(png_ptr,
-              "Out of memory while processing unknown chunk.");
-        }
-        else
-        {
-           png_memcpy(to->data, from->data, from->size);
-           to->size = from->size;
-
-           /* note our location in the read or write sequence */
-           to->location = (png_byte)(png_ptr->mode & 0xff);
-        }
+	to->size = from->size;
+	/* note our location in the read or write sequence */
+	to->location = (png_byte)(png_ptr->mode & 0xff);
+
+	if (from->size == 0)
+		to->data=NULL;
+	else
+	{
+		to->data = (png_bytep)png_malloc_warn(png_ptr, from->size);
+		if (to->data == NULL)
+		{
+			png_warning(png_ptr,
+					"Out of memory while processing unknown chunk.");
+			to->size=0;
+		}
+		else
+			png_memcpy(to->data, from->data, from->size);
+	}
     }
 
     info_ptr->unknown_chunks = np;
diff -Naur libpng-1.2.24/pngwrite.c fw_libpng-1.2.24/pngwrite.c
--- libpng-1.2.24/pngwrite.c	2007-12-14 17:22:27.000000000 +0100
+++ fw_libpng-1.2.24/pngwrite.c	2008-04-23 22:42:43.000000000 +0200
@@ -111,8 +111,10 @@
             !(up->location & PNG_HAVE_IDAT) &&
             ((up->name[3] & 0x20) || keep == PNG_HANDLE_CHUNK_ALWAYS ||
             (png_ptr->flags & PNG_FLAG_KEEP_UNSAFE_CHUNKS)))
-         {
-            png_write_chunk(png_ptr, up->name, up->data, up->size);
+	 {
+		 if (up->size == 0)
+			 png_warning(png_ptr, "Writing zero-length unknown chunk");
+		 png_write_chunk(png_ptr, up->name, up->data, up->size);
          }
        }
    }
