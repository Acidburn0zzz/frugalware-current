schemas=('/etc/gconf/schemas/mail-notification.schemas')
entries=()

post_install()
{
	echo "Removing mail-notification obsolete gconf settings..."
        mail-notification --unset-obsolete-configuration > /dev/null 2>&1

	if [ ${#schemas[*]} -gt 0 ]; then
		echo -n "installing gconf schemas... "
		for schema in "${schemas[@]}" ; do
			GCONF_CONFIG_SOURCE=`/usr/bin/gconftool-2 --get-default-source` \
				/usr/bin/gconftool-2 --makefile-install-rule "$schema" > /dev/null 2>&1
		done
		if [ -e /bin/pidof ]; then
			kill -HUP `pidof /usr/libexec/gconfd-2` > /dev/null 2>&1
		fi
		echo "done."
	fi
	if [ ${#entries[*]} -gt 0 ]; then
		echo -n "loading gconf entries... "
		for entry in "${entries[@]}" ; do
			gconftool-2 --direct --config-source=`/usr/bin/gconftool-2 --get-default-source` --load $entry > /dev/null 2>&1
		done
		if [ -e /bin/pidof ]; then
			kill -HUP `pidof /usr/libexec/gconfd-2` > /dev/null 2>&1
		fi
		echo "done."
	fi
	if [ -n "y" ]; then
		echo -n "updating desktop database..."
		if update-desktop-database > /dev/null 2>&1 ; then
			echo " done."
		else
			echo " failed."
		fi
	fi
	if [ -n "" ]; then
		echo -n "updating rarian database..."
		if rarian-sk-update -q > /dev/null 2>&1 ; then
			echo " done."
		else
			echo " failed."
		fi
	fi
	if [ -n "" ]; then
		echo -n "updating mime database..."
		if update-mime-database /usr/share/mime > /dev/null 2>&1 ; then
			echo " done."
		else
			echo " failed."
		fi
	fi
	if [ -n "y" ]; then
		echo -n "updating hicolor icon cache..."
		if gtk-update-icon-cache -f -t /usr/share/icons/hicolor > /dev/null 2>&1 ; then
			echo " done."
		else
			echo " failed."
		fi
	fi
}

post_upgrade()
{
	post_install $1
}

pre_remove() {
	if [ ${#schemas[*]} -gt 0 ]; then
		echo -n "updating gconf schemas... "
		for schema in "${schemas[@]}" ; do
			GCONF_CONFIG_SOURCE=`/usr/bin/gconftool-2 --get-default-source` \
				/usr/bin/gconftool-2 --makefile-install-rule "$schema" > /dev/null 2>&1
		done
		if [ -e /bin/pidof ]; then
			kill -HUP `pidof /usr/libexec/gconfd-2` > /dev/null 2>&1
		fi
		echo "done."
	fi
	if [ ${#entries[*]} -gt 0 ]; then
		echo -n "unloading gconf entries... "
		for entry in "${entries[@]}" ; do
			gconftool-2 --direct --config-source=`/usr/bin/gconftool-2 --get-default-source` --unload $entry > /dev/null 2>&1
		done
		if [ -e /bin/pidof ]; then
			kill -HUP `pidof /usr/libexec/gconfd-2` > /dev/null 2>&1
		fi
		echo "done."
	fi
}

post_remove()
{
	if [ -n "y" ]; then
		echo -n "updating desktop database..."
		if update-desktop-database > /dev/null 2>&1 ; then
			echo " done."
		else
			echo " failed."
		fi
	fi
	if [ -n "" ]; then
		echo -n "updating rarian database..."
		if rarian-sk-update -q > /dev/null 2>&1 ; then
			echo " done."
		else
			echo " failed."
		fi
	fi
	if [ -n "" ]; then
		echo -n "updating mime database..."
		if update-mime-database /usr/share/mime > /dev/null 2>&1 ; then
			echo " done."
		else
			echo " failed."
		fi
	fi
	if [ -n "y" ]; then
		echo -n "updating hicolor icon cache..."
		if gtk-update-icon-cache -f -t /usr/share/icons/hicolor > /dev/null 2>&1 ; then
			echo " done."
		else
			echo " failed."
		fi
	fi
}

op=$1
shift

$op $*
