Index: enscript-1.6.4/src/psgen.c
===================================================================
--- enscript-1.6.4.orig/src/psgen.c	2008-10-28 12:36:22.000000000 -0700
+++ enscript-1.6.4/src/psgen.c	2008-10-28 12:37:43.000000000 -0700
@@ -978,6 +978,9 @@
 			FATAL ((stderr,
 				_("user font encoding can be only the system's default or `ps'")));
 
+		      if (strlen(token.u.font.name) >= sizeof (user_font_name))
+			FATAL ((stderr,
+				_("user font name too long: %s"), token.u.font.name));
 		      strcpy (user_font_name, token.u.font.name);
 		      user_font_pt.w = token.u.font.size.w;
 		      user_font_pt.h = token.u.font.size.h;
@@ -1444,7 +1447,7 @@
 	  buf[i] = ch;
 	  if (i + 1 >= sizeof (buf))
 	    FATAL ((stderr, _("too long argument for %s escape:\n%.*s"),
-		    escapes[i].name, i, buf));
+		    escapes[e].name, i, buf));
 	}
       buf[i] = '\0';
 
@@ -1452,6 +1455,9 @@
       switch (escapes[e].escape)
 	{
 	case ESC_FONT:
+	  if (strlen(buf) >= sizeof (token->u.font.name))
+	    FATAL ((stderr, _("too long font name for font escape:\n%s"),
+		    buf));
 	  strcpy (token->u.font.name, buf);
 
 	  /* Check for the default font. */
@@ -1465,6 +1471,9 @@
 		FATAL ((stderr, _("malformed font spec for ^@font escape: %s"),
 			token->u.font.name));
 
+	      if (strlen(cp) >= sizeof (token->u.font.name))
+	         FATAL ((stderr, _("too long font spec for font escape:\n%s"),
+		    cp));
 	      strcpy (token->u.font.name, cp);
 	      xfree (cp);
 	    }
@@ -1544,6 +1553,9 @@
 	  break;
 
 	case ESC_SETFILENAME:
+	  if (strlen(buf) >= sizeof (token->u.filename))
+	    FATAL ((stderr, _("too long file name for setfilename escape:\n%s"),
+		    buf));
 	  strcpy (token->u.filename, buf);
 	  token->type = tSETFILENAME;
 	  break;
