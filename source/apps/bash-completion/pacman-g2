# pacman-g2 bash-completion file
# Based on the Arch Linux version
# This file is in the public domain.

_arch_compgen() {
  local i r
  COMPREPLY=($(compgen -W '$*' -- "$cur"))
  for ((i=1; i < ${#COMP_WORDS[@]}-1; i++)); do
    for r in ${!COMPREPLY[@]}; do
      if [[ ${COMP_WORDS[i]} = ${COMPREPLY[r]} ]]; then
        unset 'COMPREPLY[r]'; break
      fi
    done
  done
}

_arch_ptr2comp() {
  local list= x y
  for x; do
    for y in '0 --' '1 -'; do
      eval 'set -- ${'$x'[${y% *}]}'
      list+=\ ${@/#/${y#* }}
    done
  done
  _arch_compgen $list
}

_arch_incomp() {
  local r="\s-(-${1#* }\s|\w*${1% *})"; [[ $COMP_LINE =~ $r ]]
}

_makepkg() {
  local cur opts prev
  COMPREPLY=()
  cur=$(_get_cword)
  prev=${COMP_WORDS[COMP_CWORD-1]}
  if [[ $cur = -* && ! $prev =~ ^-(-(cleancache|help)$|\w*[Ch]) ]]; then
    opts=('searchdeps builddeps noccache clean nodeps noextract force
           gensha1 wrtsha1 help install nocolor nostrip nobuild rmdeps
           chroot host syncdeps noup2date gzip noconfirm noprogressbar'
          'a A b B c C d D e f g G h i j l m n o p r R H s t u w')
    _arch_ptr2comp opts
  fi
  true
}

_pacman_g2_pkg() {
  _arch_compgen "$(
    if [[ $2 ]]; then
      if [[ $1 == Qg ]]; then
        \pacman-g2 -$1 | \cut -d' ' -f1 | \sort -u
      else
        \pacman-g2 -$1 | \cut -d' ' -f2 | \sort -u
      fi
    else
      if [[ $1 == Q ]]; then
        \pacman-g2 -$1 | \cut -d' ' -f1
      else
        \pacman-g2 -$1 | \cut -d' ' -f2
      fi
    fi
  )"
}

_pacman_g2_file() {
  compopt -o filenames; _filedir 'fpm'
}

_pacman_g2() {
  local common core cur prev query remove sync o
  COMPREPLY=()
  cur=$(_get_cword)
  prev=${COMP_WORDS[COMP_CWORD-1]}
  query=('changelog nodeps orphans groups info list foreign owns file search test'
         'c d e g i l m o p s t')
  remove=('cascade keep nosave recursive' 'c k n s')
  sync=('clean dependsonly groups info list print-uris search sysupgrade
         downloadonly refresh ignore' 'c e g i l p s u w y')
  common=('nodeps force noarch root dbpath verbose config noconfirm ask
           noprogressbar noscriptlet nointegrity regex' 'd f r b v')
  core=('add freshen help query remove sync upgrade version' 'D Q R S U V h')

  for o in 'A add' 'F freshen' 'Q query' 'R remove' 'S sync' 'U upgrade'; do
    _arch_incomp "$o" && break
  done

  if [[ $? != 0 ]]; then
    _arch_ptr2comp core
  elif ! [[ $prev =~ ^-\w*[Vbhr] ||
    $prev = --@(cachedir|dbpath|help|root|version) ]]
  then
    [[ $cur = -* ]] && _arch_ptr2comp ${o#* } common ||
      case ${o% *} in
      R)
          _pacman_g2_pkg Q;;
      Q)
        { _arch_incomp 'g groups' && _pacman_g2_pkg Qg sort; }    ||
        { _arch_incomp 'p file'   && _pacman_g2_file; }           ||
          _arch_incomp 'o owns'   || _arch_incomp 'u upgrades' ||
          _pacman_g2_pkg Q;;
      S)
        { _arch_incomp 'g groups' && _pacman_g2_pkg Sg; }      ||
        { _arch_incomp 'l list'   && _pacman_g2_pkg Sl sort; } ||
          _pacman_g2_pkg Sl;;
      A|F|U)
          _pacman_g2_file;;
      esac
  fi
  true
}

complete -F _makepkg -o default makepkg
complete -F _pacman_g2  -o default pacman
complete -F _pacman_g2  -o default pacman-g2

# ex:et ts=2 sw=2 ft=sh
