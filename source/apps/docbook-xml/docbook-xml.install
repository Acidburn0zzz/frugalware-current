subver=('4.1.2' '4.2' '4.3' '4.4' '4.5')
ROOTCATALOG=/etc/xml/catalog
CATALOG=/etc/xml/docbook
DOCBOOKDIR=/usr/share/sgml/docbook
DTDS=
LATEST_DTD=
LATEST_DATE=


#
# create the catalogs root and docbook specific
#
create_catalogs() {
#create dir if neccessary
mkdir -p /etc/xml/

if [[ ! -r ${ROOTCATALOG} ]] ; then
		echo "Creating XML Catalog root ${ROOTCATALOG}"
		/usr/bin/xmlcatalog --noout --create ${ROOTCATALOG}
		if [[ ! -r ${ROOTCATALOG} ]] ; then
			echo "Failed creating ${ROOTCATALOG}, aborting" >&2
			return 1
		fi
	else
		# clean out existing entries
		clean_catalog "file://${CATALOG}" ${ROOTCATALOG}
	fi

	if [[ ! -r ${CATALOG} ]] ; then
		echo "Creating DocBook XML Catalog ${CATALOG}"
		/usr/bin/xmlcatalog --noout --create ${CATALOG}
		if [[ ! -r ${CATALOG} ]] ; then
			echo "Failed creating ${CATALOG}, aborting" >&2
			return 1
		fi
	fi

	# dtd pointers
	xmlcatalog --noout --add "delegatePublic" "-//OASIS//ENTITIES DocBook XML" "file://${CATALOG}" ${ROOTCATALOG} &>/dev/null
	xmlcatalog --noout --add "delegatePublic" "-//OASIS//DTD DocBook XML" "file://${CATALOG}" ${ROOTCATALOG} &>/dev/null
	xmlcatalog --noout --add "delegateSystem" "http://www.oasis-open.org/docbook/" "file://${CATALOG}" ${ROOTCATALOG} &>/dev/null
	xmlcatalog --noout --add "delegateURI" "http://www.oasis-open.org/docbook/" "file://${CATALOG}" ${ROOTCATALOG} &>/dev/null

	# entities pointer
	xmlcatalog --noout --add "delegatePublic" "ISO 8879:1986" "file://${CATALOG}" ${ROOTCATALOG} &>/dev/null
	for version in "${subver[@]}"
	do
	if [ ! -e /etc/xml/catalog ]; then mkdir -p /etc/xml; xmlcatalog --noout \
		--create /etc/xml/catalog; fi &&
		if [ ! -e /etc/xml/docbook ]; then xmlcatalog --noout --create \
		/etc/xml/docbook; fi &&
		xmlcatalog --noout --add "public" \
		"-//OASIS//ELEMENTS DocBook XML Information Pool V${version}//EN" \
		"file:///usr/share/sgml/docbook/dtd/xml-dtd-${version}/dbpoolx.mod" \
		/etc/xml/docbook &&
		xmlcatalog --noout --add "public" \
		"-//OASIS//DTD DocBook XML V${version}//EN" \
		"http://oasis-open.org/docbook/xml/${version}/docbookx.dtd" \
		/etc/xml/docbook &&
		xmlcatalog --noout --add "public" \
		"-//OASIS//ENTITIES DocBook XML Character Entities V${version}//EN" \
		"file:///usr/share/xml/docbook/xml-dtd-${version}/dbcentx.mod" \
		/etc/xml/docbook &&
		xmlcatalog --noout --add "public" \
		"-//OASIS//ENTITIES DocBook XML Notations V${version}//EN" \
		"file:///usr/share/sgml/docbook/dtd/xml-dtd-${version}/dbnotnx.mod" \
		/etc/xml/docbook &&
		xmlcatalog --noout --add "public" \
		"-//OASIS//ENTITIES DocBook XML Additional General Entities V${version}//EN" \
		"file:///usr/share/sgml/docbook/dtd/xml-dtd-${version}/dbgenent.mod" \
		/etc/xml/docbook &&
		xmlcatalog --noout --add "public" \
		"-//OASIS//ELEMENTS DocBook XML Document Hierarchy V${version}//EN" \
		"file:///usr/share/sgml/docbook/dtd/xml-dtd-${version}/dbhierx.mod" \
		/etc/xml/docbook &&
		xmlcatalog --noout --add "public" \
		"-//OASIS//DTD XML Exchange Table Model 19990315//EN" \
		"file:///usr/share/sgml/docbook/dtd/xml-dtd-${version}/soextblx.dtd" \
		/etc/xml/docbook &&
		xmlcatalog --noout --add "public" \
		"-//OASIS//DTD DocBook XML CALS Table Model V${version}//EN" \
		"file:///usr/share/sgml/docbook/dtd/xml-dtd-${version}/calstblx.dtd" \
		/etc/xml/docbook &&
		xmlcatalog --noout --add "rewriteSystem" \
		"http://www.oasis-open.org/docbook/xml/${version}" \
		"file:///usr/share/sgml/docbook/dtd/xml-dtd-${version}" \
		/etc/xml/docbook &&
		xmlcatalog --noout --add "rewriteURI" \
		"http://www.oasis-open.org/docbook/xml/${version}" \
		"file:///usr/share/sgml/docbook/dtd/xml-dtd-${version}" \
		/etc/xml/docbook &&
		xmlcatalog --noout --add "delegatePublic" \
		"-//OASIS//ENTITIES DocBook XML" \
		"file:///etc/xml/docbook" /etc/xml/catalog &&
		xmlcatalog --noout --add "delegatePublic" \
		"-//OASIS//DTD DocBook XML" \
		"file:///etc/xml/docbook" /etc/xml/catalog &&
		xmlcatalog --noout --add "delegateSystem" \
		"http://www.oasis-open.org/docbook/" \
		"file:///etc/xml/docbook" /etc/xml/catalog &&
		xmlcatalog --noout --add "delegateURI" \
		"http://www.oasis-open.org/docbook/" \
		"file:///etc/xml/docbook" /etc/xml/catalog
	done
}

#
# delete the catalogs root and docbook specific
#
delete_catalogs() {
for version in "${subver[@]}"
	do
	xmlcatalog --noout --del \
	    "-//OASIS//ENTITIES DocBook XML" \
	    /etc/xml/catalog &&
	xmlcatalog --noout --del \
		"-//OASIS//DTD DocBook XML" \
	    /etc/xml/catalog &&
	xmlcatalog --noout --del \
	    "http://www.oasis-open.org/docbook/" \
	    /etc/xml/catalog &&
	xmlcatalog --noout --del \
	    "http://www.oasis-open.org/docbook/" \
	    /etc/xml/catalog &&

	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-pub.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-grk1.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-box.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-grk3.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-amsn.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-num.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-grk4.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-dia.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-grk2.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-amsa.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-amso.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-cyr1.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-tech.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-amsc.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-lat1.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-amsb.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-lat2.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-amsr.ent" /etc/xml/docbook &&
	xmlcatalog --noout --del \
	    "file:///usr/share/sgml/docbook/dtd/xml-dtd-$version/ent/iso-cyr2.ent" /etc/xml/docbook &&

	xmlcatalog --noout --del \
	    "ISO 8879:1986" /etc/xml/catalog
done
}

#
# fill in the DTDS variable based on installed versions
# 
set_dtds() {
	DTDS=$(find ${DOCBOOKDIR} -path '*/xml-dtd-*/docbookx.dtd')
	if [[ -z ${DTDS} ]]; then
		echo "No installed DocBook XML DTDs found"
		return 1
	else
		return 0
	fi
}

#
# clean_catalog
# $1 == regex to clean
# $2 == catalog
#
clean_catalog() {
	typeset list f regex=$1 catalog=$2

	list=$(egrep --only-matching "${regex}" "${catalog}" | sort -u)
	for f in ${list}; do
		xmlcatalog --noout --del "${f}" ${catalog}
	done
}

# 
# populate a specific dtd version into the docbook catalog
# $1 == /path/to/docbookx.dtd
#
populate_dtd() {
	typeset dtd=$1 docbookdir=${1%/*} dtd_date
	typeset v=${docbookdir##*-}

	# sanity check
	if [[ ${dtd} != */xml-dtd-*/* ]]; then
		echo "Warning: I don't understand \"${dtd}\"" >&2
		return
	fi

	# Populate the docbook catalog with this version
	xmlcatalog --noout --add "public" "-//OASIS//ELEMENTS DocBook XML Information Pool V${v}//EN" "file://${docbookdir}/dbpoolx.mod" ${CATALOG} &>/dev/null
	xmlcatalog --noout --add "public" "-//OASIS//DTD DocBook XML V${v}//EN" "file://${docbookdir}/docbookx.dtd" ${CATALOG} &>/dev/null
	xmlcatalog --noout --add "public" "-//OASIS//ENTITIES DocBook XML Character Entities V${v}//EN" "file://${docbookdir}/dbcentx.mod" ${CATALOG} &>/dev/null
	xmlcatalog --noout --add "public" "-//OASIS//ENTITIES DocBook XML Notations V${v}//EN" "file://${docbookdir}/dbnotnx.mod" ${CATALOG} &>/dev/null 
	xmlcatalog --noout --add "public" "-//OASIS//ENTITIES DocBook XML Additional General Entities V${v}//EN" "file://${docbookdir}/dbgenent.mod" ${CATALOG} &>/dev/null
	xmlcatalog --noout --add "public" "-//OASIS//ELEMENTS DocBook XML Document Hierarchy V${v}//EN" "file://${docbookdir}/dbhierx.mod" ${CATALOG} &>/dev/null
	xmlcatalog --noout --add "public" "-//OASIS//DTD XML Exchange Table Model 19990315//EN" "file://${docbookdir}/soextblx.dtd" ${CATALOG} &>/dev/null
	xmlcatalog --noout --add "public" "-//OASIS//DTD DocBook XML CALS Table Model V${v}//EN" "file://${docbookdir}/calstblx.dtd" ${CATALOG} &>/dev/null
	xmlcatalog --noout --add "rewriteSystem" "http://www.oasis-open.org/docbook/xml/${v}" "file://${docbookdir}" ${CATALOG} &>/dev/null
	xmlcatalog --noout --add "rewriteURI" "http://www.oasis-open.org/docbook/xml/${v}" "file://${docbookdir}" ${CATALOG} &>/dev/null

	# grab the RCS date from docbookx.dtd for comparison purposes
	if [[ ! -f ${docbookdir}/ent/iso-lat1.ent ]]; then
		return 0
	fi
	dtd_date=$(egrep --only-matching --max-count=1 \
		'[0-9]{4}/[0-9]{2}/[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}' "${dtd}")
	if [[ -z ${dtd_date} ]]; then
		return 0
	fi
	dtd_date=$(date -d "$dtd_date" +%s)
	if [[ -z $LATEST_DTD || $dtd_date -gt $LATEST_DATE ]]; then
		LATEST_DATE=${dtd_date}
		LATEST_DTD=${dtd}
	fi
}

#
# populate ISO DocBook entities from the most recent DTD
#
populate_entities() {
	typeset isodir=${LATEST_DTD%/*}/ent i j
	typeset -a entities avail

	# sanity check
	if [[ -z ${LATEST_DTD} || ! -d ${isodir} ]]; then
		echo "No ISO DocBook entities available for catalog"
		return 0
	fi

	# here are the entities we know about;
	# note these must remain sorted!
	entities=(
		"iso-amsa.ent" "ISO 8879:1986//ENTITIES Added Math Symbols: Arrow Relations//EN"
		"iso-amsb.ent" "ISO 8879:1986//ENTITIES Added Math Symbols: Binary Operators//EN"
		"iso-amsc.ent" "ISO 8879:1986//ENTITIES Added Math Symbols: Delimiters//EN"
		"iso-amsn.ent" "ISO 8879:1986//ENTITIES Added Math Symbols: Negated Relations//EN"
		"iso-amso.ent" "ISO 8879:1986//ENTITIES Added Math Symbols: Ordinary//EN"
		"iso-amsr.ent" "ISO 8879:1986//ENTITIES Added Math Symbols: Relations//EN"
		"iso-box.ent" "ISO 8879:1986//ENTITIES Box and Line Drawing//EN"
		"iso-cyr1.ent" "ISO 8879:1986//ENTITIES Russian Cyrillic//EN"
		"iso-cyr2.ent" "ISO 8879:1986//ENTITIES Non-Russian Cyrillic//EN"
		"iso-dia.ent" "ISO 8879:1986//ENTITIES Diacritical Marks//EN"
		"iso-grk1.ent" "ISO 8879:1986//ENTITIES Greek Letters//EN"
		"iso-grk2.ent" "ISO 8879:1986//ENTITIES Monotoniko Greek//EN"
		"iso-grk3.ent" "ISO 8879:1986//ENTITIES Greek Symbols//EN"
		"iso-grk4.ent" "ISO 8879:1986//ENTITIES Alternative Greek Symbols//EN"
		"iso-lat1.ent" "ISO 8879:1986//ENTITIES Added Latin 1//EN"
		"iso-lat2.ent" "ISO 8879:1986//ENTITIES Added Latin 2//EN"
		"iso-num.ent" "ISO 8879:1986//ENTITIES Numeric and Special Graphic//EN"
		"iso-pub.ent" "ISO 8879:1986//ENTITIES Publishing//EN"
		"iso-tech.ent" "ISO 8879:1986//ENTITIES General Technical//EN"
	)

	# here are the entities available; assume no spaces in filenames...
	avail=($(ls ${isodir} | sort))

	# double-check the lists
	i=0 ; j=0
	while [[ ${i} -lt ${#entities[@]} || ${j} -lt ${#avail[@]} ]]; do
		if [[ ${i} -ge ${#entities[@]} ]]; then
			let j=j+1
		elif [[ ${j} -ge ${#avail[@]} ]]; then
			let i=i+2
		elif [[ ${avail[j]} < ${entities[i]} ]]; then
			let j=j+1
		elif [[ ${entities[i]} < ${avail[j]} ]]; then
			let i=i+2
		elif [[ ${entities[i]} == ${avail[j]} ]]; then
			xmlcatalog --noout --add "public" "${entities[i+1]}" \
				"file://${isodir}/${entities[i]}" ${CATALOG}
			let j=j+1
			let i=i+2
		else
			return 1
		fi
	done
}


#
# update catalog
#
update_catalog() {

	# Clean out old dtds from catalog
	clean_catalog "${DOCBOOKDIR}/xml-dtd-[^/\"']*/[^/\"']*" ${CATALOG}
	clean_catalog "${DOCBOOKDIR}/xml-dtd-[^/\"']*/[^/\"']*" ${ROOTCATALOG}
	if set_dtds; then
		for d in ${DTDS}; do
			populate_dtd ${d}
		done
		populate_entities
	fi
}

#
# Install catalog
#
catalog_postinst() {

for version in "${subver[@]}"
do
	install-catalog --add /etc/sgml/xml-docbook-$version.cat \
		/usr/share/sgml/docbook/dtd/xml-dtd-$version/docbook.cat &>/dev/null
	install-catalog --add /etc/sgml/sgml-docbook.cat \
		/etc/sgml/xml-docbook-$version.cat &>/dev/null
done

	
}
#
# Uninstall catalog
#
catalog_postrm() {
	
    	for version in "${subver[@]}"
	do
		install-catalog --remove /etc/sgml/xml-docbook-$version.cat \
			/usr/share/sgml/docbook/dtd/xml-dtd-$version/docbook.cat &>/dev/null
		install-catalog --remove /etc/sgml/sgml-docbook.cat \
			/etc/sgml/xml-docbook-$version.cat &>/dev/null
	done
}


post_install() {
	echo "updating docbook catalogue... "
	create_catalogs
	update_catalog
	catalog_postinst
}

post_upgrade() {
	post_install $1

}

pre_remove() {
	echo "updating docbook catalogue... "
	catalog_postrm
}


op=$1
shift

$op $*
