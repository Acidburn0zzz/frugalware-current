diff -Naur ripoff-0.8.1.orig/plugins/flac/FlacPlugin.c ripoff-0.8.1/plugins/flac/FlacPlugin.c
--- ripoff-0.8.1.orig/plugins/flac/FlacPlugin.c	2006-06-27 23:29:33.000000000 +0200
+++ ripoff-0.8.1/plugins/flac/FlacPlugin.c	2007-01-29 00:55:54.000000000 +0100
@@ -16,7 +16,7 @@
  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
  */
 
-#include <FLAC/seekable_stream_encoder.h>
+#include <FLAC/stream_encoder.h>
 #include <FLAC/metadata.h>
 #include "lib/RipOffPluginRawInterface.h"
 #define UI_NAME "FLAC Encoder Plugin v1.0"
@@ -34,24 +34,24 @@
 {
 	gchar *name;
 	gchar *label;
-	FLAC__SeekableStreamEncoder *encoder;
+	FLAC__StreamEncoder *encoder;
 	FLAC__StreamMetadata *metadata[1];
 	guint8 compression_level;
 };
 typedef struct FlacPlugin_ * FlacPlugin;
 
-FLAC__StreamEncoderWriteStatus write_callback(	const FLAC__SeekableStreamEncoder *encoder, 
+FLAC__StreamEncoderWriteStatus write_callback(	const FLAC__StreamEncoder *encoder, 
 						const FLAC__byte buffer[], 
 						unsigned bytes, 
 						unsigned samples, 
 						unsigned current_frame, 
 						void *client_data);
 
-FLAC__SeekableStreamEncoderSeekStatus seek_callback(	const FLAC__SeekableStreamEncoder *encoder, 
+FLAC__StreamEncoderSeekStatus seek_callback(	const FLAC__StreamEncoder *encoder, 
 							FLAC__uint64 absolute_byte_offset, 
 							void *client_data);
 
-FLAC__SeekableStreamEncoderTellStatus tell_callback(	const FLAC__SeekableStreamEncoder *encoder, 
+FLAC__StreamEncoderTellStatus tell_callback(	const FLAC__StreamEncoder *encoder, 
 							FLAC__uint64 *absolute_byte_offset, 
 							void *client_data);
 
@@ -206,16 +206,16 @@
 {	
 	FlacPlugin plugin = (FlacPlugin) raw;
 
-	plugin->encoder = FLAC__seekable_stream_encoder_new();
+	plugin->encoder = FLAC__stream_encoder_new();
 	setup_metadata(plugin, track);
 	setup_compression_level(plugin);
 
-	FLAC__seekable_stream_encoder_set_write_callback(plugin->encoder, write_callback);
-	FLAC__seekable_stream_encoder_set_seek_callback(plugin->encoder, seek_callback);
-	FLAC__seekable_stream_encoder_set_tell_callback(plugin->encoder, tell_callback);
-	FLAC__seekable_stream_encoder_set_client_data(plugin->encoder, output_descriptor);
-	FLAC__seekable_stream_encoder_set_total_samples_estimate(plugin->encoder, total_bytes_to_encode / 4);
-	FLAC__seekable_stream_encoder_init(plugin->encoder);
+	FLAC__stream_encoder_set_write_callback(plugin->encoder, write_callback);
+	FLAC__stream_encoder_set_seek_callback(plugin->encoder, seek_callback);
+	FLAC__stream_encoder_set_tell_callback(plugin->encoder, tell_callback);
+	FLAC__stream_encoder_set_client_data(plugin->encoder, output_descriptor);
+	FLAC__stream_encoder_set_total_samples_estimate(plugin->encoder, total_bytes_to_encode / 4);
+	FLAC__stream_encoder_init(plugin->encoder);
 
 	return TRUE;
 }
@@ -270,7 +270,7 @@
 
 }
 
-FLAC__StreamEncoderWriteStatus write_callback(	const FLAC__SeekableStreamEncoder *encoder, 
+FLAC__StreamEncoderWriteStatus write_callback(	const FLAC__StreamEncoder *encoder, 
 						const FLAC__byte buffer[], 
 						unsigned bytes, 
 						unsigned samples, 
@@ -283,7 +283,7 @@
 	return FLAC__STREAM_ENCODER_WRITE_STATUS_OK;
 }
 
-FLAC__SeekableStreamEncoderSeekStatus seek_callback(	const FLAC__SeekableStreamEncoder *encoder, 
+FLAC__StreamEncoderSeekStatus seek_callback(	const FLAC__StreamEncoder *encoder, 
 							FLAC__uint64 absolute_byte_offset, 
 							void *client_data)
 {
@@ -293,13 +293,13 @@
 	return TRUE;
 }
 
-FLAC__SeekableStreamEncoderTellStatus tell_callback(	const FLAC__SeekableStreamEncoder *encoder, 
+FLAC__StreamEncoderTellStatus tell_callback(	const FLAC__StreamEncoder *encoder, 
 							FLAC__uint64 *absolute_byte_offset, 
 							void *client_data)
 {
 	FILE *output_descriptor = client_data;
 	*absolute_byte_offset = ftell(output_descriptor);
-	return FLAC__SEEKABLE_STREAM_ENCODER_TELL_STATUS_OK;
+	return FLAC__STREAM_ENCODER_TELL_STATUS_OK;
 }
 
 void value_changed(GtkAdjustment *adjustment, gpointer data)
