diff -Naur pinot-0.72/Index/XapianDatabase.cpp pinot-0.72-p/Index/XapianDatabase.cpp
--- pinot-0.72/Index/XapianDatabase.cpp	2007-03-17 03:14:17.000000000 +0100
+++ pinot-0.72-p/Index/XapianDatabase.cpp	2007-05-18 13:15:40.000000000 +0200
@@ -38,9 +38,12 @@
 // This puts a limit to terms length.
 const unsigned int XapianDatabase::m_maxTermLength = 230;
 
-XapianDatabase::XapianDatabase(const string &databaseName, bool readOnly) :
+XapianDatabase::XapianDatabase(const string &databaseName,
+	bool readOnly, bool overwrite) :
 	m_databaseName(databaseName),
 	m_readOnly(readOnly),
+	m_overwrite(overwrite),
+	m_obsoleteFormat(false),
 	m_pDatabase(NULL),
 	m_isOpen(false),
 	m_merge(false),
@@ -55,6 +58,8 @@
 	XapianDatabase *pFirst, XapianDatabase *pSecond) :
 	m_databaseName(databaseName),
 	m_readOnly(true),
+	m_overwrite(false),
+	m_obsoleteFormat(false),
 	m_pDatabase(NULL),
 	m_isOpen(pFirst->m_isOpen),
 	m_merge(true),
@@ -67,6 +72,8 @@
 XapianDatabase::XapianDatabase(const XapianDatabase &other) :
 	m_databaseName(other.m_databaseName),
 	m_readOnly(other.m_readOnly),
+	m_overwrite(other.m_overwrite),
+	m_obsoleteFormat(other.m_obsoleteFormat),
 	m_pDatabase(NULL),
 	m_isOpen(other.m_isOpen),
 	m_merge(other.m_merge),
@@ -95,6 +102,8 @@
 	{
 		m_databaseName = other.m_databaseName;
 		m_readOnly = other.m_readOnly;
+		m_overwrite = other.m_overwrite;
+		m_obsoleteFormat = other.m_obsoleteFormat;
 		if (m_pDatabase != NULL)
 		{
 			delete m_pDatabase;
@@ -199,8 +208,8 @@
 			}
 			catch (const Xapian::Error &error)
 			{
-				cerr << "XapianDatabase::openDatabase: couldn't open remote database: "
-					<< error.get_msg() << endl;
+				cerr << "XapianDatabase::openDatabase: " << error.get_type()
+					<< ": " << error.get_msg() << endl;
 			}
 		}
 #ifdef DEBUG
@@ -252,7 +261,15 @@
 		}
 		else
 		{
-			m_pDatabase = new Xapian::WritableDatabase(m_databaseName, Xapian::DB_CREATE_OR_OPEN);
+			int openAction = Xapian::DB_CREATE_OR_OPEN;
+
+			if (m_overwrite == true)
+			{
+				// An existing database will be overwritten
+				openAction = Xapian::DB_CREATE_OR_OVERWRITE;
+			}
+
+			m_pDatabase = new Xapian::WritableDatabase(m_databaseName, openAction);
 		}
 #ifdef DEBUG
 		cout << "XapianDatabase::openDatabase: opened " << m_databaseName << endl;
@@ -261,10 +278,26 @@
 
 		return;
 	}
+#if XAPIAN_MAJOR_VERSION>0
+	catch (const Xapian::DatabaseVersionError &error)
+	{
+		// The format of the index is not understood
+		if (m_obsoleteFormat == false)
+		{
+			cerr << "XapianDatabase::openDatabase: " << error.get_type()
+				<< ": " << error.get_msg() << "; trying again" << endl;
+
+			// Try once more
+			m_overwrite = true;
+			m_obsoleteFormat = true;
+			openDatabase();
+		}
+	}
+#endif
 	catch (const Xapian::Error &error)
 	{
-		cerr << "XapianDatabase::openDatabase: couldn't open database: "
-			<< error.get_msg() << endl;
+		cerr << "XapianDatabase::openDatabase: " << error.get_type()
+			<< ": " << error.get_msg() << endl;
 	}
 }
 
@@ -274,6 +307,12 @@
 	return m_isOpen;
 }
 
+/// Returns false if the database was of an obsolete format.
+bool XapianDatabase::wasObsoleteFormat(void) const
+{
+	return m_obsoleteFormat;
+}
+
 /// Reopens the database.
 void XapianDatabase::reopen(void)
 {
diff -Naur pinot-0.72/Index/XapianDatabaseFactory.cpp pinot-0.72-p/Index/XapianDatabaseFactory.cpp
--- pinot-0.72/Index/XapianDatabaseFactory.cpp	2006-10-26 15:36:03.000000000 +0200
+++ pinot-0.72-p/Index/XapianDatabaseFactory.cpp	2007-05-18 13:15:40.000000000 +0200
@@ -65,7 +65,8 @@
 }
 
 /// Returns a XapianDatabase pointer; NULL if unavailable.
-XapianDatabase *XapianDatabaseFactory::getDatabase(const string &location, bool readOnly)
+XapianDatabase *XapianDatabaseFactory::getDatabase(const string &location,
+	bool readOnly, bool overwrite)
 {
 	XapianDatabase *pDb = NULL;
 
@@ -88,7 +89,7 @@
 	else
 	{
 		// Create a new instance
-		pDb = new XapianDatabase(location, readOnly);
+		pDb = new XapianDatabase(location, readOnly, overwrite);
 		// Insert it into the map
 		pair<map<string, XapianDatabase *>::iterator, bool> insertPair = m_databases.insert(pair<string, XapianDatabase *>(location, pDb));
 		// Was it inserted ?
diff -Naur pinot-0.72/Index/XapianDatabaseFactory.h pinot-0.72-p/Index/XapianDatabaseFactory.h
--- pinot-0.72/Index/XapianDatabaseFactory.h	2006-12-10 15:24:15.000000000 +0100
+++ pinot-0.72-p/Index/XapianDatabaseFactory.h	2007-05-18 13:15:40.000000000 +0200
@@ -36,7 +36,8 @@
 			XapianDatabase *pFirst, XapianDatabase *pSecond);
 
 		/// Returns a XapianDatabase pointer; NULL if unavailable.
-		static XapianDatabase *getDatabase(const std::string &location, bool readOnly = true);
+		static XapianDatabase *getDatabase(const std::string &location,
+			bool readOnly = true, bool overwrite = false);
 
 		/// Closes all databases.
 		static void closeAll(void);
diff -Naur pinot-0.72/Index/XapianDatabase.h pinot-0.72-p/Index/XapianDatabase.h
--- pinot-0.72/Index/XapianDatabase.h	2007-02-20 05:00:53.000000000 +0100
+++ pinot-0.72-p/Index/XapianDatabase.h	2007-05-18 13:15:40.000000000 +0200
@@ -30,7 +30,8 @@
 class XapianDatabase
 {
 	public:
-		XapianDatabase(const std::string &databaseName, bool readOnly = true);
+		XapianDatabase(const std::string &databaseName,
+			bool readOnly = true, bool overwrite = false);
 		XapianDatabase(const std::string &databaseName,
 			XapianDatabase *pFirst, XapianDatabase *pSecond);
 		XapianDatabase(const XapianDatabase &other);
@@ -41,6 +42,9 @@
 		/// Returns false if the database couldn't be opened.
 		bool isOpen(void) const;
 
+		/// Returns false if the database was of an obsolete format.
+		bool wasObsoleteFormat(void) const;
+
 		/// Reopens the database.
 		void reopen(void);
 
@@ -69,6 +73,8 @@
 		static const unsigned int m_maxTermLength;
 		std::string m_databaseName;
 		bool m_readOnly;
+		bool m_overwrite;
+		bool m_obsoleteFormat;
 		pthread_mutex_t m_rwLock;
 		Xapian::Database *m_pDatabase;
 		bool m_isOpen;
diff -Naur pinot-0.72/Index/XapianIndex.cpp pinot-0.72-p/Index/XapianIndex.cpp
--- pinot-0.72/Index/XapianIndex.cpp	2007-04-05 18:36:50.000000000 +0200
+++ pinot-0.72-p/Index/XapianIndex.cpp	2007-05-18 13:15:40.000000000 +0200
@@ -68,7 +68,7 @@
 		{
 			// This posting may have been removed already
 #ifdef DEBUG
-			cout << "XapianIndex::removeFirstPosting: " << error.get_errno() << " " << error.get_msg() << endl;
+			cout << "XapianIndex::removeFirstPosting: " << error.get_msg() << endl;
 #endif
 		}
 	}
@@ -153,7 +153,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't get document list: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't get document list: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -206,13 +206,21 @@
 		}
 		else if (mode == STORE_STEM)
 		{
-			string stemmedTerm = pStemmer->stem_word(term);
+#if XAPIAN_MAJOR_VERSION==0
+			string stemmedTerm(pStemmer->stem_word(term));
+#else
+			string stemmedTerm((*pStemmer)(term));
+#endif
 
 			doc.add_posting(prefix + XapianDatabase::limitTermLength(stemmedTerm), termPos);
 		}
 		else if (mode == STORE_BOTH)
 		{
-			string stemmedTerm = pStemmer->stem_word(term);
+#if XAPIAN_MAJOR_VERSION==0
+			string stemmedTerm(pStemmer->stem_word(term));
+#else
+			string stemmedTerm((*pStemmer)(term));
+#endif
 
 			// Add both at the same position
 			doc.add_posting(prefix + XapianDatabase::limitTermLength(term), termPos);
@@ -278,11 +286,21 @@
 		}
 		else if (mode == STORE_STEM)
 		{
-			removeFirstPosting(doc, termListIter, prefix + XapianDatabase::limitTermLength(pStemmer->stem_word(term)));
+#if XAPIAN_MAJOR_VERSION==0
+			string stemmedTerm(pStemmer->stem_word(term));
+#else
+			string stemmedTerm((*pStemmer)(term));
+#endif
+
+			removeFirstPosting(doc, termListIter, prefix + XapianDatabase::limitTermLength(stemmedTerm));
 		}
 		else if (mode == STORE_BOTH)
 		{
-			string stemmedTerm = pStemmer->stem_word(term);
+#if XAPIAN_MAJOR_VERSION==0
+			string stemmedTerm(pStemmer->stem_word(term));
+#else
+			string stemmedTerm((*pStemmer)(term));
+#endif
 
 			removeFirstPosting(doc, termListIter, prefix + XapianDatabase::limitTermLength(term));
 			if (stemmedTerm != term)
@@ -513,7 +531,7 @@
 		catch (const Xapian::Error &error)
 		{
 #ifdef DEBUG
-			cout << "XapianIndex::removeCommonTerms: " << error.get_errno() << " " << error.get_msg() << endl;
+			cout << "XapianIndex::removeCommonTerms: " << error.get_msg() << endl;
 #endif
 		}
 	}
@@ -543,7 +561,7 @@
 		}
 		catch (const Xapian::Error &error)
 		{
-			cerr << "XapianIndex::scanDocument: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+			cerr << "XapianIndex::scanDocument: " << error.get_type() << ": " << error.get_msg() << endl;
 			continue;
 		}
 
@@ -606,7 +624,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't unindex documents: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't unindex documents: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -728,7 +746,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't get document properties: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't get document properties: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -766,7 +784,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't get document terms count: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't get document terms count: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -814,7 +832,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't check document labels: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't check document labels: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -866,7 +884,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't get document's labels: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't get document's labels: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -912,7 +930,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't look for document: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't look for document: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -993,7 +1011,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't get terms: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't get terms: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -1026,7 +1044,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't get last document ID: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't get last document ID: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -1071,7 +1089,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't count documents: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't count documents: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -1174,7 +1192,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't index document: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't index document: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -1255,7 +1273,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't update document: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't update document: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -1303,7 +1321,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't update document properties: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't update document properties: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -1384,7 +1402,7 @@
 		}
 		catch (const Xapian::Error &error)
 		{
-			cerr << "Couldn't update document's labels: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+			cerr << "Couldn't update document's labels: " << error.get_type() << ": " << error.get_msg() << endl;
 		}
 		catch (...)
 		{
@@ -1426,7 +1444,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't unindex document: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't unindex document: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -1510,7 +1528,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't delete label: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't delete label: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -1559,7 +1577,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't delete label: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't delete label: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
@@ -1593,7 +1611,7 @@
 	}
 	catch (const Xapian::Error &error)
 	{
-		cerr << "Couldn't flush database: " << error.get_type() << ": " << error.get_errno() << " " << error.get_msg() << endl;
+		cerr << "Couldn't flush database: " << error.get_type() << ": " << error.get_msg() << endl;
 	}
 	catch (...)
 	{
diff -Naur pinot-0.72/UI/GTK2/src/pinot.cc pinot-0.72-p/UI/GTK2/src/pinot.cc
--- pinot-0.72/UI/GTK2/src/pinot.cc	2007-03-23 17:40:50.000000000 +0100
+++ pinot-0.72-p/UI/GTK2/src/pinot.cc	2007-05-18 13:15:40.000000000 +0200
@@ -298,17 +298,22 @@
 
 	// What version of the UI is this ?
 	double uiVersion = atof(VERSION);
-	// What version is the index at ?
-	XapianIndex docsIndex(settings.m_docsIndexLocation);
-	double indexVersion = docsIndex.getVersion();
-	// Is an upgrade necessary ?
-	if (indexVersion <= 0.70)
+	if (uiVersion > 0)
 	{
-		// Yes, it is
-		// FIXME: use a popup ! 
-		errorMsg = _("Updating all documents in My Web Pages is recommended");
+		// What version is the index at ?
+		XapianIndex docsIndex(settings.m_docsIndexLocation);
+		double indexVersion = docsIndex.getVersion();
+
+		// Is an upgrade necessary ?
+		if ((indexVersion <= 0.70) &&
+			(docsIndex.getDocumentsCount() > 0))
+		{
+			// Yes, it is
+			// FIXME: use a popup ! 
+			errorMsg = _("Updating all documents in My Web Pages is recommended");
+		}
+		docsIndex.setVersion(uiVersion);
 	}
-	docsIndex.setVersion(uiVersion);
 
 	try
 	{
diff -Naur pinot-0.72/UI/GTK2/src/prefsDialog.cc pinot-0.72-p/UI/GTK2/src/prefsDialog.cc
--- pinot-0.72/UI/GTK2/src/prefsDialog.cc	2007-04-19 05:25:02.000000000 +0200
+++ pinot-0.72-p/UI/GTK2/src/prefsDialog.cc	2007-05-18 13:15:40.000000000 +0200
@@ -119,9 +119,9 @@
 	// Show The Indexing tab on first run
 	if ((m_settings.isFirstRun() == true) &&
 		(prefsNotebook != NULL) &&
-		(prefsNotebook->get_n_pages() > 2))
+		(prefsNotebook->get_n_pages() > 3))
 	{
-		prefsNotebook->set_current_page(2);
+		prefsNotebook->set_current_page(3);
 	}
 }
 
diff -Naur pinot-0.72/UI/GTK2/src/ResultsTree.cpp pinot-0.72-p/UI/GTK2/src/ResultsTree.cpp
--- pinot-0.72/UI/GTK2/src/ResultsTree.cpp	2007-04-26 11:28:34.000000000 +0200
+++ pinot-0.72-p/UI/GTK2/src/ResultsTree.cpp	2007-05-18 13:15:40.000000000 +0200
@@ -848,6 +848,7 @@
 	list<TreeModel::Path>::iterator itemPath = selectedItems.begin();
 	TreeModel::iterator iter = m_refStore->get_iter(*itemPath);
 	TreeModel::Row row = *iter;
+
 	return row[m_resultsColumns.m_url];
 }
 
@@ -869,7 +870,8 @@
 		TreeModel::iterator iter = m_refStore->get_iter(*itemPath);
 		TreeModel::Row row = *iter;
 
-		if (row[m_resultsColumns.m_resultType] != ResultsModelColumns::ROW_RESULT)
+		ResultsModelColumns::RowType type = row[m_resultsColumns.m_resultType];
+		if (type != ResultsModelColumns::ROW_RESULT)
 		{
 			continue;
 		}
@@ -929,8 +931,9 @@
 	{
 		TreeModel::iterator iter = m_refStore->get_iter(*itemPath);
 		TreeModel::Row row = *iter;
-
-		if (row[m_resultsColumns.m_resultType] != ResultsModelColumns::ROW_RESULT)
+  
+		ResultsModelColumns::RowType type = row[m_resultsColumns.m_resultType];
+		if (type != ResultsModelColumns::ROW_RESULT)
 		{
 			continue;
 		}
@@ -992,7 +995,8 @@
 		bool updateParent = false;
 
 		// This could be a group that's in the map and should be removed first
-		if (row[m_resultsColumns.m_resultType] != ResultsModelColumns::ROW_RESULT)
+		ResultsModelColumns::RowType type = row[m_resultsColumns.m_resultType];
+		if (type != ResultsModelColumns::ROW_RESULT)
 		{
 			string groupName(from_utf8(row[m_resultsColumns.m_text]));
 			std::map<string, TreeModel::iterator>::iterator mapIter = m_resultsGroups.find(groupName);
@@ -1004,7 +1008,7 @@
 #endif
 			}
 		}
-		else
+		else if (m_groupMode != FLAT)
 		{
 			// This item is a result
 			parentIter = row.parent();
@@ -1061,8 +1065,9 @@
 	{
 		TreeModel::Row row = *parentIter;
 
-		if ((row[m_resultsColumns.m_resultType] != ResultsModelColumns::ROW_ENGINE) &&
-			(row[m_resultsColumns.m_resultType] != ResultsModelColumns::ROW_HOST))
+		ResultsModelColumns::RowType type = row[m_resultsColumns.m_resultType];
+		if ((type != ResultsModelColumns::ROW_ENGINE) &&
+			(type != ResultsModelColumns::ROW_HOST))
 		{
 			continue;
 		}
@@ -1073,7 +1078,8 @@
 		{
 			row = *iter;
 
-			if ((row[m_resultsColumns.m_resultType] == ResultsModelColumns::ROW_RESULT) &&
+			type = row[m_resultsColumns.m_resultType];
+			if ((type == ResultsModelColumns::ROW_RESULT) &&
 				(row[m_resultsColumns.m_engines] == engineId) &&
 				(row[m_resultsColumns.m_indexes] == indexId))
 			{
@@ -1407,7 +1413,8 @@
 	int averageScore = 0;
 
 	// Check the iterator doesn't point to a result
-	if (groupRow[m_resultsColumns.m_resultType] == ResultsModelColumns::ROW_RESULT)
+	ResultsModelColumns::RowType type = groupRow[m_resultsColumns.m_resultType];
+	if (type == ResultsModelColumns::ROW_RESULT)
 	{
 		return;
 	}
