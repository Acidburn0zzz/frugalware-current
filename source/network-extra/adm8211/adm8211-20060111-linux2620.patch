diff -Naur adm8211.orig/adm8211_hw.c adm8211/adm8211_hw.c
--- adm8211.orig/adm8211_hw.c	2005-10-07 08:26:04.000000000 +0200
+++ adm8211/adm8211_hw.c	2007-02-05 17:18:38.000000000 +0100
@@ -26,7 +26,6 @@
  */
 
 
-#include <linux/config.h>
 #include <linux/version.h>
 #include <linux/module.h>
 #include <linux/moduleparam.h>
@@ -2712,6 +2711,7 @@
 	printk(version);
 	printk(KERN_INFO "adm8211: release " RELEASE_DATE "\n");
 #endif
+	return -EINVAL;
 
 	return pci_register_driver(&adm8211_driver);
 }
diff -Naur adm8211.orig/ieee80211_sta.c adm8211/ieee80211_sta.c
--- adm8211.orig/ieee80211_sta.c	2006-01-11 13:08:19.000000000 +0100
+++ adm8211/ieee80211_sta.c	2007-02-05 17:18:38.000000000 +0100
@@ -30,7 +30,7 @@
 #define IEEE80211_MONITORING_INTERVAL (30 * HZ)
 #define IEEE80211_LINKCHECK_INTERVAL (3 * HZ)
 
-static void ieee80211_timer(void *ptr);
+static void ieee80211_timer(struct work_struct *work);
 
 ParseRes ieee802_11_parse_elems(struct ieee80211_info_element *start, size_t len,
 				struct ieee802_11_elems *elems)
@@ -823,7 +823,7 @@
 
 void ieee80211_init(struct ieee80211_data *data)
 {
-	INIT_WORK(&data->work, ieee80211_timer, data);
+	INIT_WORK(&data->work, ieee80211_timer);
 
 	data->listen_interval = 10;
 	data->ieee->state = IEEE80211_UNINITIALIZED;
@@ -1188,9 +1188,9 @@
 }
 
 
-static void ieee80211_timer(void *ptr)
+static void ieee80211_timer(struct work_struct *work)
 {
-	struct ieee80211_data *data = (struct ieee80211_data *) ptr;
+	struct ieee80211_data *data = container_of(work, struct ieee80211_data, work);
 
 	switch (data->ieee->state) {
 	case IEEE80211_INITIALIZED:
