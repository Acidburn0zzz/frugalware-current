diff --git a/src/r8169.h b/src/r8169.h
index 13316fa..633aa64 100644
--- a/src/r8169.h
+++ b/src/r8169.h
@@ -237,9 +237,9 @@ extern void __chk_io_ptr(void __iomem *);
 	#define RTL_GET_NETDEV(priv_ptr)			struct net_device *dev = priv_ptr->dev;
 	#define RTL_RX_QUOTA(ndev, budget)			budget
 	#define RTL_NAPI_QUOTA_UPDATE(ndev, work_done, budget)
-	#define RTL_NETIF_RX_COMPLETE(dev, napi)		netif_rx_complete(dev, napi)
-	#define RTL_NETIF_RX_SCHEDULE_PREP(dev, napi)		netif_rx_schedule_prep(dev, napi)
-	#define __RTL_NETIF_RX_SCHEDULE(dev, napi)		__netif_rx_schedule(dev, napi)
+	#define RTL_NETIF_RX_COMPLETE(napi)		netif_rx_complete(napi)
+	#define RTL_NETIF_RX_SCHEDULE_PREP(napi)		netif_rx_schedule_prep(napi)
+	#define __RTL_NETIF_RX_SCHEDULE(napi)		__netif_rx_schedule(napi)
 	#define RTL_NAPI_RETURN_VALUE work_done
 	#define RTL_NAPI_ENABLE(dev, napi)			napi_enable(napi)
 	#define RTL_NAPI_DISABLE(dev, napi)			napi_disable(napi)
diff --git a/src/r8169_n.c b/src/r8169_n.c
index c38519e..404897f 100644
--- a/src/r8169_n.c
+++ b/src/r8169_n.c
@@ -3654,8 +3654,8 @@ static irqreturn_t rtl8169_interrupt(int irq, void *dev_instance)
 			RTL_W16(IntrMask, rtl8169_intr_mask & ~rtl8169_napi_event);
 			tp->intr_mask = ~rtl8169_napi_event;
 
-			if (likely(RTL_NETIF_RX_SCHEDULE_PREP(dev, &tp->napi))) {
-				__RTL_NETIF_RX_SCHEDULE(dev, &tp->napi);
+			if (likely(RTL_NETIF_RX_SCHEDULE_PREP(&tp->napi))) {
+				__RTL_NETIF_RX_SCHEDULE(&tp->napi);
 			} else if (netif_msg_intr(tp)) {
 				printk(KERN_INFO "%s: interrupt %04x in poll\n",
 				       dev->name, status);
@@ -3707,7 +3707,7 @@ static int rtl8169_poll(napi_ptr napi, napi_budget budget)
 	RTL_NAPI_QUOTA_UPDATE(dev, work_done, budget);
 
 	if (work_done < work_to_do) {
-		RTL_NETIF_RX_COMPLETE(dev, napi);
+		RTL_NETIF_RX_COMPLETE(napi);
 		tp->intr_mask = rtl8169_intr_mask;
 		/*
 		 * 20040426: the barrier is not strictly required but the
