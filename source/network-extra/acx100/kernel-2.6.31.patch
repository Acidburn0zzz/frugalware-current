diff --git a/pci.c b/pci.c
index 985a7b3..af76968 100644
--- a/pci.c
+++ b/pci.c
@@ -1503,6 +1503,17 @@ IO_ACX111[] =
 static void
 dummy_netdev_init(struct net_device *ndev) {}
 
+static const struct net_device_ops acx_net_device_ops =
+{
+	.ndo_open = acxpci_e_open,
+	.ndo_stop = acxpci_e_close,
+	.ndo_start_xmit = acx_i_start_xmit,
+	.ndo_get_stats = acx_e_get_stats,
+	.ndo_set_multicast_list = acxpci_i_set_multicast_list,
+	.ndo_tx_timeout = acxpci_i_tx_timeout,
+	.ndo_change_mtu = acx_e_change_mtu,
+};
+
 static int __devinit
 acxpci_e_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 {
@@ -1613,17 +1624,11 @@ acxpci_e_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	}
 
 	ether_setup(ndev);
-	ndev->open = &acxpci_e_open;
-	ndev->stop = &acxpci_e_close;
-	ndev->hard_start_xmit = &acx_i_start_xmit;
-	ndev->get_stats = &acx_e_get_stats;
+	ndev->netdev_ops = &acx_net_device_ops;
 #if IW_HANDLER_VERSION <= 5
 	ndev->get_wireless_stats = &acx_e_get_wireless_stats;
 #endif
 	ndev->wireless_handlers = (struct iw_handler_def *)&acx_ioctl_handler_def;
-	ndev->set_multicast_list = &acxpci_i_set_multicast_list;
-	ndev->tx_timeout = &acxpci_i_tx_timeout;
-	ndev->change_mtu = &acx_e_change_mtu;
 	ndev->watchdog_timeo = 4 * HZ;
 	ndev->irq = pdev->irq;
 	ndev->base_addr = pci_resource_start(pdev, 0);
diff --git a/usb.c b/usb.c
index be1d13b..bde3476 100644
--- a/usb.c
+++ b/usb.c
@@ -617,6 +617,17 @@ acxusb_s_fill_configoption(acx_device_t *adev)
 static void
 dummy_netdev_init(struct net_device *ndev) {}
 
+static const struct net_device_ops acx_net_device_ops =
+{
+	.ndo_open = acxusb_e_open,
+	.ndo_stop = acxusb_e_close,
+	.ndo_start_xmit = acx_i_start_xmit,
+	.ndo_get_stats = acx_e_get_stats,
+	.ndo_set_multicast_list = acxusb_i_set_rx_mode,
+	.ndo_tx_timeout = acxusb_i_tx_timeout,
+	.ndo_change_mtu = acx_e_change_mtu,
+};
+
 static int
 acxusb_e_probe(struct usb_interface *intf, const struct usb_device_id *devID)
 {
@@ -671,16 +682,10 @@ acxusb_e_probe(struct usb_interface *intf, const struct usb_device_id *devID)
 	/* Register the callbacks for the network device functions */
 
 	ether_setup(ndev);
-	ndev->open = &acxusb_e_open;
-	ndev->stop = &acxusb_e_close;
-	ndev->hard_start_xmit = (void *)&acx_i_start_xmit;
-	ndev->get_stats = (void *)&acx_e_get_stats;
-	ndev->set_multicast_list = (void *)&acxusb_i_set_rx_mode;
+	ndev->netdev_ops = &acx_net_device_ops;
 #ifdef HAVE_TX_TIMEOUT
-	ndev->tx_timeout = &acxusb_i_tx_timeout;
 	ndev->watchdog_timeo = 4 * HZ;
 #endif
-	ndev->change_mtu = &acx_e_change_mtu;
 
 	/* Setup private driver context */
 
