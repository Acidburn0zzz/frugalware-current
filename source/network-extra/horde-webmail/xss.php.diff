--- orig/lib/Horde/Text/Filter/xss.php
+++ mod/lib/Horde/Text/Filter/xss.php
@@ -37,6 +37,10 @@
     {
         $patterns = array();
 
+        // backport security patch from Horde 3.1.4 for etch
+        /* Remove all control characters. */
+        $patterns['/[\x00-\x08\x0e-\x1f]/'] = '';
+
         /* Removes HTML comments (including some scripts & styles). */
         if ($this->_params['strip_styles']) {
             $patterns['/<!--.*?-->/s'] = '';
@@ -72,34 +76,54 @@
 
         /* Remove everything outside of and including the <body> tag. */
         if ($this->_params['body_only']) {
-            $patterns['/.*<body[^>]*>/si'] = '';
-            $patterns['/<\/body>.*/si'] = '';
+            // backport security patch from Horde 3.1.6 for etch
+            //$patterns['/.*<body[^>]*>/si'] = '';
+            //$patterns['/<\/body>.*/si'] = '';
+            $patterns['/.*<(body|html)[^>]*>/si'] = '';
+            $patterns['/<\/(body|html)>.*/si'] = '';
         }
 
         /* Get all attribute="javascript:foo()" tags. This is essentially the
          * regex /(=|url\()("?)[^>]*script:/ but expanded to catch camouflage
          * with spaces and entities. */
-        $preg = '/((&#0*61;?|&#x0*3D;?|=)|' .
-                '((u|&#0*85;?|&#x0*55;?|&#0*117;?|&#x0*75;?)\s*' .
-                '(r|&#0*82;?|&#x0*52;?|&#0*114;?|&#x0*72;?)\s*' .
-                '(l|&#0*76;?|&#x0*4c;?|&#0*108;?|&#x0*6c;?)\s*' .
-                '(\()))\s*' .
-                '(&#0*34;?|&#x0*22;?|"|&#0*39;?|&#x0*27;?|\')?' .
+        // backport security patch from Horde 3.1.6 for etch
+        //$preg = '/((&#0*61;?|&#x0*3D;?|=)|' .
+        //        '((u|&#0*85;?|&#x0*55;?|&#0*117;?|&#x0*75;?)\s*' .
+        //        '(r|&#0*82;?|&#x0*52;?|&#0*114;?|&#x0*72;?)\s*' .
+        //        '(l|&#0*76;?|&#x0*4c;?|&#0*108;?|&#x0*6c;?)\s*' .
+        //        '(\()))\s*' .
+        //        '(&#0*34;?|&#x0*22;?|"|&#0*39;?|&#x0*27;?|\')?' .
+        //        '[^>]*\s*' .
+        //        '(s|&#0*83;?|&#x0*53;?|&#0*115;?|&#x0*73;?)\s*' .
+        //        '(c|&#0*67;?|&#x0*43;?|&#0*99;?|&#x0*63;?)\s*' .
+        //        '(r|&#0*82;?|&#x0*52;?|&#0*114;?|&#x0*72;?)\s*' .
+        //        '(i|&#0*73;?|&#x0*49;?|&#0*105;?|&#x0*69;?)\s*' .
+        //        '(p|&#0*80;?|&#x0*50;?|&#0*112;?|&#x0*70;?)\s*' .
+        //        '(t|&#0*84;?|&#x0*54;?|&#0*116;?|&#x0*74;?)\s*' .
+        //        '(:|&#0*58;?|&#x0*3a;?)/i';
+        $preg = '/((=|&#0*61;?|&#x0*3D;?)|' .
+                '((u|&#0*85;?|&#x0*55;?|&#0*117;?|&#x0*75;?|\\\\0*75)\s*' .
+                '(r|&#0*82;?|&#x0*52;?|&#0*114;?|&#x0*72;?|\\\\0*72)\s*' .
+                '(l|&#0*76;?|&#x0*4c;?|&#0*108;?|&#x0*6c;?|\\\\0*6c)\s*' .
+                '(\(|\\\\0*28)))\s*' .
+                '(\'|&#0*34;?|&#x0*22;?|"|&#0*39;?|&#x0*27;?)?' .
                 '[^>]*\s*' .
-                '(s|&#0*83;?|&#x0*53;?|&#0*115;?|&#x0*73;?)\s*' .
-                '(c|&#0*67;?|&#x0*43;?|&#0*99;?|&#x0*63;?)\s*' .
-                '(r|&#0*82;?|&#x0*52;?|&#0*114;?|&#x0*72;?)\s*' .
-                '(i|&#0*73;?|&#x0*49;?|&#0*105;?|&#x0*69;?)\s*' .
-                '(p|&#0*80;?|&#x0*50;?|&#0*112;?|&#x0*70;?)\s*' .
-                '(t|&#0*84;?|&#x0*54;?|&#0*116;?|&#x0*74;?)\s*' .
-                '(:|&#0*58;?|&#x0*3a;?)/i';
+                '(s|&#0*83;?|&#x0*53;?|&#0*115;?|&#x0*73;?|\\\\0*73)\s*' .
+                '(c|&#0*67;?|&#x0*43;?|&#0*99;?|&#x0*63;?|\\\\0*63)\s*' .
+                '(r|&#0*82;?|&#x0*52;?|&#0*114;?|&#x0*72;?|\\\\0*72)\s*' .
+                '(i|&#0*73;?|&#x0*49;?|&#0*105;?|&#x0*69;?|\\\\0*69)\s*' .
+                '(p|&#0*80;?|&#x0*50;?|&#0*112;?|&#x0*70;?|\\\\0*70)\s*' .
+                '(t|&#0*84;?|&#x0*54;?|&#0*116;?|&#x0*74;?|\\\\0*74)\s*' .
+                '(:|&#0*58;?|&#x0*3a;?|\\\\0*3a)/i';
         $patterns[$preg] = '\1\8' . $this->_params['replace'];
 
         /* Get all on<foo>="bar()". NEVER allow these. */
         $patterns['/([\s"\']+' .
                   '(o|&#0*79;?|&#0*4f;?|&#0*111;?|&#0*6f;?)' .
                   '(n|&#0*78;?|&#0*4e;?|&#0*110;?|&#0*6e;?)' .
-                  '\w+)\s*=/i'] = '\1' . $this->_params['replace'] . '=';
+                  // backport security patch from Horde 3.1.6 for etch
+                  //'\w+)\s*=/i'] = '\1' . $this->_params['replace'] . '=';
+                  '\w+)[^=a-z0-9"\'>]*=/i'] = '\1' . $this->_params['replace'] . '=';
 
         /* Remove all scripts since they might introduce garbage if they are
          * not quoted properly. */
@@ -128,6 +152,15 @@
             '(m|&#0*77;?|&#0*4d;?|&#0*109;?|&#0*6d;?)\s*' .
             '(l|&#0*76;?|&#x0*4c;?|&#0*108;?|&#x0*6c;?)\s*/i',
 
+            // backport security patch from Horde 3.1.6 for etch
+            '/<([^>a-z]*)\?([^>a-z]*)' .
+            '(i|&#0*73;?|&#x0*49;?|&#0*105;?|&#x0*69;?)\s*' .
+            '(m|&#0*77;?|&#0*4d;?|&#0*109;?|&#0*6d;?)\s*' .
+            '(p|&#0*80;?|&#x0*50;?|&#0*112;?|&#x0*70;?)\s*' .
+            '(o|&#0*79;?|&#0*4f;?|&#0*111;?|&#0*6f;?)\s*' .
+            '(r|&#0*82;?|&#x0*52;?|&#0*114;?|&#x0*72;?)\s*' .
+            '(t|&#0*84;?|&#x0*54;?|&#0*116;?|&#x0*74;?)\s*/i',
+
             '/<([^>a-z]*)' .
             '(b|&#0*66;?|&#0*42;?|&#0*98;?|&#0*62;?)\s*' .
             '(a|&#0*65;?|&#0*41;?|&#0*97;?|&#0*61;?)\s*' .
@@ -155,8 +188,19 @@
             '(c|&#0*67;?|&#x0*43;?|&#0*99;?|&#x0*63;?)\s*' .
             '(t|&#0*84;?|&#x0*54;?|&#0*116;?|&#x0*74;?)\s*/i',
 
+
+            // backport security patch from Horde 3.1.6 for etch
             '/<([^>a-z]*)' .
-            '(i|&#0*73;?|&#x0*49;?|&#0*105;?|&#x0*69;?)\s*' .
+            '(l|&#0*76;?|&#x0*4c;?|&#0*108;?|&#x0*6c;?)\s*' .
+            '(a|&#0*65;?|&#0*41;?|&#0*97;?|&#0*61;?)\s*' .
+            '(y|&#0*89;?|&#0*59;?|&#0*121;?|&#0*79;?)\s*' .
+            '(e|&#0*69;?|&#0*45;?|&#0*101;?|&#0*65;?)\s*' .
+            '(r|&#0*82;?|&#x0*52;?|&#0*114;?|&#x0*72;?)\s*/i',
+
+            '/<([^>a-z]*)' .
+            // backport security patch from Horde 3.1.6 for etch
+            //'(i|&#0*73;?|&#x0*49;?|&#0*105;?|&#x0*69;?)\s*' .
+            '(i|&#0*73;?|&#x0*49;?|&#0*105;?|&#x0*69;?)?\s*' .
             '(f|&#0*70;?|&#0*46;?|&#0*102;?|&#0*66;?)\s*' .
             '(r|&#0*82;?|&#x0*52;?|&#0*114;?|&#x0*72;?)\s*' .
             '(a|&#0*65;?|&#0*41;?|&#0*97;?|&#0*61;?)\s*' .
@@ -176,9 +220,13 @@
         }
 
         /* A few other matches. */
-        $patterns['|<([^>]*)&{.*}([^>]*)>|'] = '<&{;}\3>';
+        // backport security patch from Horde 3.1.6 for etch
+        //$patterns['|<([^>]*)&{.*}([^>]*)>|'] = '<&{;}\3>';
+        $patterns['|<([^>]*)&{.*}([^>]*)>|'] = '<\1&{;}\2>';
         $patterns['|<([^>]*)mocha:([^>]*)>|i'] = '<\1' . $this->_params['replace'] . ':\2>';
-        $patterns['|<([^>]*)binding:([^>]*)>|i'] = '<\1' . $this->_params['replace'] . ':\2>';
+        // backport security patch from Horde 3.1.6 for etch
+        //$patterns['|<([^>]*)binding:([^>]*)>|i'] = '<\1' . $this->_params['replace'] . ':\2>';
+        $patterns['/<(([^>]*)|(style[^>]*>[^<]*))binding:((?(3)[^<]*<\/style)[^>]*)>/i'] = '<\1' . $this->_params['replace'] . ':\4>';
 
         return array('regexp' => $patterns);
     }
