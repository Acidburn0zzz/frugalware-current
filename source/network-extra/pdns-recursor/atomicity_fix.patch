diff -Naur pdns-recursor-3.1.4.orig/recursor_cache.cc pdns-recursor-3.1.4/recursor_cache.cc
--- pdns-recursor-3.1.4.orig/recursor_cache.cc	2007-05-27 16:54:25.000000000 +0200
+++ pdns-recursor-3.1.4/recursor_cache.cc	2007-05-27 16:58:19.000000000 +0200
@@ -11,26 +11,26 @@
 #include "config.h"
 
 #ifdef GCC_SKIP_LOCKING
-#include <bits/atomicity.h>
+#include <ext/atomicity.h>
 // This code is ugly but does speedup the recursor tremendously on multi-processor systems, and even has a large effect (20, 30%) on uniprocessor 
-namespace __gnu_cxx
-{
-  _Atomic_word
-  __attribute__ ((__unused__))
-  __exchange_and_add(volatile _Atomic_word* __mem, int __val)
-  {
-    register _Atomic_word __result=*__mem;
-    *__mem+=__val;
-    return __result;
-  }
-
-  void
-  __attribute__ ((__unused__))
-  __atomic_add(volatile _Atomic_word* __mem, int __val)
-  {
-    *__mem+=__val;
-  }
-}
+//namespace __gnu_cxx
+//{
+//  _Atomic_word
+//  __attribute__ ((__unused__))
+//  __exchange_and_add(volatile _Atomic_word* __mem, int __val)
+//  {
+//    register _Atomic_word __result=*__mem;
+//    *__mem+=__val;
+//    return __result;
+//  }
+//
+//  void
+//  __attribute__ ((__unused__))
+//  __atomic_add(volatile _Atomic_word* __mem, int __val)
+//  {
+//    *__mem+=__val;
+//  }
+//}
 #endif
 
 string simpleCompress(const string& label)
