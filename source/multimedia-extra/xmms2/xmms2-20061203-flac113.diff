diff -Naur xmms2-0.2DrHouse.orig/src/plugins/flac/flac.c xmms2-0.2DrHouse/src/plugins/flac/flac.c
--- xmms2-0.2DrHouse.orig/src/plugins/flac/flac.c	2006-12-03 00:01:08.000000000 +0100
+++ xmms2-0.2DrHouse/src/plugins/flac/flac.c	2007-01-30 18:29:06.000000000 +0100
@@ -27,7 +27,7 @@
 #include <glib.h>
 
 typedef struct xmms_flac_data_St {
-	FLAC__SeekableStreamDecoder *flacdecoder;
+	FLAC__StreamDecoder *flacdecoder;
 	FLAC__StreamMetadata *vorbiscomment;
 	guint channels;
 	guint sample_rate;
@@ -83,8 +83,8 @@
 	return TRUE;
 }
 
-static FLAC__SeekableStreamDecoderReadStatus
-flac_callback_read (const FLAC__SeekableStreamDecoder *flacdecoder,
+static FLAC__StreamDecoderReadStatus
+flac_callback_read (const FLAC__StreamDecoder *flacdecoder,
                     FLAC__byte buffer[],
                     guint *bytes,
                     void *client_data)
@@ -94,17 +94,17 @@
 	gint ret;
 
 	g_return_val_if_fail (xform,
-	                      FLAC__SEEKABLE_STREAM_DECODER_READ_STATUS_ERROR);
+	                      FLAC__STREAM_DECODER_READ_STATUS_ABORT);
 
 	ret = xmms_xform_read (xform, (gchar *)buffer, *bytes, &error);
 	*bytes = ret;
 
-	return (ret <= 0) ? FLAC__SEEKABLE_STREAM_DECODER_READ_STATUS_ERROR
-	                  : FLAC__SEEKABLE_STREAM_DECODER_READ_STATUS_OK;
+	return (ret <= 0) ? FLAC__STREAM_DECODER_READ_STATUS_ABORT
+	                  : FLAC__STREAM_DECODER_READ_STATUS_CONTINUE;
 }
 
 static FLAC__StreamDecoderWriteStatus
-flac_callback_write (const FLAC__SeekableStreamDecoder *flacdecoder,
+flac_callback_write (const FLAC__StreamDecoder *flacdecoder,
                      const FLAC__Frame *frame,
                      const FLAC__int32 * const buffer[],
                      void *client_data)
@@ -139,25 +139,25 @@
 	return FLAC__STREAM_DECODER_WRITE_STATUS_CONTINUE;
 }
 
-static FLAC__SeekableStreamDecoderTellStatus
-flac_callback_tell (const FLAC__SeekableStreamDecoder *flacdecoder,
+static FLAC__StreamDecoderTellStatus
+flac_callback_tell (const FLAC__StreamDecoder *flacdecoder,
                     FLAC__uint64 *offset, void *client_data)
 {
 	xmms_error_t err;
 	xmms_xform_t *xform = (xmms_xform_t *) client_data;
 
 	g_return_val_if_fail (xform,
-	                      FLAC__SEEKABLE_STREAM_DECODER_SEEK_STATUS_ERROR);
+	                      FLAC__STREAM_DECODER_SEEK_STATUS_ERROR);
 
 	xmms_error_reset (&err);
 
 	*offset = xmms_xform_seek (xform, 0, XMMS_XFORM_SEEK_CUR, &err);
 
-	return FLAC__SEEKABLE_STREAM_DECODER_TELL_STATUS_OK;
+	return FLAC__STREAM_DECODER_TELL_STATUS_OK;
 }
 
-static FLAC__SeekableStreamDecoderSeekStatus
-flac_callback_seek (const FLAC__SeekableStreamDecoder *flacdecoder,
+static FLAC__StreamDecoderSeekStatus
+flac_callback_seek (const FLAC__StreamDecoder *flacdecoder,
                     FLAC__uint64 offset, void *client_data)
 {
 	xmms_error_t err;
@@ -169,12 +169,12 @@
 	retval = xmms_xform_seek (xform, (gint64) offset,
 	                          XMMS_XFORM_SEEK_SET, &err);
 
-	return (retval == -1) ? FLAC__SEEKABLE_STREAM_DECODER_SEEK_STATUS_ERROR
-	                      : FLAC__SEEKABLE_STREAM_DECODER_SEEK_STATUS_OK;
+	return (retval == -1) ? FLAC__STREAM_DECODER_SEEK_STATUS_ERROR
+	                      : FLAC__STREAM_DECODER_SEEK_STATUS_OK;
 }
 
-static FLAC__SeekableStreamDecoderLengthStatus
-flac_callback_length (const FLAC__SeekableStreamDecoder *flacdecoder,
+static FLAC__StreamDecoderLengthStatus
+flac_callback_length (const FLAC__StreamDecoder *flacdecoder,
                       FLAC__uint64 *stream_length, void *client_data)
 {
 	xmms_xform_t *xform = (xmms_xform_t *) client_data;
@@ -184,12 +184,12 @@
 										  XMMS_MEDIALIB_ENTRY_PROPERTY_SIZE);
 	*stream_length = retval;
 
-	return (retval == -1) ? FLAC__SEEKABLE_STREAM_DECODER_LENGTH_STATUS_ERROR
-	                      : FLAC__SEEKABLE_STREAM_DECODER_LENGTH_STATUS_OK;
+	return (retval == -1) ? FLAC__STREAM_DECODER_LENGTH_STATUS_ERROR
+	                      : FLAC__STREAM_DECODER_LENGTH_STATUS_OK;
 }
 
 static void
-flac_callback_metadata (const FLAC__SeekableStreamDecoder *flacdecoder,
+flac_callback_metadata (const FLAC__StreamDecoder *flacdecoder,
                         const FLAC__StreamMetadata *metadata,
                         void *client_data)
 {
@@ -233,7 +233,7 @@
 }
 
 static FLAC__bool
-flac_callback_eof (const FLAC__SeekableStreamDecoder *flacdecoder,
+flac_callback_eof (const FLAC__StreamDecoder *flacdecoder,
                    void *client_data)
 {
 	xmms_xform_t *xform = (xmms_xform_t *) client_data;
@@ -245,7 +245,7 @@
 }
 
 static void
-flac_callback_error (const FLAC__SeekableStreamDecoder *flacdecoder,
+flac_callback_error (const FLAC__StreamDecoder *flacdecoder,
                      FLAC__StreamDecoderErrorStatus status,
                      void *client_data)
 {
@@ -291,7 +291,6 @@
 	xmms_flac_data_t *data;
 	xmms_sample_format_t sample_fmt;
 	FLAC__bool retval;
-	FLAC__SeekableStreamDecoderState init_status;
 	gint current, num_comments;
 	gint filesize;
 
@@ -299,39 +298,27 @@
 
 	data = g_new0 (xmms_flac_data_t, 1);
 
-	data->flacdecoder = FLAC__seekable_stream_decoder_new ();
-	FLAC__seekable_stream_decoder_set_eof_callback (data->flacdecoder,
-	                                                flac_callback_eof);
-	FLAC__seekable_stream_decoder_set_read_callback (data->flacdecoder,
-	                                                 flac_callback_read);
-	FLAC__seekable_stream_decoder_set_seek_callback (data->flacdecoder,
-	                                                 flac_callback_seek);
-	FLAC__seekable_stream_decoder_set_tell_callback (data->flacdecoder,
-	                                                 flac_callback_tell);
-	FLAC__seekable_stream_decoder_set_write_callback (data->flacdecoder,
-	                                                  flac_callback_write);
-	FLAC__seekable_stream_decoder_set_error_callback (data->flacdecoder,
-	                                                  flac_callback_error);
-	FLAC__seekable_stream_decoder_set_length_callback (data->flacdecoder,
-	                                                   flac_callback_length);
-	FLAC__seekable_stream_decoder_set_metadata_callback (data->flacdecoder,
-	                                                     flac_callback_metadata);
-
-	FLAC__seekable_stream_decoder_set_client_data (data->flacdecoder, xform);
-
 	xmms_xform_private_data_set (xform, data);
 
-	FLAC__seekable_stream_decoder_set_metadata_respond_all (data->flacdecoder);
-
-	init_status = FLAC__seekable_stream_decoder_init (data->flacdecoder);
-
-	if (init_status != FLAC__SEEKABLE_STREAM_DECODER_OK) {
-		const gchar *errmsg = FLAC__seekable_stream_decoder_get_resolved_state_string (data->flacdecoder);
+	if( FLAC__stream_decoder_init_stream( data->flacdecoder,
+				flac_callback_read,
+				flac_callback_seek,
+				flac_callback_tell,
+				flac_callback_length,
+				flac_callback_eof,
+				flac_callback_write,
+				flac_callback_metadata,
+				flac_callback_error,
+				xform )
+			!= FLAC__STREAM_DECODER_INIT_STATUS_OK ) {
+		const gchar *errmsg = FLAC__stream_decoder_get_resolved_state_string (data->flacdecoder);
 		XMMS_DBG ("FLAC init failed: %s", errmsg);
 		goto err;
 	}
 
-	retval = FLAC__seekable_stream_decoder_process_until_end_of_metadata (data->flacdecoder);
+	FLAC__stream_decoder_set_metadata_respond_all (data->flacdecoder);
+
+	retval = FLAC__stream_decoder_process_until_end_of_metadata (data->flacdecoder);
 	if (!retval)
 		goto err;
 
@@ -422,8 +409,8 @@
 
 err:
 
-	FLAC__seekable_stream_decoder_finish (data->flacdecoder);
-	FLAC__seekable_stream_decoder_delete (data->flacdecoder);
+	FLAC__stream_decoder_finish (data->flacdecoder);
+	FLAC__stream_decoder_delete (data->flacdecoder);
 	g_free (data);
 
 	return FALSE;
@@ -434,7 +421,7 @@
 xmms_flac_read (xmms_xform_t *xform, xmms_sample_t *buf, gint len,
                 xmms_error_t *err)
 {
-	FLAC__SeekableStreamDecoderState state;
+	FLAC__StreamDecoderState state;
 	xmms_flac_data_t *data;
 	gboolean ret;
 	guint32 size;
@@ -447,12 +434,12 @@
 	size = MIN (data->buffer->len, len);
 
 	if (size <= 0) {
-		ret = FLAC__seekable_stream_decoder_process_single (data->flacdecoder);
+		ret = FLAC__stream_decoder_process_single (data->flacdecoder);
 	}
 
-	state = FLAC__seekable_stream_decoder_get_state (data->flacdecoder);
+	state = FLAC__stream_decoder_get_state (data->flacdecoder);
 
-	if (state == FLAC__SEEKABLE_STREAM_DECODER_END_OF_STREAM) {
+	if (state == FLAC__STREAM_DECODER_END_OF_STREAM) {
 		return 0;
 	}
 
@@ -482,7 +469,7 @@
 		return -1;
 	}
 
-	res = FLAC__seekable_stream_decoder_seek_absolute (data->flacdecoder,
+	res = FLAC__stream_decoder_seek_absolute (data->flacdecoder,
 	                                                   (FLAC__uint64) samples);
 
 	return res ? samples : -1;
@@ -504,8 +491,8 @@
 
 	g_string_free (data->buffer, TRUE);
 
-	FLAC__seekable_stream_decoder_finish (data->flacdecoder);
-	FLAC__seekable_stream_decoder_delete (data->flacdecoder);
+	FLAC__stream_decoder_finish (data->flacdecoder);
+	FLAC__stream_decoder_delete (data->flacdecoder);
 
 	g_free (data);
 }
diff -Naur xmms2-0.2DrHouse.orig/src/plugins/flac/Plugin xmms2-0.2DrHouse/src/plugins/flac/Plugin
--- xmms2-0.2DrHouse.orig/src/plugins/flac/Plugin	2006-12-03 00:01:08.000000000 +0100
+++ xmms2-0.2DrHouse/src/plugins/flac/Plugin	2007-01-30 17:44:13.000000000 +0100
@@ -3,5 +3,5 @@
 
 def config(env):
 	env.checkheader("FLAC/all.h")
-	env.checklib("FLAC", "FLAC__seekable_stream_decoder_get_state")
+	env.checklib("FLAC", "FLAC__stream_decoder_get_state")
 
