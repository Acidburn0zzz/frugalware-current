diff --exclude='*.orig' -NrU5 boson-all-0.13.orig/cmake/modules/boson/KDE3Macros.cmake boson-all-0.13/cmake/modules/boson/KDE3Macros.cmake
--- boson-all-0.13.orig/cmake/modules/boson/KDE3Macros.cmake	2006-06-24 14:35:16.000000000 +0200
+++ boson-all-0.13/cmake/modules/boson/KDE3Macros.cmake	2008-05-05 17:09:28.000000000 +0200
@@ -1,6 +1,6 @@
-
+#
 
 # See FindKDE3.cmake for documentation.
 #
 # this file contains the following macros:
 # KDE3_ADD_DCOP_SKELS
@@ -34,13 +34,14 @@
       IF (NOT HAVE_${_basename}_KIDL_RULE)
          SET(HAVE_${_basename}_KIDL_RULE ON)
 
           ADD_CUSTOM_COMMAND(OUTPUT ${_kidl}
           COMMAND ${KDE3_DCOPIDL_EXECUTABLE}
-          ARGS ${CMAKE_CURRENT_SOURCE_DIR}/${_current_FILE} > ${_kidl}
+          ARGS ${_tmp_FILE} > ${_kidl}
           DEPENDS ${_tmp_FILE}
          )
+         
        ENDIF (NOT HAVE_${_basename}_KIDL_RULE)
 
       IF (NOT HAVE_${_basename}_SKEL_RULE)
         SET(HAVE_${_basename}_SKEL_RULE ON)
 
@@ -73,12 +74,12 @@
         SET(HAVE_${_basename}_KIDL_RULE ON)
 
 
         ADD_CUSTOM_COMMAND(OUTPUT ${_kidl}
            COMMAND ${KDE3_DCOPIDL_EXECUTABLE}
-           ARGS ${tmp_FILE} > ${_kidl}
-           DEPENDS ${tmp_FILE}
+           ARGS ${_tmp_FILE} > ${_kidl}
+           DEPENDS ${_tmp_FILE}
            )
 
       ENDIF (NOT HAVE_${_basename}_KIDL_RULE)
 
 
@@ -161,19 +162,19 @@
       SET(_src ${CMAKE_CURRENT_BINARY_DIR}/${_basename}.cpp)
       SET(_moc ${CMAKE_CURRENT_BINARY_DIR}/${_basename}.moc.cpp)
 
       ADD_CUSTOM_COMMAND(OUTPUT ${_header}
          COMMAND ${QT_UIC_EXECUTABLE}
-         ARGS  -nounload -o ${_header} ${CMAKE_CURRENT_SOURCE_DIR}/${_current_FILE}
+         ARGS  -L ${KDE3_LIB_DIR}/kde3/plugins/designer -nounload -o ${_header} ${CMAKE_CURRENT_SOURCE_DIR}/${_current_FILE}
          DEPENDS ${_tmp_FILE}
       )
 
       ADD_CUSTOM_COMMAND(OUTPUT ${_src}
          COMMAND ${CMAKE_COMMAND}
          ARGS
+         -DKDE_UIC_PLUGIN_DIR:FILEPATH=${KDE3_LIB_DIR}/kde3/plugins/designer
          -DKDE_UIC_EXECUTABLE:FILEPATH=${QT_UIC_EXECUTABLE}
-         -DKDE_UIC_PLUGIN_DIR:PATH=${KDE3_LIB_DIR}/kde3/plugins/designer
          -DKDE_UIC_FILE:FILEPATH=${_tmp_FILE}
          -DKDE_UIC_CPP_FILE:FILEPATH=${_src}
          -DKDE_UIC_H_FILE:FILEPATH=${_header}
          -P ${KDE3_MODULE_DIR}/kde3uic.cmake
          DEPENDS ${_header}
@@ -235,53 +236,68 @@
 
       ENDIF (EXISTS ${_abs_FILE} AND NOT _skip)
    ENDFOREACH (_current_FILE)
 ENDMACRO(KDE3_AUTOMOC)
 
+# only used internally by KDE3_INSTALL_ICONS
+MACRO (_KDE3_ADD_ICON_INSTALL_RULE _install_SCRIPT _install_PATH _group _orig_NAME _install_NAME)
 
-MACRO(KDE3_INSTALL_ICONS _theme)
-   ADD_CUSTOM_TARGET(install_icons )
-   SET_TARGET_PROPERTIES(install_icons PROPERTIES POST_INSTALL_SCRIPT ${CMAKE_CURRENT_BINARY_DIR}/install_icons.cmake )
-   FILE(WRITE ${CMAKE_CURRENT_BINARY_DIR}/install_icons.cmake "# icon installations rules\n")
-   FILE(APPEND ${CMAKE_CURRENT_BINARY_DIR}/install_icons.cmake "SET(CMAKE_BACKWARDS_COMPATIBILITY \"2.2\") \n")
-
-   FILE(GLOB _icons *.png)
-   FOREACH(_current_ICON ${_icons} )
-      STRING(REGEX REPLACE "^.*/[a-zA-Z]+([0-9]+)\\-([a-z]+)\\-(.+\\.png)$" "\\1" _size "${_current_ICON}")
-      STRING(REGEX REPLACE "^.*/[a-zA-Z]+([0-9]+)\\-([a-z]+)\\-(.+\\.png)$" "\\2" _group "${_current_ICON}")
-      STRING(REGEX REPLACE "^.*/[a-zA-Z]+([0-9]+)\\-([a-z]+)\\-(.+\\.png)$" "\\3" _name "${_current_ICON}")
-
+   # if the string doesn't match the pattern, the result is the full string, so all three have the same content
+   IF (NOT ${_group} STREQUAL ${_install_NAME} )
       SET(_icon_GROUP "actions")
 
-      IF(${_group} STREQUAL "mime")
+      IF (${_group} STREQUAL "mime")
          SET(_icon_GROUP  "mimetypes")
-      ENDIF(${_group} STREQUAL "mime")
+      ENDIF (${_group} STREQUAL "mime")
 
-      IF(${_group} STREQUAL "filesys")
+      IF (${_group} STREQUAL "filesys")
          SET(_icon_GROUP  "filesystems")
-      ENDIF(${_group} STREQUAL "filesys")
+      ENDIF (${_group} STREQUAL "filesys")
 
-      IF(${_group} STREQUAL "device")
+      IF (${_group} STREQUAL "device")
          SET(_icon_GROUP  "devices")
-      ENDIF(${_group} STREQUAL "device")
+      ENDIF (${_group} STREQUAL "device")
 
-      IF(${_group} STREQUAL "app")
+      IF (${_group} STREQUAL "app")
          SET(_icon_GROUP  "apps")
-      ENDIF(${_group} STREQUAL "app")
+      ENDIF (${_group} STREQUAL "app")
 
-      IF(${_group} STREQUAL "action")
+      IF (${_group} STREQUAL "action")
          SET(_icon_GROUP  "actions")
-      ENDIF(${_group} STREQUAL "action")
+      ENDIF (${_group} STREQUAL "action")
 
 #      message(STATUS "icon: ${_current_ICON} size: ${_size} group: ${_group} name: ${_name}" )
-      SET(_ICON_INSTALL_NAME ${CMAKE_INSTALL_PREFIX}/share/icons/${_theme}/${_size}x${_size}/${_icon_GROUP}/${_name})
-      FILE(APPEND ${CMAKE_CURRENT_BINARY_DIR}/install_icons.cmake "message(STATUS \"Installing ${_ICON_INSTALL_NAME}\") \n")
-      FILE(APPEND ${CMAKE_CURRENT_BINARY_DIR}/install_icons.cmake "CONFIGURE_FILE( ${_current_ICON} ${_ICON_INSTALL_NAME} COPYONLY) \n")
+   INSTALL(FILES ${_orig_NAME} DESTINATION ${_install_PATH}/${_icon_GROUP}/ RENAME ${_install_NAME} )
+   ENDIF (NOT ${_group} STREQUAL ${_install_NAME} )
+
+ENDMACRO (_KDE3_ADD_ICON_INSTALL_RULE)
+
+
+MACRO (KDE3_INSTALL_ICONS _theme )
+   SET(_defaultpath "${CMAKE_INSTALL_PREFIX}/share/icons")
+   # first the png icons
+   FILE(GLOB _icons *.png)
+   FOREACH (_current_ICON ${_icons} )
+      STRING(REGEX REPLACE "^.*/[a-zA-Z]+([0-9]+)\\-([a-z]+)\\-(.+\\.png)$" "\\1" _size  "${_current_ICON}")
+      STRING(REGEX REPLACE "^.*/[a-zA-Z]+([0-9]+)\\-([a-z]+)\\-(.+\\.png)$" "\\2" _group "${_current_ICON}")
+      STRING(REGEX REPLACE "^.*/[a-zA-Z]+([0-9]+)\\-([a-z]+)\\-(.+\\.png)$" "\\3" _name  "${_current_ICON}")
+      _KDE3_ADD_ICON_INSTALL_RULE(${CMAKE_CURRENT_BINARY_DIR}/install_icons.cmake
+         ${_defaultpath}/${_theme}/${_size}x${_size}
+         ${_group} ${_current_ICON} ${_name})
+   ENDFOREACH (_current_ICON)
 
+   # and now the svg icons
+   FILE(GLOB _icons *.svgz)
+   FOREACH (_current_ICON ${_icons} )
+      STRING(REGEX REPLACE "^.*/crsc\\-([a-z]+)\\-(.+\\.svgz)$" "\\1" _group "${_current_ICON}")
+      STRING(REGEX REPLACE "^.*/crsc\\-([a-z]+)\\-(.+\\.svgz)$" "\\2" _name "${_current_ICON}")
+      _KDE3_ADD_ICON_INSTALL_RULE(${CMAKE_CURRENT_BINARY_DIR}/install_icons.cmake
+                                 ${_defaultpath}/${_theme}/scalable
+                                 ${_group} ${_current_ICON} ${_name})
    ENDFOREACH (_current_ICON)
-ENDMACRO(KDE3_INSTALL_ICONS)
 
+ENDMACRO (KDE3_INSTALL_ICONS)
 
 MACRO(KDE3_INSTALL_LIBTOOL_FILE _target)
    GET_TARGET_PROPERTY(_target_location ${_target} LOCATION)
 
    GET_FILENAME_COMPONENT(_laname ${_target_location} NAME_WE)
@@ -303,11 +319,11 @@
    FILE(APPEND ${_laname} "# Should we warn about portability when linking against -modules?\nshouldnotlink=yes\n")
    FILE(APPEND ${_laname} "# Files to dlopen/dlpreopen\ndlopen=''\ndlpreopen=''\n")
    FILE(APPEND ${_laname} "# Directory that this library needs to be installed in:\n")
    FILE(APPEND ${_laname} "libdir='${CMAKE_INSTALL_PREFIX}/lib/kde3'\n")
 
-   INSTALL_FILES(/lib/kde3 FILES ${_laname})
+   INSTALL_FILES(${KDE3_LIBTOOL_DIR} FILES ${_laname})
 ENDMACRO(KDE3_INSTALL_LIBTOOL_FILE)
 
 
 MACRO(KDE3_CREATE_FINAL_FILE _filename)
    FILE(WRITE ${_filename} "//autogenerated file\n")
@@ -316,11 +332,11 @@
    ENDFOREACH (_current_FILE)
 
 ENDMACRO(KDE3_CREATE_FINAL_FILE)
 
 
-OPTION(KDE3_ENABLE_FINAL "Enable final all-in-one compilation")
+# OPTION(KDE3_ENABLE_FINAL "Enable final all-in-one compilation")
 OPTION(KDE3_BUILD_TESTS  "Build the tests")
 
 
 MACRO(KDE3_ADD_KPART _target_NAME _with_PREFIX)
 #is the first argument is "WITH_PREFIX" then keep the standard "lib" prefix, otherwise SET the prefix empty
@@ -328,16 +344,11 @@
       SET(_first_SRC)
    ELSE (${_with_PREFIX} STREQUAL "WITH_PREFIX")
       SET(_first_SRC ${_with_PREFIX})
    ENDIF (${_with_PREFIX} STREQUAL "WITH_PREFIX")
 
-   IF (KDE3_ENABLE_FINAL)
-      KDE3_CREATE_FINAL_FILE(${_target_NAME}_final.cpp ${_first_SRC} ${ARGN})
-      ADD_LIBRARY(${_target_NAME} MODULE  ${_target_NAME}_final.cpp)
-   ELSE (KDE3_ENABLE_FINAL)
       ADD_LIBRARY(${_target_NAME} MODULE ${_first_SRC} ${ARGN})
-   ENDIF (KDE3_ENABLE_FINAL)
 
    IF(_first_SRC)
       SET_TARGET_PROPERTIES(${_target_NAME} PROPERTIES PREFIX "")
    ENDIF(_first_SRC)
 
@@ -346,16 +357,11 @@
 ENDMACRO(KDE3_ADD_KPART)
 
 
 MACRO(KDE3_ADD_KDEINIT_EXECUTABLE _target_NAME )
 
-   IF (KDE3_ENABLE_FINAL)
-      KDE3_CREATE_FINAL_FILE(${_target_NAME}_final.cpp ${ARGN})
-      ADD_LIBRARY(kdeinit_${_target_NAME} SHARED  ${_target_NAME}_final.cpp)
-   ELSE (KDE3_ENABLE_FINAL)
       ADD_LIBRARY(kdeinit_${_target_NAME} SHARED ${ARGN} )
-   ENDIF (KDE3_ENABLE_FINAL)
 
    CONFIGURE_FILE(${KDE3_MODULE_DIR}/kde3init_dummy.cpp.in ${CMAKE_CURRENT_BINARY_DIR}/${_target_NAME}_dummy.cpp)
 
    ADD_EXECUTABLE( ${_target_NAME} ${CMAKE_CURRENT_BINARY_DIR}/${_target_NAME}_dummy.cpp )
    TARGET_LINK_LIBRARIES( ${_target_NAME} kdeinit_${_target_NAME} )
@@ -363,15 +369,10 @@
 ENDMACRO(KDE3_ADD_KDEINIT_EXECUTABLE)
 
 
 MACRO(KDE3_ADD_EXECUTABLE _target_NAME )
 
-   IF (KDE3_ENABLE_FINAL)
-      KDE3_CREATE_FINAL_FILE(${_target_NAME}_final.cpp ${ARGN})
-      ADD_EXECUTABLE(${_target_NAME} ${_target_NAME}_final.cpp)
-   ELSE (KDE3_ENABLE_FINAL)
       ADD_EXECUTABLE(${_target_NAME} ${ARGN} )
-   ENDIF (KDE3_ENABLE_FINAL)
 
 ENDMACRO(KDE3_ADD_EXECUTABLE)
 
 
