diff -aur libclaw-1.5.4/claw/code/basic_socket.cpp libclaw-1.5.4-2/claw/code/basic_socket.cpp
--- libclaw-1.5.4/claw/code/basic_socket.cpp	2008-01-07 10:38:58.000000000 -0600
+++ libclaw-1.5.4-2/claw/code/basic_socket.cpp	2010-05-15 00:45:20.000000000 -0500
@@ -45,7 +45,7 @@
  * \brief Open the socket.
  * \return this is everything works fine, NULL otherwise.
  */
-claw::net::basic_socket::basic_socket* claw::net::basic_socket::open()
+claw::net::basic_socket* claw::net::basic_socket::open()
 {
   basic_socket* result = NULL;
   
@@ -62,7 +62,7 @@
  * \brief Close the socket.
  * \return this if everything works fine, NULL otherwise.
  */
-claw::net::basic_socket::basic_socket* claw::net::basic_socket::close()
+claw::net::basic_socket* claw::net::basic_socket::close()
 {
   basic_socket* result = this;
 
diff -aur libclaw-1.5.4/claw/code/socket_server.cpp libclaw-1.5.4-2/claw/code/socket_server.cpp
--- libclaw-1.5.4/claw/code/socket_server.cpp	2008-01-07 10:38:58.000000000 -0600
+++ libclaw-1.5.4-2/claw/code/socket_server.cpp	2010-05-15 00:48:49.000000000 -0500
@@ -58,7 +58,7 @@
  * \param queue_size The size of the waiting queue for incoming connections.
  * \return this if everything works fine, NULL otherwise.
  */
-claw::net::socket_server::socket_server*
+claw::net::socket_server*
 claw::net::socket_server::open( int port, unsigned int queue_size )
 {
   socket_server* result = NULL;
@@ -78,7 +78,7 @@
 /**
  * \brief Close the socket.
  */
-claw::net::socket_server::socket_server* claw::net::socket_server::close()
+claw::net::socket_server* claw::net::socket_server::close()
 {
   if ( basic_socket::close() )
     return this;
diff -aur libclaw-1.5.4/claw/impl/logger.tpp libclaw-1.5.4-2/claw/impl/logger.tpp
--- libclaw-1.5.4/claw/impl/logger.tpp	2008-01-07 10:38:58.000000000 -0600
+++ libclaw-1.5.4-2/claw/impl/logger.tpp	2010-05-15 00:38:44.000000000 -0500
@@ -36,7 +36,7 @@
  * \remark T must support operator<<(std::ostream&, const T&);
  */
 template<class T>
-claw::log_system::log_system& claw::log_system::operator<<( const T& t )
+claw::log_system& claw::log_system::operator<<( const T& t )
 {
   if (m_message_level <= m_log_level)
     {
