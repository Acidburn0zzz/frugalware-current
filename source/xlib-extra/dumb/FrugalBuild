# Compiling Time: 0.10 SBU
# Maintainer: Devil505 <devil505linux@gmail.com>

pkgname=dumb
pkgver=0.9.3
pkgrel=1
pkgdesc="An IT, XM, S3M and MOD player library"
depends=('allegro')
Finclude sourceforge
groups=('xlib-extra')
archs=('i686' 'x86_64')
sha1sums=('4764bd59f5895eb5035a5139454cef7a53a76bb8')

build() {
  Fcd
  [ "${CARCH}" = "x86_64" ] && export CFLAGS="${CFLAGS} -fPIC"
  # Create the directories which the Makefile somehow fails to create
  # Create the directories which the Makefile somehow fails to create
  install -d lib/unix/{debug,release} || Fdie

  # Make with Allegro support
  # Upstream's make process is interactive, and we can't simply pass
  # a here-document to the make command.  The best way is to write our
  # own config.txt, circumventing the interactive configuration step,
  # as is done in Gentoo's ebuild.
        cat << EOF > make/config.txt
include make/unix.inc
ALL_TARGETS := core core-examples core-headers
ALL_TARGETS += allegro allegro-examples allegro-headers
PREFIX := "$Fdestdir/usr"
EOF

  # Upstream's makefile ignores our CFLAGS.  They put -I directives in
  # their own CFLAGS, so we can't just say
  # make CFLAGS=...
  # Gentoo's ebuild overrides another of their makefile variables, named
  # OFLAGS.
  make OFLAGS="${CFLAGS}" || fdie

  # Create directories
  Fmkdir usr/{lib,bin,include}
  Fdocrel licence.txt

  Fmakeinstall
}

# optimization OK
