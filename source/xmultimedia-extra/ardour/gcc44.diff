*** libs/midi++2/midi.cc.bk	2009-06-17 14:20:23.000000000 +0200
--- libs/midi++2/midi.cc	2009-06-17 14:21:05.000000000 +0200
***************
*** 158,167 ****
  MIDI::decode_controller_name (const char *name)
  
  {
! 	char *lparen;
  	size_t len;
  
! 	if ((lparen = strrchr (name, '(')) != 0) {
  		return atoi (lparen+1);
  	} else {
  		len = strcspn (name, "0123456789");
--- 158,167 ----
  MIDI::decode_controller_name (const char *name)
  
  {
! 	const char *lparen = strrchr (name, '(');
  	size_t len;
  
! 	if (lparen != 0) {
  		return atoi (lparen+1);
  	} else {
  		len = strcspn (name, "0123456789");

*** gtk2_ardour/actions.cc.bk	2009-06-17 14:33:29.000000000 +0200
--- gtk2_ardour/actions.cc	2009-06-17 14:34:11.000000000 +0200
***************
*** 319,325 ****
  void
  ActionManager::uncheck_toggleaction (const char * name)
  {
! 	char *last_slash = strrchr (name, '/');
  
  	if (last_slash == 0) {
  		fatal << string_compose (_("programmer error: %1 %2"), X_("illegal toggle action name"), name) << endmsg;
--- 319,325 ----
  void
  ActionManager::uncheck_toggleaction (const char * name)
  {
! 	const char *last_slash = strrchr (name, '/');
  
  	if (last_slash == 0) {
  		fatal << string_compose (_("programmer error: %1 %2"), X_("illegal toggle action name"), name) << endmsg;
***************
*** 334,340 ****
  	memcpy (group_name, name + 10, len);
  	group_name[len] = '\0';
  
! 	char* action_name = last_slash + 1;
  
          RefPtr<Action> act = get_action (group_name, action_name);
  	if (act) {
--- 334,340 ----
  	memcpy (group_name, name + 10, len);
  	group_name[len] = '\0';
  
! 	const char* action_name = last_slash + 1;
  
          RefPtr<Action> act = get_action (group_name, action_name);
  	if (act) {

