Index: build.h.in
===================================================================
--- build.h.in	(Revision 11299)
+++ build.h.in	(Arbeitskopie)
@@ -2,7 +2,7 @@
 #define _BUILD_H
 
 #define BUILD_DATE "@BUILD_DATE@"
-#define BUILD_BUILDUSER "@BUILD_USER@"
+#define BUILD_BUILDUSER "Frugalware Linux"
 #define BUILD_ARCH "@BUILD_ARCH@"
 
 #endif /* _BUILD_H */
Index: src/preferences.cc
===================================================================
--- src/preferences.cc	(Revision 11299)
+++ src/preferences.cc	(Arbeitskopie)
@@ -43,7 +43,6 @@
 #ifdef HAVE_ALSA
 #  define ALSA_PCM_NEW_HW_PARAMS_API
 #  define ALSA_PCM_NEW_SW_PARAMS_API
-
 #  include <alsa/global.h>
 #  include <alsa/asoundlib.h>
 #  include <alsa/pcm_plugin.h>
@@ -109,7 +108,7 @@
         return (gbyte_f % (size / 1024.)).str();
       else
         return (mbyte_f % size).str();
-      */ 
+      */
     }
 
     struct AudioSystem
@@ -604,8 +603,8 @@
       m_state_err = Gdk::Pixbuf::create_from_file( build_filename( BMP_IMAGE_DIR_STOCK, "silk-exclamation.png") );
 
       /* version string */
-      static boost::format version_f ("<span size='small' color='#606060'>BMPx %s:%s-R%s (%s / %s)</span>");
-      std::string version = (version_f % PACKAGE_VERSION % RV_LAST_CHANGED_DATE % RV_REVISION % BUILD_DATE % BUILD_BUILDUSER).str ();
+      static boost::format version_f ("<span size='small' color='#606060'>BMPx %s Rev: %s ( %s )</span>");
+      std::string version = (version_f % PACKAGE_VERSION  % RV_REVISION % BUILD_BUILDUSER).str ();
       dynamic_cast<Label*> (m_ref_xml->get_widget ("l_version"))->set_markup (version);
 
       m_ref_xml->get_widget ("cbox_audio_system", m_cbox_audio_system);
