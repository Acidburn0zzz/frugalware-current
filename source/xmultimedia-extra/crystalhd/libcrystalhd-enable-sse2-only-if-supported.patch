Only in a/linux_lib/libcrystalhd: libcrystalhd_fwcmds.o
Only in a/linux_lib/libcrystalhd: libcrystalhd_fwdiag_if.o
Only in a/linux_lib/libcrystalhd: libcrystalhd_fwload_if.o
Only in a/linux_lib/libcrystalhd: libcrystalhd_if.o
diff -ur a/linux_lib/libcrystalhd/libcrystalhd_int_if.cpp b/linux_lib/libcrystalhd/libcrystalhd_int_if.cpp
--- a/linux_lib/libcrystalhd/libcrystalhd_int_if.cpp	2012-05-23 13:14:13.820224793 -0500
+++ b/linux_lib/libcrystalhd/libcrystalhd_int_if.cpp	2012-05-23 13:17:10.292218232 -0500
@@ -33,7 +33,9 @@
 #include "libcrystalhd_int_if.h"
 #include "libcrystalhd_fwcmds.h"
 
+#ifdef __SSE2__
 #include <emmintrin.h>
+#endif
 
 #define SV_MAX_LINE_SZ 128
 #define PCI_GLOBAL_CONTROL MISC2_GLOBAL_CTRL
@@ -1425,7 +1427,9 @@
 }
 
 // TODO: add sse2 detection
+#ifdef __SSE2__
 static bool gSSE2 = true; // most of the platforms will have it anyway:
+#endif
 // 64 bits: no test necessary
 // mac: no test necessary
 // linux/windows: we might have to do the test.
@@ -1433,6 +1437,7 @@
 static void fast_memcpy(uint8_t *dst, const uint8_t *src, uint32_t count)
 {
 	// tested
+#ifdef __SSE2__
 	if (gSSE2)
 	{
 		if (((((uintptr_t) dst) & 0xf) == 0) && ((((uintptr_t) src) & 0xf) == 0))
@@ -1462,6 +1467,7 @@
 			}
 		}
 	}
+#endif
 
 	while (count --)
 		*dst++ = *src++;
Only in a/linux_lib/libcrystalhd: libcrystalhd_int_if.o
Only in a/linux_lib/libcrystalhd: libcrystalhd_parser.o
Only in a/linux_lib/libcrystalhd: libcrystalhd_priv.o
Only in a/linux_lib/libcrystalhd: libcrystalhd.so
Only in a/linux_lib/libcrystalhd: libcrystalhd.so.3
Only in a/linux_lib/libcrystalhd: libcrystalhd.so.3.6
diff -ur a/linux_lib/libcrystalhd/Makefile b/linux_lib/libcrystalhd/Makefile
--- a/linux_lib/libcrystalhd/Makefile	2012-05-23 13:14:13.821224793 -0500
+++ b/linux_lib/libcrystalhd/Makefile	2012-05-23 13:14:21.221224519 -0500
@@ -24,7 +24,7 @@
 # -D_USE_SHMEM_
 
 CPPFLAGS += ${INCLUDES}
-CPPFLAGS += -O2 -Wall -fPIC -shared -fstrict-aliasing -msse2
+CPPFLAGS += -O2 -Wall -fPIC -shared -fstrict-aliasing
 LDFLAGS = -Wl,-soname,${BCLIB_SL} -pthread
 
 SRCFILES = 	libcrystalhd_if.cpp \
