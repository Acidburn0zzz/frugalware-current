diff --git a/configure.ac b/configure.ac
index e594952..99d3d4e 100644
--- a/configure.ac
+++ b/configure.ac
@@ -101,10 +101,10 @@ case "$host" in
 		MARCHFLAG="march"
 		;;
 	x86_64-*) AC_DEFINE_UNQUOTED([CARCH], ["x86_64"], [Architecture])
-		AC_DEFINE_UNQUOTED([CARCHFLAGS], ["k8"], [Architecture])
+		AC_DEFINE_UNQUOTED([CARCHFLAGS], ["x86-64"], [Architecture])
 		AC_DEFINE_UNQUOTED([MARCHFLAG], ["march"], [Architecture])
 		CARCH="x86_64"
-		CARCHFLAGS="k8"
+		CARCHFLAGS="x86-64"
 		MARCHFLAG="march"
 		;;
 	ia64-*) AC_DEFINE_UNQUOTED([CARCH], ["ia64"], [Architecture])
diff --git a/etc/makepkg.conf.in b/etc/makepkg.conf.in
index c2cbc5d..b7dad35 100644
--- a/etc/makepkg.conf.in
+++ b/etc/makepkg.conf.in
@@ -15,12 +15,10 @@ export CHOST="@CHOST@"
 
 # Pentium Pro/Pentium II/Pentium III+/Pentium 4/Athlon exclusive (binaries
 # will use the P6 instruction set and only run on P6+ systems)
-export CFLAGS="-@MARCHFLAG@=@CARCHFLAGS@ -O2 -pipe"
-export CXXFLAGS="-@MARCHFLAG@=@CARCHFLAGS@ -O2 -pipe"
-# Pentium Pro/Pentium II/Pentium III+/Pentium 4/Athlon optimized (but binaries
-# will run on any x86 system)
-#export CFLAGS="-mcpu=i686 -O2 -pipe"
-#export CXXFLAGS="-mcpu=i686 -O2 -pipe"
+# As of GCC 4.2 -mtune=generic can be used to generate code running well on
+# common x86 chips.
+export CFLAGS="-@MARCHFLAG@=@CARCHFLAGS@ -mtune=generic -O2 -pipe"
+export CXXFLAGS="-@MARCHFLAG@=@CARCHFLAGS@ -mtune=generic -O2 -pipe"
 
 # SMP Systems
 #export MAKEFLAGS="-j2"
diff --git a/scripts/makepkg b/scripts/makepkg
index 6fefcae..7623725 100755
--- a/scripts/makepkg
+++ b/scripts/makepkg
@@ -124,13 +124,51 @@ if [ -e /etc/frugalware-release ] && $ECHO $CHOST|grep -q linux-gnu; then
 fi
 
 # we need -fno-strict-aliasing for gcc 4.2*++
+_gccminver_generic="4.2"
 _gccver=`type -p gcc >/dev/null && gcc -dumpversion`
-if [ "${_gccver%%.?}" == "4.3" ]; then
+if [[ "${_gccver%%.?}" == "${_gccminver_generic}" ]] || [[ "${_gccver%%.?}" > "${_gccminver_generic}" ]]; then
         export CFLAGS="$CFLAGS -fno-strict-aliasing"
         export CXXFLAGS="$CXXFLAGS -fno-strict-aliasing"
 fi
 
 
+## another hack for syncpkgd almost , before 1.0 this should be removed
+_glibcver_generic="2.8"
+_glibcver=`ldd --version|head -n1 |sed 's/.*) //'`
+if [ -e /etc/frugalware-release ]; then
+	if [[ "${_glibcver} == ${_glibcver_generic}" ]] || [[ "${_glibcver}" > "${_glibcver_generic}" ]]; then
+		if [ "$CARCH" == "i686" ]; then
+			if ! $ECHO ${CFLAGS}|grep -q "mtune=generic"; then
+				export CFLAGS="$CFLAGS -mtune=generic"
+			fi
+			if ! $ECHO ${CXXFLAGS}|grep -q "mtune=generic"; then
+				export CXXFLAGS="$CXXFLAGS -mtune=generic"
+			fi
+		fi
+
+		if [ "$CARCH" == "x86_64" ]; then
+			## so test for k8 since when is there this system doesn't uses x86-64 generic
+			if $ECHO ${CFLAGS}|grep -q "march=k8"; then
+				CFLAGS=${CFLAGS/-march=k8}
+				export CFLAGS="-march=x86-64 -mtune=generic $CFLAGS"
+			fi
+			if $ECHO ${CXXFLAGS}|grep -q "march=k8"; then
+				CXXFLAGS=${CXXFLAGS/-march=k8}
+				export CXXFLAGS="-march=x86-64 -mtune=generic $CXXFLAGS"
+			fi
+		fi
+	fi
+fi
+
+## this has to stay here until we remove oldish gcc versions
+if [[ "${_gccver%%.?}" < "${_gccminver_generic}" ]]; then
+        # well we have gcc 3.3 and gcc 4.1 , these doesn't support -mtune=generic
+        # so kill generic for these
+        export CFLAGS="${CFLAGS/-mtune=generic}"
+        export CXXFLAGS="${CXXFLAGS/-mtune=generic}"
+fi
+
+
 INFAKEROOT=
 if [ "$1" = "-F" ]; then
 	INFAKEROOT=1
