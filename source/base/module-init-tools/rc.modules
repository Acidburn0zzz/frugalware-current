#!/bin/sh

# (c) 2003 Vajna Miklos <mamajom@axelero.hu>
# (c)      Patrick J. Volkerding, <volkerdi@slackware.com>
# (c) 2005 Mauras Olivier <tuxbubling@tiscali.fr>
#          sysconfig integration
# rc.modules for FrugalWare
# distributed under GPL License

. /etc/rc.d/rc.functions

MODPROBEBIN=/sbin/modprobe
MODCONFFILE=/etc/sysconfig/modules

# This file loads extra drivers manually into the Linux kernel.
# The modules will be looked for under /lib/modules/<kernel version number>
# On systems using KMOD this file will be mostly commented out, but is still
# useful for loading selected modules at boot time.
#
# Most Linux kernel modules will accept extra options such as IRQ or base
# address, or to set various modes (such as 10baseT or BNC, etc).  The Linux
# kernel source is the best place to look for extra documentation for the
# various modules.  This can be found under /usr/src/linux/Documentation if
# you've the installed the kernel-source package.
#
# NOTE:  This may not be a complete list of modules.  If you don't see what
# you're looking for, look around in /lib/modules/2.x.x/ for an appropriate
# module.  Also, if any problems arise loading or using these modules, try
# compiling and installing a custom kernel that contains the support instead.
# That always works. ;^)

if [ "$1" = "start" ]; then
	# update module dependencies
	kernelver=`uname -r`
	# if /usr is mounted and we have 'find', we can try to take a shortcut:
	if [ -x /usr/bin/find -a -e /lib/modules/$kernelver/modules.dep \
		-a /lib/modules/$kernelver/modules.dep \
		-nt /etc/modules.conf ]; then
		news="`/usr/bin/find /lib/modules/$kernelver -type f -newer /lib/modules/$kernelver/modules.dep`"
		# only rebuild dependencies if new module(s) are found:
		if ! [ "" = "$news" ]; then
			start "$updatemoddeps"
			/sbin/depmod -a
			ok $?
		else
			start "$noupdate"
			ok $?
		fi
	else
		# we don't have find, or there is no existing modules.dep,
		# or it is out of date.
		start "$updatemoddeps"
		/sbin/depmod -A
		ok $?
	fi

	## Put global modules to load. 
	## (eg.: Hardcoded modules that needs to load at startup)
	## At here you can do anything, run any commands, example iptables or any other base
	## commands like in the older rc.modules file.
	if grep -q quota /etc/fstab ; then
	    $MODPROBEBIN quota_v2
	fi

	## Starting reading conf file and loading modules
	if [ -r $MODCONFFILE ]; then
	start "$modprobe"
		Firstcount=$(wc -l < "$MODCONFFILE")
		## Fix line count
		NUM=$(expr $Firstcount + 1)

		for module in $(seq $NUM)
		do
			read module
	
			## Removing bad lines
			if [ "$module" != "" -a "$(echo $module | grep -v '#')" ];then
	
  			## Then check if module has an argument
  			if	echo $module | grep '"' > /dev/null; then
  				## If yes:  			
  				arg=$(echo $module | cut -f2 -d '"')
  				module=$(echo $module | cut -f1 -d '"')
  				$MODPROBEBIN $module $arg
  			else
  				## If not simply modprobe it
  				$MODPROBEBIN $module
  			fi
  			fi

		done < $MODCONFFILE
	
		ok $?
	else
		start "$nomodprobe"
		return 1
		ok $?
	fi

fi
