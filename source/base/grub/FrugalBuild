# Compiling time: 0.29 SBU
# Maintainer: VMiklos <vmiklos@frugalware.org>

pkgname=grub
pkgver=0.97
pkgrel=16
pkgdesc="The GNU GRand Unified Bootloader"
url="http://www.gnu.org/software/grub/"
depends=('texinfo')
[ "$CARCH" == "i686" ] && depends=(${depends[@]} 'ncurses' 'mktemp')
#makedepends=('gfxboot>=3.3.22' 'perl-html-parser' 'cpio')
[ "$CARCH" == "x86_64" ] && makedepends=(${makedepends[@]} 'ncurses' 'mktemp')
groups=('base')
archs=('i686' 'x86_64')
up2date="lynx -dump ftp://alpha.gnu.org/gnu/grub/|grep 0.9.*tar.gz$|Flasttar"
source=(ftp://alpha.gnu.org/gnu/grub/grub-$pkgver.tar.gz \
	00-$pkgname-$pkgver-gfxboot.patch \
	02-$pkgname-$pkgver-debugcdboot.patch \
	03-$pkgname-$pkgver-gcc4.patch \
	04-grub-0.97-x86_64.patch \
	05-grub-0.97-initrdaddr.diff)

# Original patch was for Debian at:
# http://neverborn.org/files/grub-gfxboot/source/grub-gfxboot/ and
# http://www.morphix.org/debian/source/grub-gfxboot/

build()
{
	# see http://savannah.gnu.org/bugs/?func=detailitem&item_id=14874
	CFLAGS=${CFLAGS/O?/O2}
	# note that this should NOT build on a real x86_64 box
	[ "$CARCH" == "x86_64" ] && CFLAGS="$CFLAGS -static"
	Fpatchall

	# netboot
	Fmake --libdir=/lib --datadir=/usr/lib/grub --exec-prefix=/ \
		--disable-auto-linux-mem-opt --enable-diskless \
                --enable-{3c{5{03,07,09,29,95},90x},cs89x0,davicom,depca,eepro{,100}} \
                --enable-{epic100,exos205,ni5210,lance,ne2100,ni{50,65}10,natsemi} \
                --enable-{ne,ns8390,wd,otulip,rtl8139,sis900,sk-g16,smc9000,tiara} \
                --enable-{tulip,via-rhine,w89c840}
	Ffilerel stage2/stage2 /usr/lib/grub/i386-pc/stage2.netboot
	Ffilerel stage2/{nbgrub,pxegrub} /usr/lib/grub/i386-pc/
	make clean

	# the normal build
	Fmake --bindir=/bin --sbindir=/sbin
	Fmakeinstall

	# message
#	cp -a /usr/share/gfxboot/themes/frugalware ./
#	cd frugalware
#	make BINDIR=/usr/sbin/
#	cd boot
#	Ffilerel /boot/grub/message
}

sha1sums=('2580626c4579bd99336d3af4482c346c95dac4fb'\
          'ffe895e10705633228caa903cd5ec8f0e9b4f416'\
          'ea8fcfc066d2ada5ebccfa3f6c5fc5ffc0dd9225'\
          '220d1b55f6573b026f7f6cbc583b8aeaede20878'\
          '157b81dbad3576536b08642242accfa1aeb093a9'\
          'adbb4685c98797ffb4dc83561ec75698991dddbd')
# optimization OK

