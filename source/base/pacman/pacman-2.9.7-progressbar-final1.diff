diff -Naur pacman-2.9.7.orig/scripts/makepkg pacman-2.9.7/scripts/makepkg
--- pacman-2.9.7.orig/scripts/makepkg	2005-10-28 01:45:33.434320750 +0200
+++ pacman-2.9.7/scripts/makepkg	2005-10-28 01:45:48.715275750 +0200
@@ -1092,6 +1092,7 @@
 echo "builddate = $builddate" >>.PKGINFO
 echo "packager = $packager" >>.PKGINFO
 echo "size = $size" >>.PKGINFO
+echo "usize = $size" >>.PKGINFO
 if [ "$CARCH" != "" ]; then
 	echo "arch = $CARCH" >>.PKGINFO
 fi
diff -Naur pacman-2.9.7.orig/src/db.c pacman-2.9.7/src/db.c
--- pacman-2.9.7.orig/src/db.c	2005-10-28 01:45:33.434320750 +0200
+++ pacman-2.9.7/src/db.c	2005-10-28 01:45:48.715275750 +0200
@@ -377,6 +377,14 @@
 				}
 				trim(tmp);
 				info->size = atol(tmp);
+                        } else if(!strcmp(line, "%USIZE%")) {
+				char tmp[32];
+				if(fgets(tmp, sizeof(tmp), fp) == NULL) {
+					FREEPKG(info);
+					return(NULL);
+				}
+				trim(tmp);
+				info->usize = (unsigned long)atol(tmp);
 			} else if(!strcmp(line, "%LICENSE%")) {
 				while(fgets(line, 512, fp) && strlen(trim(line))) {
 					char *s = strdup(line);
@@ -546,6 +554,8 @@
 		fprintf(fp, "%s\n\n", info->packager);
 		fputs("%SIZE%\n", fp);
 		fprintf(fp, "%ld\n\n", info->size);
+		fputs("%USIZE%\n", fp);
+		fprintf(fp, "%ld\n\n", info->usize);
 		fputs("%REASON%\n", fp);
 		fprintf(fp, "%d\n\n", info->reason);
 		fclose(fp);
diff -Naur pacman-2.9.7.orig/src/package.c pacman-2.9.7/src/package.c
--- pacman-2.9.7.orig/src/package.c	2005-10-28 01:45:33.434320750 +0200
+++ pacman-2.9.7/src/package.c	2005-10-28 01:45:48.715275750 +0200
@@ -220,6 +220,10 @@
 				char tmp[32];
 				strncpy(tmp, ptr, sizeof(tmp));
 				info->size = atol(tmp);
+			} else if(!strcmp(key, "USIZE")) {
+				char tmp[32];
+				strncpy(tmp, ptr, sizeof(tmp));
+				info->usize = atol(tmp);
 			} else if(!strcmp(key, "LICENSE")) {
 				info->license = list_add(info->license, strdup(ptr));
 			} else if(!strcmp(key, "DEPEND")) {
@@ -264,6 +268,7 @@
 	pkg->sha1sum[0]     = '\0';
 	pkg->arch[0]        = '\0';
 	pkg->size           = 0;
+	pkg->usize           = 0;
 	pkg->scriptlet      = 0;
 	pkg->force          = 0;
 	pkg->reason         = REASON_EXPLICIT;
@@ -423,6 +428,8 @@
 	list_display("Replaces          :", pm);
 	FREELIST(pm);
 	printf("Size (compressed) : %ld\n", info->size);
+	if (info->usize != NULL)
+	    printf("Size (uncompressed) : %ld\n", info->usize);
 	printf("Description       : ");
 	indentprint(info->desc, 20);
 	if (info->md5sum[0] != '\0' && info->md5sum != NULL) {
diff -Naur pacman-2.9.7.orig/src/package.h pacman-2.9.7/src/package.h
--- pacman-2.9.7.orig/src/package.h	2005-10-28 01:45:33.434320750 +0200
+++ pacman-2.9.7/src/package.h	2005-10-28 01:45:48.715275750 +0200
@@ -57,6 +57,7 @@
 	char sha1sum[41];
 	char arch[32];
 	unsigned long size;
+	unsigned long usize;
 	unsigned short scriptlet;
 	unsigned short force;
 	time_t date;
diff -Naur pacman-2.9.7.orig/src/pacman.c pacman-2.9.7/src/pacman.c
--- pacman-2.9.7.orig/src/pacman.c	2005-10-28 01:45:33.434320750 +0200
+++ pacman-2.9.7/src/pacman.c	2005-10-28 01:45:48.719276000 +0200
@@ -121,6 +121,31 @@
 int maxcols = 80;
 int neednl = 0; /* for cleaner message output */
 
+static int disp_progress(char *pkgname, int percent, int howmany, int remain) {
+	int i, hash;
+    
+	if (percent > 100) { return (1); }
+	hash = percent/6.25;
+
+	printf("(%d/%d) %s", remain, howmany, pkgname);
+	if (strlen(pkgname)<35)
+	    for (i=35-strlen(pkgname)-1; i>0; i--)
+		printf(" ");
+
+	printf("[");
+	for (i = 16; i > 0; i--) {
+	    if (i >= 16 - hash)
+		printf("#");
+	    else
+		printf("-");
+	}
+	printf("] %3d%%\r", percent);
+	fflush(stdout);
+/*	sleep(1); */ /* Just for testing */
+	return(0);
+}
+
+
 int main(int argc, char *argv[])
 {
 	int ret = 0;
@@ -884,9 +909,9 @@
 							FREELIST(l);
 						    }
 						    if(k != NULL) {
+							PMList *l;
 							vprint(":: %s is provided by :\n", targ);
 							if(pmo_verbose) list_display("   ", k);
-							PMList *l;
 							l = k;
 							vprint(":: Using the first provider - %s\n", strdup((char*)l->data));
 					    		targets = list_add(targets, strdup((char*)l->data));
@@ -895,7 +920,7 @@
 							fprintf(stderr, "nobody provides %s and not found in sync db\n", targ);
 							allgood = 0;
 						    }
-						} // treename else end
+						} /* treename else end */
 					} else {
 					    fprintf(stderr, "%s: not present in \"%s\" repository\n", targ, treename);
 					    allgood = 0;
@@ -1555,12 +1580,14 @@
 
 int pacman_add(pacdb_t *db, PMList *targets, PMList *dependonly)
 {
-	int i, ret = 0, errors = 0;
+	int i, ret = 0, errors = 0, needdisp = 0;
+	double percent;
 	register struct archive *archive;
 	struct archive_entry *entry;
 	char expath[PATH_MAX];
 	char pm_install[PATH_MAX];
 	char rm_fname[PATH_MAX];
+	char *what;
 	pkginfo_t *info = NULL;
 	struct stat buf;
 	PMList *targ, *lp, *j, *k, *remove_list;
@@ -1850,7 +1877,7 @@
 			if(is_pkgin(info, pm_packages)) {
 				int retcode;
 
-				printf("upgrading %s... ", info->name);
+				asprintf(&what, "upgrading %s ", info->name);
 				neednl = 1;
 
 				/* we'll need the full record for backup checks later */
@@ -1885,7 +1912,7 @@
 		}
 		
 		if(!pmo_upgrade) {
-			printf("installing %s... ", info->name);
+			asprintf(&what, "installing %s ", info->name);
 			neednl = 1;
 			/* pre_install scriptlet */
 			if(info->scriptlet) {
@@ -1917,6 +1944,12 @@
 			char pathname[PATH_MAX];
 			strncpy(pathname, archive_entry_pathname (entry), PATH_MAX);
 
+		        info->usize = info->size; /* Progress bar thing. Bad hack for usize.. */
+		        percent = (double)archive_position_uncompressed(archive) / info->usize;
+			if (needdisp == 0) {
+		    	    needdisp = disp_progress(what, (int)(percent * 100), list_count(targets), (list_count(targets) - list_count(targ) +1));
+			}
+
 			if(!strcmp(pathname, ".PKGINFO") || !strcmp(pathname, ".FILELIST")) {
 				archive_read_data_skip (archive);
 				continue;
@@ -2107,7 +2140,7 @@
 				}
 				archive_entry_set_pathname (entry, expath);
 				if (archive_read_extract (archive, entry, ARCHIVE_EXTRACT_FLAGS) != ARCHIVE_OK) {
-					printf ("%d\n",ARCHIVE_OK);
+					vprint("%d\n", ARCHIVE_OK);
 					logaction(stderr, "could not extract %s: %s", expath, strerror(errno));
 					errors++;
 				}
@@ -2137,7 +2170,6 @@
 			}
 		}
 		archive_read_finish (archive);
-		/* free (archive); */
 		
 		if(errors) {
 			ret = 1;
@@ -2223,7 +2255,12 @@
 				db_write(db, depinfo, INFRQ_DEPENDS);
 				freepkg(depinfo);
 			}
-			printf("done.\n"); fflush(stdout);
+
+                        disp_progress(what, 100, list_count(targets), (list_count(targets) - list_count(targ) +1)); /* Put progressbar to 100% */
+                        needdisp = 0;
+			printf("\n");
+			fflush(stdout);
+			FREE(what);
 
 			/* run the post-install/upgrade script if it exists  */
 			snprintf(pm_install, PATH_MAX, "%s%s/%s/%s-%s/install", pmo_root, pmo_dbpath, db->treename, info->name, info->version);
@@ -2805,12 +2842,12 @@
 					printf("%s %s\n", info->name, info->version);
 				}
 			} else if(pmo_q_mypkgs) {
+				int match = 0;
 				info = db_scan(db, package, INFRQ_DESC | INFRQ_DEPENDS);
 				if(info == NULL) {
 					fprintf(stderr, "Package \"%s\" was not found.\n", package);
 					return(2);
 				}
-				int match = 0;
 				for(i = databases; i; i = i->next) {
 					dbsync_t *dbs = (dbsync_t*)i->data;
 					for(j = dbs->pkgcache; j; j = j->next) {
diff -Naur pacman-2.9.7.orig/src/pacsync.c pacman-2.9.7/src/pacsync.c
--- pacman-2.9.7.orig/src/pacsync.c	2005-10-28 01:45:33.434320750 +0200
+++ pacman-2.9.7/src/pacsync.c	2005-10-28 01:46:06.476385750 +0200
@@ -430,7 +430,7 @@
 						strncpy(out, server->path, 33);
 						printf("%s", out);
 						for(j = strlen(out); j < maxcols-64; j++) {
-							printf(" ");
+							printf("-");
 						}
 						fputs("] 100%    LOCAL ", stdout);
 					} else {
@@ -538,7 +538,7 @@
 				}
 			}
 		} else {
-			(i < cur) ? printf("#") : printf(" ");
+			(i < cur) ? printf("#") : printf("-");
 		}
 	}
 	if(rate > 1000) {
