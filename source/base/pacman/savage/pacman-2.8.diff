diff -Naur pacman-2.8.orig/ChangeLog pacman-2.8/ChangeLog
--- pacman-2.8.orig/ChangeLog	2004-07-03 06:25:47.000000000 +0200
+++ pacman-2.8/ChangeLog	2004-07-05 17:12:43.000000000 +0200
@@ -84,7 +84,7 @@
               - Added md5sum integrity checking to packages in --sync
                 mode (Aurelien Foret)
               - Memory leak fixes (Aurelien Foret)
-              - Added CARCH variable to makepkg.conf for use in PKGBUILDs
+              - Added CARCH variable to makepkg.conf for use in FrugalBuilds
               - Added LogFile option for direct-to-file logging
               - Added -Qii handling to show modified config files
               - Allow --sync targets to specify an explicit repository to
@@ -190,7 +190,7 @@
 1.23          - Added install/upgrade/remove scripting control
 1.22          - Some manpage typo fixes
               - Added --root switch to pacsync
-              - Added --help and ability to specify a PKGBUILD to makepkg
+              - Added --help and ability to specify a FrugalBuild to makepkg
               - Switched default downloader to snarf
 1.21          - Added better backup control -- upgrade/add and remove
                 do different things with the -n switch
diff -Naur pacman-2.8.orig/doc/makepkg.8.in pacman-2.8/doc/makepkg.8.in
--- pacman-2.8.orig/doc/makepkg.8.in	2004-07-03 06:25:47.000000000 +0200
+++ pacman-2.8/doc/makepkg.8.in	2004-07-05 17:12:43.000000000 +0200
@@ -17,17 +17,17 @@
 entire build tree.  See \fBmakeworld --help\fP for syntax.
 .SH BUILD PROCESS (or How To Build Your Own Packages)
 Start in an isolated directory (ie, it's not used for anything other
-than building this package).  The build script should be called PKGBUILD
+than building this package).  The build script should be called FrugalBuild
 and it should bear resemblance to the example below.
 
 \fBNOTE:\fP If you have a local copy of the Arch Build System (ABS) tree
-on your computer, you can copy the PKGBUILD.proto file to your new package
+on your computer, you can copy the FrugalBuild.proto file to your new package
 build directory and edit it from there.  To acquire/sync the ABS tree, use
 the \fBabs\fP script included with pacman/makepkg.
 
 .TP
 .TP
-.SH PKGBUILD Example:
+.SH FrugalBuild Example:
 .RS
 .nf
 pkgname=modutils
@@ -57,9 +57,9 @@
 
 As you can see, the setup is fairly simple.  The first three lines define
 the package name and version info.  They also define the final package name
-which will be of the form \fI$pkgname-$pkgver-$pkgrel.pkg.tar.gz\fP.  The fourth
+which will be of the form \fI$pkgname-$pkgver-$pkgrel.fpm\fP.  The fourth
 line provides a brief description of the package.  These four lines should
-be present in every PKGBUILD script.
+be present in every FrugalBuild script.
 
 The line with \fIbackup=\fP specifies files that should be treated specially
 when removing or upgrading packages.  See \fBHANDLING CONFIG FILES\fP in
@@ -75,7 +75,7 @@
 begins.  The \fImd5sums\fP array provides md5sums for each of these files.  These
 are used to validate the integrity of the source files.
 
-Once your PKGBUILD is created, you can run \fImakepkg\fP from the build directory.
+Once your FrugalBuild is created, you can run \fImakepkg\fP from the build directory.
 makepkg will then check dependencies and look for the source files required to
 build.  If some are missing it will attempt to download them, provided there is
 a fully-qualified URL in the \fIsource\fP array.
@@ -107,11 +107,11 @@
 will remove some directories (as per Arch Linux package guidelines; if you use
 this elsewhere, feel free to change it) like /usr/doc and /usr/info.  It will
 then strip debugging info from libraries and binaries and generate a meta-info
-file.  Finally, it will compress everything into a .pkg.tar.gz file and leave it
+file.  Finally, it will compress everything into a .fpm file and leave it
 in the directory you ran \fBmakepkg\fP from.
 
 At this point you should have a package file in the current directory, named
-something like name-version-release.pkg.tar.gz.  Done!
+something like name-version-release.fpm.  Done!
 
 .SH Install/Upgrade/Remove Scripting
 Pacman has the ability to store and execute a package-specific script when it
@@ -145,7 +145,7 @@
 
 .RE
 To use this feature, just create a file (eg, pkgname.install) and put it in
-the same directory as the PKGBUILD script.  Then use the \fIinstall\fP directive:
+the same directory as the FrugalBuild script.  Then use the \fIinstall\fP directive:
 .RS
 .nf
 install=pkgname.install
@@ -217,7 +217,7 @@
 
 This template is also available in your ABS tree (/var/abs/install.proto).
 
-.SH PKGBUILD Directives
+.SH FrugalBuild Directives
 .TP
 .B pkgname
 The name of the package.  This has be a unix-friendly name as it will be
@@ -253,14 +253,14 @@
 .TP
 .B install
 Specifies a special install script that is to be included in the package.
-This file should reside in the same directory as the PKGBUILD, and will be
+This file should reside in the same directory as the FrugalBuild, and will be
 copied into the package by makepkg.  It does not need to be included in the
 \fIsource\fP array.  (eg, install=modutils.install)
 
 .TP
 .B source \fI(array)\fP 
 The \fIsource\fP line is an array of source files required to build the
-package.  Source files must reside in the same directory as the PKGBUILD
+package.  Source files must reside in the same directory as the FrugalBuild
 file, unless they have a fully-qualified URL.  Then if the source file
 does not already exist in /var/cache/pacman/src, the file is downloaded
 by wget.
@@ -270,8 +270,8 @@
 If this field is present, it should contain an MD5 hash for every source file
 specified in the \fIsource\fP array (in the same order).  makepkg will use
 this to verify source file integrity during subsequent builds.  To easily
-generate md5sums, first build using the PKGBUILD then run
-\fBmakepkg -g >>PKGBILD\fP.  Then you can edit the PKGBUILD and move the
+generate md5sums, first build using the FrugalBuild then run
+\fBmakepkg -g >>PKGBILD\fP.  Then you can edit the FrugalBuild and move the
 \fImd5sums\fP line from the bottom to an appropriate location.
 
 .TP
@@ -295,7 +295,7 @@
 package name.  They can also include a version requirement of the form
 \fBname<>version\fP, where <> is one of these three comparisons: \fB>=\fP
 (greater than equal to), \fB<=\fP (less than or equal to), or \fB=\fP (equal to).
-See the PKGBUILD example above for an example of the \fIdepends\fP directive.
+See the FrugalBuild example above for an example of the \fIdepends\fP directive.
 
 .TP
 .B makedepends \fI(array)\fP
@@ -326,7 +326,7 @@
 .TP
 .B "\-b, \-\-builddeps"
 Build missing dependencies from source.  When makepkg finds missing build-time or
-run-time dependencies, it will look for the dependencies' PKGBUILD files under
+run-time dependencies, it will look for the dependencies' FrugalBuild files under
 $ABSROOT (set in your /etc/makepkg.conf).  If it finds them it will
 run another copy of makepkg to build and install the missing dependencies.
 The child makepkg calls will be made with the \fB-b\fP and \fB-i\fP options.
@@ -343,14 +343,14 @@
 process if all of the dependencies aren't installed.
 .TP
 .B "\-f, \-\-force"
-\fBmakepkg\fP will not build a package if a \fIpkgname-pkgver-pkgrel.pkg.tar.gz\fP
+\fBmakepkg\fP will not build a package if a \fIpkgname-pkgver-pkgrel.fpm\fP
 file already exists in the build directory.  You can override this behaviour with
 the \fB--force\fP switch.
 .TP
 .B "\-g, \-\-genmd5"
 Download all source files (if required) and use \fImd5sum\fP to generate md5 hashes
-for each of them.  You can then redirect the output into your PKGBUILD for source
-validation (makepkg -g >>PKGBUILD).
+for each of them.  You can then redirect the output into your FrugalBuild for source
+validation (makepkg -g >>FrugalBuild).
 .TP
 .B "\-h, \-\-help"
 Output syntax and commandline options.
@@ -369,7 +369,7 @@
 Do not strip binaries and libraries.
 .TP
 .B "\-p <buildscript>"
-Read the package script \fI<buildscript>\fP instead of the default (\fIPKGBUILD\fP).
+Read the package script \fI<buildscript>\fP instead of the default (\fIFrugalBuild\fP).
 .TP
 .B "\-r, \-\-rmdeps"
 Upon successful build, remove any dependencies installed by makepkg/pacman during
diff -Naur pacman-2.8.orig/doc/pacman.8.in pacman-2.8/doc/pacman.8.in
--- pacman-2.8.orig/doc/pacman.8.in	2004-07-03 06:25:47.000000000 +0200
+++ pacman-2.8/doc/pacman.8.in	2004-07-05 17:12:43.000000000 +0200
@@ -266,19 +266,19 @@
 want to use a local directory, you can specify the full path with a 'file://' prefix, as
 shown above.
 .SH USING YOUR OWN REPOSITORY
-Let's say you have a bunch of custom packages in \fI/home/pkgs\fP and their respective PKGBUILD
+Let's say you have a bunch of custom packages in \fI/home/pkgs\fP and their respective FrugalBuild
 files are all in \fI/var/abs/local\fP.  All you need to do is generate a compressed package database
 in the \fI/home/pkgs\fP directory so pacman can find it when run with --refresh.
 
 .RS
 .nf
-# gensync /var/abs/local /home/pkgs/custom.db.tar.gz
+# gensync /var/abs/local /home/pkgs/custom.fdb
 .fi
 .RE
 
-The above command will read all PKGBUILD files in /var/abs/local and generate a compressed
-database called /home/pkgs/custom.db.tar.gz.  Note that the database must be of the form
-\fI{treename}.db.tar.gz\fP, where {treename} is the name of the section defined in the
+The above command will read all FrugalBuild files in /var/abs/local and generate a compressed
+database called /home/pkgs/custom.fdb.  Note that the database must be of the form
+\fI{treename}.fdb\fP, where {treename} is the name of the section defined in the
 configuration file.
 That's it!  Now configure your \fIcustom\fP section in the configuration file as shown in the
 config example above.  Pacman will now use your package repository.  If you add new packages to
diff -Naur pacman-2.8.orig/etc/makepkg.conf pacman-2.8/etc/makepkg.conf
--- pacman-2.8.orig/etc/makepkg.conf	2004-04-28 03:41:36.000000000 +0200
+++ pacman-2.8/etc/makepkg.conf	2004-07-05 17:12:25.000000000 +0200
@@ -12,12 +12,12 @@
 
 # Pentium Pro/Pentium II/Pentium III+/Pentium 4/Athlon exclusive (binaries
 # will use the P6 instruction set and only run on P6+ systems)
-export CFLAGS="-march=i686 -O2 -pipe"
-export CXXFLAGS="-march=i686 -O2 -pipe"
+#export CFLAGS="-march=i686 -O2 -pipe"
+#export CXXFLAGS="-march=i686 -O2 -pipe"
 # Pentium Pro/Pentium II/Pentium III+/Pentium 4/Athlon optimized (but binaries
 # will run on any x86 system)
-#export CFLAGS="-mcpu=i686 -O2 -pipe"
-#export CXXFLAGS="-mcpu=i686 -O2 -pipe"
+export CFLAGS="-mtune=i686 -O2 -pipe"
+export CXXFLAGS="-mtune=i686 -O2 -pipe"
 
 # SMP Systems
 #export MAKEFLAGS="-j 2"
@@ -26,11 +26,11 @@
 export USE_FAKEROOT="y"
 
 # Enable colorized output messages
-export USE_COLOR="n"
+export USE_COLOR="y"
 
 # Specify a fixed directory where all packages will be placed
 #export PKGDEST=/home/packages
 
 # If you want your name to show up in the packages you build, set this.
-#export PACKAGER="John Doe <john@doe.com>"
+export PACKAGER="FrugalWare <mamajom@axelero.hu>"
 
diff -Naur pacman-2.8.orig/scripts/gensync pacman-2.8/scripts/gensync
--- pacman-2.8.orig/scripts/gensync	2004-07-03 06:25:47.000000000 +0200
+++ pacman-2.8/scripts/gensync	2004-07-05 17:15:28.000000000 +0200
@@ -26,7 +26,7 @@
   echo "gensync $myver"
   echo "usage: $0 <root> <destfile> [package_directory]"
 	echo
-	echo "gensync will generate a sync database by reading all PKGBUILD files"
+	echo "gensync will generate a sync database by reading all FrugalBuild files"
 	echo "from <root>.  gensync builds the database in a temporary directory"
 	echo "and then compresses it to <destfile>."
 	echo
@@ -34,12 +34,12 @@
 	echo "alternate [package_directory] is specified."
 	echo
 	echo "note: The <destfile> name is important.  It must be of the form"
-	echo "      {treename}.db.tar.gz where {treename} is the name of the custom"
+	echo "      {treename}.fdb where {treename} is the name of the custom"
 	echo "      package repository you configured in /etc/pacman.conf.  The"
 	echo "      generated database must reside in the same directory as your"
 	echo "      custom packages (also configured in /etc/pacman.conf)"
 	echo
-	echo "example:  gensync /var/abs/local /home/mypkgs/custom.db.tar.gz"
+	echo "example:  gensync /var/abs/local /home/mypkgs/custom.fdb"
 	echo
   echo
   exit 0
@@ -47,11 +47,13 @@
 
 get_md5checksum()
 {
-	source $1 || return 1
+	cat $1 |grep -v 'up2date=`' >/tmp/.FrugalBuild
+	source /tmp/.FrugalBuild || return 1
+	rm /tmp/.FrugalBuild
 	if [ "$pkgdir" != "" ]; then
-		pkgfile="$pkgdir/$pkgname-$pkgver-$pkgrel.pkg.tar.gz"
+		pkgfile="$pkgdir/$pkgname-$pkgver-$pkgrel.fpm"
 	else
-		pkgfile="$destdir/$pkgname-$pkgver-$pkgrel.pkg.tar.gz"
+		pkgfile="$destdir/$pkgname-$pkgver-$pkgrel.fpm"
 	fi
 	if [ -f $pkgfile ]; then
 		md5line=`md5sum $pkgfile`
@@ -65,7 +67,9 @@
 {
 	unset pkgname pkgver pkgrel pkgdesc force
 	unset groups replaces provides depends conflicts
-	source $1 || return 1
+	cat $1 |grep -v 'up2date=`' >/tmp/.FrugalBuild
+	source /tmp/.FrugalBuild || return 1
+	rm /tmp/.FrugalBuild
 	cd $gstmpdir
 	mkdir $pkgname-$pkgver-$pkgrel
 	cd $pkgname-$pkgver-$pkgrel
@@ -157,7 +161,7 @@
 
 echo "gensync: building database entries, generating md5sums..." >&2
 cd `dirname $2`
-for file in `find $rootdir/* -name PKGBUILD`; do
+for file in `find $rootdir/* -name FrugalBuild`; do
 	pkgmd5sum=`get_md5checksum $file $pkgdir`
 	if [ -z $pkgmd5sum ]; then
 		echo "gensync: error generating checksum for $file" >&2
diff -Naur pacman-2.8.orig/scripts/makepkg pacman-2.8/scripts/makepkg
--- pacman-2.8.orig/scripts/makepkg	2004-07-03 06:25:47.000000000 +0200
+++ pacman-2.8/scripts/makepkg	2004-07-05 17:14:39.000000000 +0200
@@ -139,7 +139,7 @@
 				fi
 				success=0
 				for pkgdir in $candidates; do
-					if [ -f $pkgdir/PKGBUILD ]; then
+					if [ -f $pkgdir/FrugalBuild ]; then
 						cd $pkgdir
 						if [ "$RMDEPS" = "1" ]; then
 							makepkg -i -c -b -r -w $PKGDEST
@@ -187,12 +187,12 @@
 	echo "  -j <jobs>        Set MAKEFLAGS to \"-j<jobs>\" before building"
 	echo "  -m, --nocolor    Disable colorized output messages"
 	echo "  -n, --nostrip    Do not strip binaries/libraries"
-	echo "  -p <buildscript> Use an alternate build script (instead of PKGBUILD)"
+	echo "  -p <buildscript> Use an alternate build script (instead of FrugalBuild)"
 	echo "  -r, --rmdeps     Remove installed dependencies after a successful build"
 	echo "  -s, --syncdeps   Install missing dependencies with pacman"
 	echo "  -w <destdir>     Write package to <destdir> instead of the working dir"
 	echo
-	echo "  if -p is not specified, makepkg will look for a PKGBUILD"
+	echo "  if -p is not specified, makepkg will look for a FrugalBuild"
 	echo "  file in the current directory."
 	echo
 }
@@ -210,7 +210,7 @@
 NOEXTRACT=0
 NOSTRIP=0
 RMDEPS=0
-BUILDSCRIPT="./PKGBUILD"
+BUILDSCRIPT="./FrugalBuild"
 
 ARGLIST=$@
 
@@ -298,6 +298,7 @@
 
 unset pkgname pkgver pkgrel pkgdesc url license groups provides md5sums force
 unset replaces depends conflicts backup source install build makedepends
+unset LC_ALL LANG
 umask 0022
 
 if [ ! -f $BUILDSCRIPT ]; then
@@ -317,10 +318,10 @@
 	exit 1
 fi
 
-if [ -f $PKGDEST/${pkgname}-${pkgver}-${pkgrel}.pkg.tar.gz -a "$FORCE" = "0" -a "$GENMD5" = "0" ]; then
+if [ -f $PKGDEST/${pkgname}-${pkgver}-${pkgrel}.fpm -a "$FORCE" = "0" -a "$GENMD5" = "0" ]; then
 	if [ "$INSTALL" = "1" ]; then
 		warning "a package has already been built, installing existing package."
-		pacman --upgrade $PKGDEST/${pkgname}-${pkgver}-${pkgrel}.pkg.tar.gz
+		pacman --upgrade $PKGDEST/${pkgname}-${pkgver}-${pkgrel}.fpm
 		exit $?
 	else
 		error "a package has already been built.  (use -f to overwrite)"
@@ -377,6 +378,28 @@
 
 cd $startdir
 
+# Version checking
+if [ "x$up2date" == "x" ]; then
+	warning "Version checking informations are missing. Cannot check for newer version."
+else
+	msg "Checking for newer version..."
+	errors=0
+	if [ "$pkgver" != "$up2date" ]; then
+		echo "   FAILED"
+		if [ `type -p lynx` ]; then
+			errors=1
+		else
+	    		warning "The lynx program is missing.  Cannot check for newer version!"
+		fi
+	elif [ "$pkgver" == "$up2date" ]; then
+	        echo "    Passed"
+	fi
+	if [ $errors -gt 0 ]; then
+		error "Newer version available! ($pkgver < $up2date)"
+		exit 1
+	fi
+fi
+
 # retrieve sources
 msg "Retrieving Sources..."
 mkdir -p src
@@ -656,9 +679,9 @@
 msg "Compressing package..."
 cd $startdir/pkg
 if [ -f $startdir/pkg/.INSTALL ]; then
-	cmd="tar czvf $PKGDEST/$pkgname-$pkgver-$pkgrel.pkg.tar.gz .PKGINFO .FILELIST .INSTALL *"
+	cmd="tar czvf $PKGDEST/$pkgname-$pkgver-$pkgrel.fpm .PKGINFO .FILELIST .INSTALL *"
 else
-	cmd="tar czvf $PKGDEST/$pkgname-$pkgver-$pkgrel.pkg.tar.gz .PKGINFO .FILELIST *"
+	cmd="tar czvf $PKGDEST/$pkgname-$pkgver-$pkgrel.fpm .PKGINFO .FILELIST *"
 fi
 $cmd | sort >../filelist
 
@@ -677,7 +700,7 @@
 
 if [ "$INSTALL" = "1" -a "`id -u`" = "0" -a "$INFAKEROOT" != "1" ]; then
 	msg "Running pacman --upgrade..."
-	pacman --upgrade $PKGDEST/${pkgname}-${pkgver}-${pkgrel}.pkg.tar.gz
+	pacman --upgrade $PKGDEST/${pkgname}-${pkgver}-${pkgrel}.fpm
 	exit $?
 fi
 
diff -Naur pacman-2.8.orig/scripts/makeworld pacman-2.8/scripts/makeworld
--- pacman-2.8.orig/scripts/makeworld	2004-07-03 06:25:47.000000000 +0200
+++ pacman-2.8/scripts/makeworld	2004-07-05 17:12:43.000000000 +0200
@@ -113,10 +113,10 @@
 for category in $*; do
 	for port in `find $toplevel/$category -type d -maxdepth 1 -mindepth 1 | sort`; do
 		cd $port
-		if [ -f PKGBUILD ]; then
-			. PKGBUILD
+		if [ -f FrugalBuild ]; then
+			. FrugalBuild
 			buildstatus=0
-			if [ ! -f $dest/$pkgname-$pkgver-$pkgrel.pkg.tar.gz ]; then
+			if [ ! -f $dest/$pkgname-$pkgver-$pkgrel.fpm ]; then
 				makepkg $MAKEPKG_OPTS -m -w $dest 2>>$toplevel/makepkg.log
 				if [ $? -gt 0 ]; then
 					buildstatus=2
diff -Naur pacman-2.8.orig/src/package.c pacman-2.8/src/package.c
--- pacman-2.8.orig/src/package.c	2004-07-03 06:25:47.000000000 +0200
+++ pacman-2.8/src/package.c	2004-07-05 17:11:23.000000000 +0200
@@ -402,7 +402,7 @@
 	}
 	strncpy(tmp, p, 512);
 	/* trim file extension (if any) */
-	if((p = strstr(tmp, ".pkg.tar.gz"))) {
+	if((p = strstr(tmp, ".fpm"))) {
 		*p = 0;
 	}
 
diff -Naur pacman-2.8.orig/src/pacman.c pacman-2.8/src/pacman.c
--- pacman-2.8.orig/src/pacman.c	2004-07-03 06:25:47.000000000 +0200
+++ pacman-2.8/src/pacman.c	2004-07-05 17:11:23.000000000 +0200
@@ -351,12 +351,12 @@
 				char *str = (char *)i->data;
 				char name[256], version[64];
 
-				if(strstr(str, ".pkg.tar.gz") == NULL) {
+				if(strstr(str, ".fpm") == NULL) {
 					clean = list_add(clean, strdup(str));
 					continue;
 				}
 				/* we keep partially downloaded files */
-				if(strstr(str, ".pkg.tar.gz.part")) {
+				if(strstr(str, ".fpm.part")) {
 					continue;
 				}
 				if(split_pkgname(str, name, version) != 0) {
@@ -367,10 +367,10 @@
 					char *s = (char *)j->data;
 					char n[256], v[64];
 
-					if(strstr(s, ".pkg.tar.gz") == NULL) {
+					if(strstr(s, ".fpm") == NULL) {
 						continue;
 					}
-					if(strstr(s, ".pkg.tar.gz.part")) {
+					if(strstr(s, ".fpm.part")) {
 						continue;
 					}
 					if(split_pkgname(s, n, v) != 0) {
@@ -1082,17 +1082,17 @@
 					char path[PATH_MAX];
 
 					if(pmo_s_printuris) {
-						snprintf(path, PATH_MAX, "%s-%s.pkg.tar.gz", sync->pkg->name, sync->pkg->version);					
+						snprintf(path, PATH_MAX, "%s-%s.fpm", sync->pkg->name, sync->pkg->version);					
 						files = list_add(files, strdup(path));
 					} else {
-						snprintf(path, PATH_MAX, "%s/%s-%s.pkg.tar.gz",
+						snprintf(path, PATH_MAX, "%s/%s-%s.fpm",
 							ldir, sync->pkg->name, sync->pkg->version);
 						if(stat(path, &buf)) {
 							/* file is not in the cache dir, so add it to the list */
-							snprintf(path, PATH_MAX, "%s-%s.pkg.tar.gz", sync->pkg->name, sync->pkg->version);					
+							snprintf(path, PATH_MAX, "%s-%s.fpm", sync->pkg->name, sync->pkg->version);					
 							files = list_add(files, strdup(path));
 						} else {
-							vprint(" %s-%s.pkg.tar.gz is already in the cache\n", sync->pkg->name, sync->pkg->version);
+							vprint(" %s-%s.fpm is already in the cache\n", sync->pkg->name, sync->pkg->version);
 							count++;
 						}
 					}
@@ -1167,7 +1167,7 @@
 				char *md5sum1, *md5sum2;
 
 				sync = (syncpkg_t*)i->data;
-				snprintf(pkgname, PATH_MAX, "%s-%s.pkg.tar.gz", sync->pkg->name, sync->pkg->version);
+				snprintf(pkgname, PATH_MAX, "%s-%s.fpm", sync->pkg->name, sync->pkg->version);
 
 				md5sum1 = sync->pkg->md5sum;
 				if(md5sum1 == NULL || md5sum1[0] == '\0') {
@@ -1258,7 +1258,7 @@
 				syncpkg_t *sync = (syncpkg_t*)i->data;
 				if(sync->pkg) {
 					MALLOC(str, PATH_MAX);
-					snprintf(str, PATH_MAX, "%s/%s-%s.pkg.tar.gz", ldir, sync->pkg->name, sync->pkg->version);
+					snprintf(str, PATH_MAX, "%s/%s-%s.fpm", ldir, sync->pkg->name, sync->pkg->version);
 					files = list_add(files, str);
 				}
 				for(j = sync->replaces; j; j = j->next) {
diff -Naur pacman-2.8.orig/src/pacsync.c pacman-2.8/src/pacsync.c
--- pacman-2.8.orig/src/pacsync.c	2004-07-03 06:25:48.000000000 +0200
+++ pacman-2.8/src/pacsync.c	2004-07-05 17:11:38.000000000 +0200
@@ -71,7 +71,7 @@
 		snprintf(ldir, PATH_MAX, "%s%s", pmo_root, pmo_dbpath);
 
 		/* build a one-element list */
-		snprintf(path, PATH_MAX, "%s.db.tar.gz", sync->treename);
+		snprintf(path, PATH_MAX, "%s.fdb", sync->treename);
 		files = list_add(files, strdup(path));
 
 		success = 1;
@@ -80,7 +80,7 @@
 			success = 0;
 		}
 		FREELIST(files);
-		snprintf(path, PATH_MAX, "%s/%s.db.tar.gz", ldir, sync->treename);
+		snprintf(path, PATH_MAX, "%s/%s.fdb", ldir, sync->treename);
 
 		if(success) {
 			snprintf(ldir, PATH_MAX, "%s%s/%s", pmo_root, pmo_dbpath, sync->treename);
@@ -248,11 +248,11 @@
 				snprintf(output, PATH_MAX, "%s/%s.part", localpath, fn);
 				strncpy(sync_fnm, fn, 24);
 				/* drop filename extension */
-				ptr = strstr(fn, ".db.tar.gz");
+				ptr = strstr(fn, ".fdb");
 				if(ptr && (ptr-fn) < 24) {
 					sync_fnm[ptr-fn] = '\0';
 				}
-				ptr = strstr(fn, ".pkg.tar.gz");
+				ptr = strstr(fn, ".fpm");
 				if(ptr && (ptr-fn) < 24) {
 					sync_fnm[ptr-fn] = '\0';
 				}
