Date: 2005-09-22
Initial Package Version: 2.9
Upstream Status: http://bugs.archlinux.org/index.php?do=details&id=1477
Origin: Indan Zupancic and Miklos Vajna <vmiklos@frugalware.org>
Description: Adds an UpgradeDelay config option to upgrade only the
packages that are at least <number> days old.
 doc/pacman.8.in |    4 ++++
 src/db.c        |   15 ++++++---------
 src/package.h   |    1 +
 src/pacman.c    |   38 ++++++++++++++++++++++++++++++++------
 src/pacman.h    |    1 +
 5 files changed, 44 insertions(+), 15 deletions(-)
diff -Naur pacman-2.9.7.orig/doc/pacman.8.in pacman-2.9.7/doc/pacman.8.in
--- pacman-2.9.7.orig/doc/pacman.8.in	2005-09-21 23:45:21.000000000 +0200
+++ pacman-2.9.7/doc/pacman.8.in	2005-09-22 00:31:53.000000000 +0200
@@ -260,6 +260,10 @@
 Instructs pacman to ignore any upgrades for this package when performing a
 \fB--sysupgrade\fP.
 .TP
+.B "UpgradeDelay = <number>"
+Upgrade only the packages that are at least <number> days old when
+performing a \fB--sysupgrade\fP.
+.TP
 .B "Include = <path>"
 Include another config file.  This config file can include repositories or
 general configuration options.
diff -Naur pacman-2.9.7.orig/src/db.c pacman-2.9.7/src/db.c
--- pacman-2.9.7.orig/src/db.c	2005-09-21 23:45:21.000000000 +0200
+++ pacman-2.9.7/src/db.c	2005-09-21 23:58:49.000000000 +0200
@@ -264,7 +264,8 @@
 pkginfo_t* db_read(pacdb_t *db, struct dirent *ent, unsigned int inforeq)
 {
 	FILE *fp = NULL;
-	struct stat buf;
+	int fd;
+	struct stat st;
 	pkginfo_t *info = NULL;
 	char path[PATH_MAX];
 	char line[512];
@@ -276,23 +277,19 @@
 	/* we always load DESC */
 	inforeq |= INFRQ_DESC;
 
-	snprintf(path, PATH_MAX, "%s/%s", db->path, ent->d_name);
-	if(stat(path, &buf)) {
-		/* directory doesn't exist or can't be opened */
-		return(NULL);
-	}
-
 	info = newpkg();
 
 	/* DESC */
 	if(inforeq & INFRQ_DESC) {
 		snprintf(path, PATH_MAX, "%s/%s/desc", db->path, ent->d_name);
 		fp = fopen(path, "r");
-		if(fp == NULL) {
+		fd = fileno(fp);
+		if(fp == NULL || fstat(fd, &st)) {
 			fprintf(stderr, "error: %s: %s\n", path, strerror(errno));
 			FREEPKG(info);
 			return(NULL);
 		}
+		info->date = st.st_mtime;
 		while(!feof(fp)) {
 			if(fgets(line, 256, fp) == NULL) {
 				break;
@@ -485,7 +482,7 @@
 	/* INSTALL */
 	if(inforeq & INFRQ_ALL) {
 		snprintf(path, PATH_MAX, "%s/%s/install", db->path, ent->d_name);
-		if(!stat(path, &buf)) {
+		if(!stat(path, &st)) {
 			info->scriptlet = 1;
 		}
 	}
diff -Naur pacman-2.9.7.orig/src/package.h pacman-2.9.7/src/package.h
--- pacman-2.9.7.orig/src/package.h	2005-09-21 23:45:20.000000000 +0200
+++ pacman-2.9.7/src/package.h	2005-09-22 00:02:56.000000000 +0200
@@ -59,6 +59,7 @@
 	unsigned long size;
 	unsigned short scriptlet;
 	unsigned short force;
+	time_t date;
 	unsigned short reason;
 	PMList *license;
 	PMList *replaces;
diff -Naur pacman-2.9.7.orig/src/pacman.c pacman-2.9.7/src/pacman.c
--- pacman-2.9.7.orig/src/pacman.c	2005-09-21 23:45:21.000000000 +0200
+++ pacman-2.9.7/src/pacman.c	2005-09-22 00:24:02.000000000 +0200
@@ -103,6 +103,7 @@
 unsigned short pmo_chomp        = 0;
 unsigned short pmo_usesyslog    = 0;
 unsigned short pmo_nopassiveftp = 0;
+time_t         pmo_upgradedelay = 0;
 
 
 /* list of sync_t structs for sync locations */
@@ -647,8 +648,7 @@
 		}
 		FREELIST(reps);
 	} else if(pmo_s_upgrade) {
-		int newer = 0;
-		int ignore = 0;
+	  	int notall = 0;
 		syncpkg_t *s = NULL;
 
 		logaction(NULL, "starting full system upgrade");
@@ -665,7 +665,7 @@
 							if(is_in(p->name, pmo_ignorepkg) || is_in(p->name, pmo_s_ignore)) {
 								fprintf(stderr, ":: %s-%s: ignoring package upgrade (to be replaced by %s-%s)\n",
 									p->name, p->version, pkg->name, pkg->version);
-								ignore = 1;
+								notall = 1;
 							} else if(yesno(":: Replace %s with %s from \"%s\"? [Y/n] ", p->name, pkg->name, dbs->db->treename)) {
 								/* if confirmed, add this to the 'final' list, designating 'p' as
 								 * the package to replace.
@@ -731,7 +731,7 @@
 				/* local version is newer */
 				fprintf(stderr, ":: %s: local (%s) appears to be newer than repo (%s/%s)\n",
 					local->name, local->version, sync->dbs->sync->treename, sync->pkg->version);
-				newer = 1;
+				notall = 1;
 				FREE(sync);
 				continue;
 			} else if(cmp == 0) {
@@ -742,7 +742,14 @@
 			  /* package should be ignored (IgnorePkg) */
 				fprintf(stderr, ":: %s-%s: ignoring package upgrade (%s)\n",
 					local->name, local->version, sync->pkg->version);
-				ignore = 1;
+				notall = 1;
+				FREE(sync);
+				continue;
+			} else if(istoonew(sync->pkg)) {
+				/* package too new (UpgradeDelay) */
+			  	fprintf(stderr, ":: %s-%s: delaying upgrade of package (%s)\n",
+					local->name, local->version, sync->pkg->version);
+				notall = 1;
 				FREE(sync);
 				continue;
 			}
@@ -763,7 +770,7 @@
 				}
 			}
 		}
-		if((newer || ignore) && allgood) {
+		if(notall && allgood) {
 			fprintf(stderr, ":: Above packages will be skipped.  To manually upgrade use 'pacman -S <pkg>'\n");
 		}
 		/* check if pacman itself is one of the packages to upgrade.  if so, we
@@ -3950,6 +3957,17 @@
 						FREE(pmo_xfercommand);
 						pmo_xfercommand = strndup(ptr, PATH_MAX);
 						vprint("config: xfercommand: %s\n", pmo_xfercommand);
+					} else if (!strcmp(key, "UPGRADEDELAY")) {
+						/* The config value is in days, we use seconds */
+						pmo_upgradedelay = (60*60*24) * atol(ptr);
+						vprint("config: UpgradeDelay: %i\n", pmo_upgradedelay);
+						/* Warn when the delay is rather high (two months for now) */
+						if (pmo_upgradedelay > (60*60*24) * 60)
+							fprintf(stderr, "Warning: UpgradeDelay is very high.\n"
+								"If a package is updated often it will never be upgraded.\n"
+								"Manually update such packages or use a lower value "
+								"to avoid this problem.\n");
+
 					} else if (!strcmp(key, "PROXYSERVER")) {
 						char *p;
 						if(pmo_proxyhost) {
@@ -4229,6 +4247,14 @@
 	return(unlink(file));
 }
 
+int istoonew(pkginfo_t* pkg) {
+	time_t t;
+	if (!pmo_upgradedelay)
+		return 0;
+	time(&t);
+	return((pkg->date + pmo_upgradedelay) > t);
+}
+
 void cleanup(int signum)
 {
 	PMList *lp;
diff -Naur pacman-2.9.7.orig/src/pacman.h pacman-2.9.7/src/pacman.h
--- pacman-2.9.7.orig/src/pacman.h	2005-04-22 02:26:33.000000000 +0200
+++ pacman-2.9.7/src/pacman.h	2005-09-22 00:22:50.000000000 +0200
@@ -58,6 +58,7 @@
 int yesno(char* fmt, ...);
 int lckmk(char *file, int retries, unsigned int sleep_secs);
 int lckrm(char *lckfile);
+int istoonew(pkginfo_t* pkg);
 void cleanup(int signum);
 
 #endif /* PACMAN_H */
