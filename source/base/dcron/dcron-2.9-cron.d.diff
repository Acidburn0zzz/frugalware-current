Date: 2005-09-02
Initial Package Version: 2.9
Upstream Status: Not yet submitted.
Origin: Miklos Vajna <vmiklos@frugalware.org>
Description: Adds support to read system-wide crontabs from /etc/cron.d.
diff -NaruwbBE dcron.orig/crond.8 dcron/crond.8
--- dcron.orig/crond.8	1999-02-10 07:22:37.000000000 +0100
+++ dcron/crond.8	2005-09-03 22:33:42.000000000 +0200
@@ -26,6 +26,9 @@
 .TP 0.5i
 .B "-c directory "
 specify directory containing crontab files.
+.TP 0.5i
+.B "-s directory "
+specify directory containing system-wide crontab files.
 .SH DESCRIPTION
 .B crond 
 is responsible for scanning the crontab files and running
diff -NaruwbBE dcron.orig/database.c dcron/database.c
--- dcron.orig/database.c	2002-03-22 18:54:46.000000000 +0100
+++ dcron/database.c	2005-09-03 23:35:29.000000000 +0200
@@ -6,6 +6,7 @@
  * May be distributed under the GNU General Public License
  */
 
+#include <limits.h>
 #include "defs.h"
 
 Prototype void CheckUpdates(void);
@@ -14,7 +15,7 @@
 Prototype void RunJobs(void);
 Prototype int CheckJobs(void);
 
-void SynchronizeFile(const  char *fileName);
+void SynchronizeFile(const char *userName, const  char *fileName);
 void DeleteFile(const char *userName);
 char *ParseField(char *userName, char *ary, int modvalue, int off, const char **names, char *ptr);
 void FixDayDow(CronLine *line);
@@ -78,7 +79,7 @@
     if ((fi = fopen(CRONUPDATE, "r")) != NULL) {
         remove(CRONUPDATE);
         while (fgets(buf, sizeof(buf), fi) != NULL) {
-            SynchronizeFile(strtok(buf, " \t\r\n"));
+            SynchronizeFile(strtok(buf, " \t\r\n"), strtok(buf, " \t\r\n"));
         }
         fclose(fi);
     }
@@ -128,7 +129,7 @@
                 if (strchr(den->d_name, '.') != NULL)
                     continue;
 		if (getpwnam(den->d_name))
-		    SynchronizeFile(den->d_name);
+		    SynchronizeFile(den->d_name, den->d_name);
 		else
 		    log(7, "ignoring %s\n", den->d_name);
             }
@@ -141,7 +142,7 @@
 }
 
 void
-SynchronizeFile(const char *fileName)
+SynchronizeFile(const char *userName, const char *fileName)
 {
     int maxEntries = MAXLINES;
     int maxLines;
@@ -163,7 +164,7 @@
 		CronFile *file = calloc(1, sizeof(CronFile));
 		CronLine **pline;
 
-		file->cf_User = strdup(fileName);
+		file->cf_User = strdup(userName);
 		pline = &file->cf_LineBase;
 
 		while (fgets(buf, sizeof(buf), fi) != NULL && --maxLines) {
@@ -185,7 +186,7 @@
 		    bzero(&line, sizeof(line));
 
 		    if (DebugOpt)
-			log9("User %s Entry %s\n", fileName, buf);
+			log9("User %s Entry %s\n", userName, buf);
 
 		    /*
 		     * parse date ranges
@@ -232,11 +233,34 @@
 		FileBase = file;
 
 		if (maxLines == 0 || maxEntries == 0)
-		    log9("Maximum number of lines reached for user %s\n", fileName);
+		    log9("Maximum number of lines reached for user %s\n", userName);
 	    }
 	    fclose(fi);
 	} 
     }
+    if (strcmp(fileName, "root") == 0)
+    {
+        DIR *dir;
+        struct dirent *den;
+        char fullfileName[PATH_MAX];
+
+        if ((dir = opendir(SCDir)))
+        {
+            while ((den = readdir(dir)))
+            {
+                if (strchr(den->d_name, '.') != NULL)
+                    continue;
+                snprintf(fullfileName, PATH_MAX, "%s/%s", SCDir, den->d_name);
+                SynchronizeFile("root", fullfileName);
+            }
+            closedir(dir);
+        }
+        else
+        {
+            log9("Unable to open %s!\n", SCDir);
+            exit(20);
+        }
+    }
 }
 
 char *
diff -NaruwbBE dcron.orig/defs.h dcron/defs.h
--- dcron.orig/defs.h	2002-12-17 21:06:51.000000000 +0100
+++ dcron/defs.h	2005-09-03 22:34:57.000000000 +0200
@@ -28,6 +28,9 @@
 #ifndef CRONTABS
 #define CRONTABS	"/var/spool/cron/crontabs"
 #endif
+#ifndef SCRONTABS
+#define SCRONTABS	"/etc/cron.d"
+#endif
 #ifndef TMPDIR
 #define TMPDIR		"/tmp"
 #endif
diff -NaruwbBE dcron.orig/main.c dcron/main.c
--- dcron.orig/main.c	2002-12-17 21:05:44.000000000 +0100
+++ dcron/main.c	2005-09-03 23:21:35.000000000 +0200
@@ -16,13 +16,17 @@
 Prototype short LogLevel;
 Prototype short ForegroundOpt;
 Prototype char *CDir;
+Prototype char *SCDir;
 Prototype int DaemonUid;
+Prototype int InSyncFileRoot;
 
 short DebugOpt;
 short LogLevel = 8;
 short ForegroundOpt;
 char  *CDir = CRONTABS;
+char  *SCDir = SCRONTABS;
 int DaemonUid;
+int InSyncFileRoot;
 
 int
 main(int ac, char **av)
@@ -58,6 +62,9 @@
 	    case 'c':
 		CDir = (*ptr) ? ptr : av[++i];
 		continue;
+	    case 's':
+		SCDir = (*ptr) ? ptr : av[++i];
+		continue;
 	    default:
 		break;
 	    }
@@ -73,7 +80,7 @@
         if (i > ac)
             puts("expected argument for option");
 	printf("dcron " VERSION "\n");
-	printf("dcron -d[#] -l[#] -f -b -c dir\n");
+	printf("dcron -d[#] -l[#] -f -b -c dir -s dir\n");
 	exit(1);
     }
 
