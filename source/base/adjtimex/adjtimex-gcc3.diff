diff -Naur adjtimex-1.13.orig/adjtimex.c adjtimex-1.13/adjtimex.c
--- adjtimex-1.13.orig/adjtimex.c	2002-01-07 02:58:03.000000000 +0100
+++ adjtimex-1.13/adjtimex.c	2004-04-11 21:00:26.000000000 +0200
@@ -163,37 +163,7 @@
 void
 usage(void)
 {
-  char msg[]=
-"
-Usage: adjtimex  [OPTION]... 
-Mandatory or optional arguments to long options are mandatory or optional
-for short options too.
-
-Get/Set Kernel Time Parameters:
-       -p, --print               print values of kernel time variables
-       -t, --tick val            set the kernel tick interval in usec
-       -f, --frequency newfreq   set system clock frequency offset
-       -s, --singleshot adj      slew the system clock by adj usec
-       -o, --offset adj          add a time offset of adj usec
-       -m, --maxerror val        set maximum error (usec)
-       -e, --esterror val        set estimated error (usec)
-       -T, --timeconstant val    set phase locked loop time constant
-       -a, --adjust[=count]      set system clock parameters per CMOS 
-                                 clock or (with --review) log file
-
-Estimate Systematic Drifts:
-       -c, --compare[=count]     compare system and CMOS clocks
-       -i, --interval tim        set clock comparison interval (sec)
-       -l, --log[=file]          log current times to file
-           --host timeserver     query the timeserver
-       -w, --watch               get current time from user
-       -r, --review[=file]       review clock log file, estimate drifts
-       -u, --utc                 the CMOS clock is set to UTC
-
-Informative Output:
-           --help                print this help, then exit
-       -v, --version             print adjtimex program version, then exit
-";
+  char msg[]="\nUsage: adjtimex  [OPTION]...\nMandatory or optional arguments to long options are mandatory or optional\nfor short options too.\n\nGet/Set Kernel Time Parameters:\n       -p, --print               print values of kernel time variables\n       -t, --tick val            set the kernel tick interval in usec\n       -f, --frequency newfreq   set system clock frequency offset\n       -s, --singleshot adj      slew the system clock by adj usec\n       -o, --offset adj          add a time offset of adj usec\n       -m, --maxerror val        set maximum error (usec)\n       -e, --esterror val        set estimated error (usec)\n       -T, --timeconstant val    set phase locked loop time constant\n       -a, --adjust[=count]      set system clock parameters per CMOS \n                                 clock or (with --review) log file\n\nEstimate Systematic Drifts:\n       -c, --compare[=count]     compare system and CMOS clocks\n       -i, --interval tim        set clock comparison interval (sec)\n       -l, --log[=file]          log current times to file\n           --host timeserver     query the timeserver\n       -w, --watch               get current time from user\n       -r, --review[=file]       review clock log file, estimate drifts\n       -u, --utc                 the CMOS clock is set to UTC\n\nInformative Output:\n           --help                print this help, then exit\n       -v, --version             print adjtimex program version, then exit\n";
 
   fputs(msg, stdout);
   exit(0);
