#!/bin/bash

# (c) 2004 Vajna Miklos <vmiklos@frugalware.org>
# rc.udev for Frugalware
# version 0.9.1
# distributed under GPL license
# 
# Copyright (C) 2004 Greg Kroah-Hartman <greg@kroah.com>
# Released under the GPL v2 only.
#
# Thanks go out to the Gentoo developers for proving 
# that this is possible to do.

mount / -o rw,remount
mount none -t sysfs /sys

export MODPROBE_OPTIONS="--use-blacklist"

. /etc/udev/udev.conf

prog=udev
sysfs_dir=/sys
bin=/sbin/udev
udevd=/sbin/udevd
udev_root="/dev"

make_extra_nodes () {
	# there are a few things that sysfs does not export for us.
	# these things go here (and remember to remove them in 
	# remove_extra_nodes()
	#
	# Thanks to Gentoo for the initial list of these.
	ln -snf /proc/self/fd $udev_root/fd
	ln -snf /proc/self/fd/0 $udev_root/stdin
	ln -snf /proc/self/fd/1 $udev_root/stdout
	ln -snf /proc/self/fd/2 $udev_root/stderr
	ln -snf /proc/kcore $udev_root/core

	mkdir $udev_root/pts
	mkdir $udev_root/shm
}

start()
{
	/sbin/udevadm trigger
	# Wait for udev events
	/sbin/udevadm settle --timeout=90
}

# don't use udev if sysfs is not mounted.
if [ ! -d $sysfs_dir/block ]; then
	exit 1
fi

#echo "mounting... ramfs at $udev_root"
mount -n -t ramfs none $udev_root

# propogate /udev from /sys
export ACTION=add
export UDEV_NO_SLEEP=1
#echo "Creating initial udev device nodes:"


#echo "making extra nodes"
make_extra_nodes

#echo "udev startup is finished!"

if ls /lib/udev/devices/* 2>/dev/null >/dev/null;then
	cp -a /lib/udev/devices/* /dev
fi

# actually we need that here
if [ -e /proc/cmdline ]; then
	if grep -q quiet /proc/cmdline; then
		echo "0" > /proc/sys/kernel/printk
	else
		echo "6" > /proc/sys/kernel/printk
	fi
else # ohh well then mute anyway
	echo "0" > /proc/sys/kernel/printk
fi

# be sure we use /sbin/modprobe 
echo "/sbin/modprobe" > /proc/sys/kernel/modprobe
echo > /proc/sys/kernel/hotplug

# check if udevd is already running
if ! [ `pidof -o %PPID /sbin/udevd` ]; then
	/sbin/udevd --daemon
fi

mkdir -p /dev/.udev/queue
start

if [ -f "/sys/class/tty/console/uevent" ]; then
	# trigger the sorted events
	echo -e '\000\000\000\000' > /proc/sys/kernel/hotplug
fi

## just in case we have a box with a lot USB or external HW try detecting again
start

mount / -o ro,remount

# end of rc.udev
