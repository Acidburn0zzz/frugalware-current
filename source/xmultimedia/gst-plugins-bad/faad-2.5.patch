diff -Naurp gst-plugins-bad-0.10.4/configure.ac gst-plugins-bad-0.10.4-faad/configure.ac
--- gst-plugins-bad-0.10.4/configure.ac	2006-12-21 16:10:47.000000000 +0100
+++ gst-plugins-bad-0.10.4-faad/configure.ac	2006-12-21 21:52:56.000000000 +0100
@@ -429,7 +429,7 @@ dnl **** Free AAC Decoder (FAAD) ****
 translit(dnm, m, l) AM_CONDITIONAL(USE_FAAD, true)
 GST_CHECK_FEATURE(FAAD, [AAC decoder plug-in], faad, [
   HAVE_FAAD="yes"
-  GST_CHECK_LIBHEADER(FAAD, faad, faacDecOpen, -lm, faad.h,
+  GST_CHECK_LIBHEADER(FAAD, faad, NeAACDecOpen, -lm, neaacdec.h,
     FAAD_LIBS="-lfaad -lm", HAVE_FAAD="no")
   if test $HAVE_FAAD = "yes"; then
     AC_MSG_CHECKING([Checking for FAAD >= 2])
diff -Naurp gst-plugins-bad-0.10.4/ext/faad/gstfaad.c gst-plugins-bad-0.10.4-faad/ext/faad/gstfaad.c
--- gst-plugins-bad-0.10.4/ext/faad/gstfaad.c	2006-10-06 17:49:39.000000000 +0200
+++ gst-plugins-bad-0.10.4-faad/ext/faad/gstfaad.c	2006-12-21 22:16:25.000000000 +0100
@@ -38,14 +38,15 @@
  * but not all, hence this Truly Evil Hack. This hack will need updating if
  * upstream ever releases something with the new API.
  */
-#define faacDecInit faacDecInit_no_definition
-#define faacDecInit2 faacDecInit2_no_definition
+#define NeAACDecInit NeAACDecInit_no_definition
+#define NeAACDecInit2 NeAACDecInit2_no_definition
 #include "gstfaad.h"
-#undef faacDecInit
-#undef faacDecInit2
+#undef NeAACDecInit
+#undef NeAACDecInit2
 
-extern long faacDecInit (faacDecHandle, guint8 *, guint32, guint32 *, guint8 *);
-extern int8_t faacDecInit2 (faacDecHandle, guint8 *, guint32,
+extern long NeAACDecInit (NeAACDecHandle, guint8 *, guint32, 
+    guint32 *, guint8 *);
+extern int8_t NeAACDecInit2 (NeAACDecHandle, guint8 *, guint32,
     guint32 *, guint8 *);
 
 GST_DEBUG_CATEGORY_STATIC (faad_debug);
@@ -305,7 +306,7 @@ gst_faad_setcaps (GstPad * pad, GstCaps 
       goto wrong_length;
 
     /* someone forgot that char can be unsigned when writing the API */
-    if ((gint8) faacDecInit2 (faad->handle, cdata, csize, &samplerate,
+    if ((gint8) NeAACDecInit2 (faad->handle, cdata, csize, &samplerate,
             &channels) < 0)
       goto init_failed;
 
@@ -365,7 +366,7 @@ wrong_length:
   }
 init_failed:
   {
-    GST_DEBUG_OBJECT (faad, "faacDecInit2() failed");
+    GST_DEBUG_OBJECT (faad, "NeAACDecInit2() failed");
     return FALSE;
   }
 }
@@ -993,7 +994,7 @@ gst_faad_src_query (GstPad * pad, GstQue
 
 
 static gboolean
-gst_faad_update_caps (GstFaad * faad, faacDecFrameInfo * info)
+gst_faad_update_caps (GstFaad * faad, NeAACDecFrameInfo * info)
 {
   GstAudioChannelPosition *pos;
   gboolean ret;
@@ -1177,7 +1178,7 @@ gst_faad_chain (GstPad * pad, GstBuffer 
   guchar *input_data;
   GstFaad *faad;
   GstBuffer *outbuf;
-  faacDecFrameInfo info;
+  NeAACDecFrameInfo info;
   void *out;
   gboolean run_loop = TRUE;
   guint sync_off;
@@ -1228,17 +1229,17 @@ gst_faad_chain (GstPad * pad, GstBuffer 
      * appropriate initialisation info... if not, we use our fake_codec_data
      */
     if (looks_like_valid_header (input_data, input_size) || !faad->packetised) {
-      if (faacDecInit (faad->handle, input_data, input_size, &rate, &ch) < 0)
+      if (NeAACDecInit (faad->handle, input_data, input_size, &rate, &ch) < 0)
         goto init_failed;
 
-      GST_DEBUG_OBJECT (faad, "faacDecInit() ok: rate=%u,channels=%u", rate,
+      GST_DEBUG_OBJECT (faad, "NeAACDecInit() ok: rate=%u,channels=%u", rate,
           ch);
     } else {
-      if ((gint8) faacDecInit2 (faad->handle, faad->fake_codec_data, 2,
+      if ((gint8) NeAACDecInit2 (faad->handle, faad->fake_codec_data, 2,
               &rate, &ch) < 0) {
         goto init2_failed;
       }
-      GST_DEBUG_OBJECT (faad, "faacDecInit2() ok: rate=%u,channels=%u", rate,
+      GST_DEBUG_OBJECT (faad, "NeAACDecInit2() ok: rate=%u,channels=%u", rate,
           ch);
     }
 
@@ -1271,7 +1272,7 @@ gst_faad_chain (GstPad * pad, GstBuffer 
       }
     }
 
-    out = faacDecDecode (faad->handle, &info, input_data + skip_bytes,
+    out = NeAACDecDecode (faad->handle, &info, input_data + skip_bytes,
         input_size - skip_bytes);
 
     if (info.error > 0) {
@@ -1279,30 +1280,30 @@ gst_faad_chain (GstPad * pad, GstBuffer 
       guint8 ch;
 
       GST_DEBUG_OBJECT (faad, "decoding error: %s",
-          faacDecGetErrorMessage (info.error));
+          NeAACDecGetErrorMessage (info.error));
 
       goto out;
 
       if (!faad->packetised)
         goto decode_error;
 
-      /* decode error? try again using faacDecInit2 
+      /* decode error? try again using NeAACDecInit2 
        * fabricated private codec data from sink caps */
       gst_faad_close_decoder (faad);
       if (!gst_faad_open_decoder (faad))
         goto init2_failed;
 
-      GST_DEBUG_OBJECT (faad, "decoding error, reopening with faacDecInit2()");
-      if ((gint8) faacDecInit2 (faad->handle, faad->fake_codec_data, 2,
+      GST_DEBUG_OBJECT (faad, "decoding error, reopening with NeAACDecInit2()");
+      if ((gint8) NeAACDecInit2 (faad->handle, faad->fake_codec_data, 2,
               &rate, &ch) < 0) {
         goto init2_failed;
       }
 
-      GST_DEBUG_OBJECT (faad, "faacDecInit2(): rate=%d,channels=%d", rate, ch);
+      GST_DEBUG_OBJECT (faad, "NeAACDecInit2(): rate=%d,channels=%d", rate, ch);
 
       /* let's try again */
       info.error = 0;
-      out = faacDecDecode (faad->handle, &info, input_data + skip_bytes,
+      out = NeAACDecDecode (faad->handle, &info, input_data + skip_bytes,
           input_size - skip_bytes);
 
       if (info.error) {
@@ -1311,7 +1312,7 @@ gst_faad_chain (GstPad * pad, GstBuffer 
           goto decode_error;
         GST_DEBUG_OBJECT (faad,
             "Failed to decode buffer: %s, count = %d, trying to resync",
-            faacDecGetErrorMessage (info.error), faad->error_count);
+            NeAACDecGetErrorMessage (info.error), faad->error_count);
         continue;
       }
 
@@ -1420,14 +1421,14 @@ init_failed:
 init2_failed:
   {
     GST_ELEMENT_ERROR (faad, STREAM, DECODE, (NULL),
-        ("%s() failed", (faad->handle) ? "faacDecInit2" : "faacDecOpen"));
+        ("%s() failed", (faad->handle) ? "NeAACDecInit2" : "NeAACDecOpen"));
     ret = GST_FLOW_ERROR;
     goto out;
   }
 decode_error:
   {
     GST_ELEMENT_ERROR (faad, STREAM, DECODE, (NULL),
-        ("Failed to decode buffer: %s", faacDecGetErrorMessage (info.error)));
+        ("Failed to decode buffer: %s", NeAACDecGetErrorMessage (info.error)));
     ret = GST_FLOW_ERROR;
     goto out;
   }
@@ -1436,22 +1437,22 @@ decode_error:
 static gboolean
 gst_faad_open_decoder (GstFaad * faad)
 {
-  faacDecConfiguration *conf;
+  NeAACDecConfiguration *conf;
 
-  faad->handle = faacDecOpen ();
+  faad->handle = NeAACDecOpen ();
 
   if (faad->handle == NULL) {
-    GST_WARNING_OBJECT (faad, "faacDecOpen() failed");
+    GST_WARNING_OBJECT (faad, "NeAACDecOpen() failed");
     return FALSE;
   }
 
-  conf = faacDecGetCurrentConfiguration (faad->handle);
+  conf = NeAACDecGetCurrentConfiguration (faad->handle);
   conf->defObjectType = LC;
   /* conf->dontUpSampleImplicitSBR = 1; */
   conf->outputFormat = FAAD_FMT_16BIT;
 
-  if (faacDecSetConfiguration (faad->handle, conf) == 0) {
-    GST_WARNING_OBJECT (faad, "faacDecSetConfiguration() failed");
+  if (NeAACDecSetConfiguration (faad->handle, conf) == 0) {
+    GST_WARNING_OBJECT (faad, "NeAACDecSetConfiguration() failed");
     return FALSE;
   }
 
@@ -1462,7 +1463,7 @@ static void
 gst_faad_close_decoder (GstFaad * faad)
 {
   if (faad->handle) {
-    faacDecClose (faad->handle);
+    NeAACDecClose (faad->handle);
     faad->handle = NULL;
   }
 }
diff -Naurp gst-plugins-bad-0.10.4/ext/faad/gstfaad.h gst-plugins-bad-0.10.4-faad/ext/faad/gstfaad.h
--- gst-plugins-bad-0.10.4/ext/faad/gstfaad.h	2006-05-31 21:26:24.000000000 +0200
+++ gst-plugins-bad-0.10.4-faad/ext/faad/gstfaad.h	2006-12-21 22:18:42.000000000 +0100
@@ -20,8 +20,10 @@
 #ifndef __GST_FAAD_H__
 #define __GST_FAAD_H__
 
+
+
 #include <gst/gst.h>
-#include <faad.h>
+#include <neaacdec.h>
 
 G_BEGIN_DECLS
 
@@ -51,7 +53,7 @@ typedef struct _GstFaad {
   GstBuffer *tempbuf;    /* used to keep input leftovers          */
 
   /* FAAD object */
-  faacDecHandle handle;
+  NeAACDecHandle handle;
   gboolean init;
 
   /* FAAD channel setup */
